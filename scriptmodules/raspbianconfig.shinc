#!/bin/bash

#  RetroPie-Setup - Shell script for initializing Raspberry Pi 
#  with RetroArch, various cores, and EmulationStation (a graphical 
#  front end).
# 
#  (c) Copyright 2012-2013  Florian MÃ¼ller (contact@petrockblock.com)
# 
#  RetroPie-Setup homepage: https://github.com/petrockblog/RetroPie-Setup
# 
#  Permission to use, copy, modify and distribute RetroPie-Setup in both binary and
#  source form, for non-commercial purposes, is hereby granted without fee,
#  providing that this license information and copyright notice appear with
#  all copies and any derived work.
# 
#  This software is provided 'as-is', without any express or implied
#  warranty. In no event shall the authors be held liable for any damages
#  arising from the use of this software.
# 
#  RetroPie-Setup is freeware for PERSONAL USE only. Commercial users should
#  seek permission of the copyright holders first. Commercial use includes
#  charging money for RetroPie-Setup or software derived from RetroPie-Setup.
# 
#  The copyright holders request that bug fixes and improvements to the code
#  should be forwarded to them so everyone can benefit from the modifications
#  in future versions.
# 
#  Many, many thanks go to all people that provide the individual packages!!!
# 
#  Raspberry Pi is a trademark of the Raspberry Pi Foundation.
# 

function rc_install_rpiupdate()
{
    # install latest rpi-update script (to enable firmware update)
    printMsg "Installing latest rpi-update script"
    # make sure that certificates are installed
    apt-get install -y ca-certificates
    wget http://goo.gl/1BOfJ -O /usr/bin/rpi-update && chmod +x /usr/bin/rpi-update
}

function rc_run_rpiupdate()
{
    printMsg "Starting rpi-update script"
    /usr/bin/rpi-update
    __doReboot=1
    chmod 777 /dev/fb0
    ensureKeyValueShort "gpu_mem" "128" "/boot/config.txt"
}

# update APT repositories
function rc_update_apt() 
{
    printMsg "Updating APT-GET database"
    apt-get -y update
}

# upgrade APT packages
function rc_upgrade_apt()
{
    printMsg "Performing APT-GET upgrade"
    apt-get -y upgrade
    chmod 777 /dev/fb0
    ensureKeyValueShort "gpu_mem" "128" "/boot/config.txt"
}

function rc_configureBootConfig()
{
    ensureKeyValueShort "gpu_mem" "128" "/boot/config.txt"
    ensureKeyValueShort "overscan_scale" "1" "/boot/config.txt"
}

# add user $user to groups "video", "audio", and "input"
function rc_add_to_groups()
{
    printMsg "Adding user $user to groups video, audio, and input."
    rc_add_user_to_group $user video
    rc_add_user_to_group $user audio
    rc_add_user_to_group $user input
}

# add user $1 to group $2, create the group if it doesn't exist
function rc_add_user_to_group()
{
    if [ -z $(egrep -i "^$2" /etc/group) ]
    then
      addgroup $2
    fi
    adduser $1 $2
}

# make sure ALSA, uinput, and joydev modules are active
function rc_ensure_modules()
{
    printMsg "Enabling ALSA, uinput, and joydev modules permanently"
    modprobe snd_bcm2835
    modprobe uinput
    modprobe joydev

    if ! grep -q "uinput" /etc/modules; then
        addLineToFile "uinput" "/etc/modules"
    else
        echo -e "uinput module already contained in /etc/modules"
    fi
    if ! grep -q "joydev" /etc/modules; then
        addLineToFile "joydev" "/etc/modules"
    else
        echo -e "joydev module already contained in /etc/modules"
    fi    
}

# needed by SDL for working joypads
function rc_exportSDLNOMOUSE()
{
    printMsg "Exporting SDL_NOMOUSE=1 permanently to $home/.bashrc"
    export SDL_NOMOUSE=1
    if ! grep -q "export SDL_NOMOUSE=1" $home/.bashrc; then
        echo -e "\nexport SDL_NOMOUSE=1" >> $home/.bashrc
    else
        echo -e "SDL_NOMOUSE=1 already contained in $home/.bashrc"
    fi    
}

# make sure that all needed packages are installed
function rc_installAPTPackages()
{
    printMsg "Making sure that all needed packaged are installed"
    apt-get install -y libsdl1.2-dev screen scons libasound2-dev pkg-config libgtk2.0-dev \
                        libboost-filesystem-dev libboost-system-dev zip python-imaging \
                        libfreeimage-dev libfreetype6-dev libxml2 libxml2-dev libbz2-dev \
                        libaudiofile-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev \
                        joystick fbi gcc-4.7 automake1.4 libcurl4-openssl-dev  libzip-dev \
                        build-essential nasm libgl1-mesa-dev libglu1-mesa-dev libsdl1.2-dev \
                        libvorbis-dev libpng12-dev libvpx-dev freepats subversion \
                        libboost-serialization-dev libboost-thread-dev libsdl-ttf2.0-dev \
                        cmake g++-4.7 unrar-free p7zip p7zip-full libeigen3-dev bluez-utils \
                        bluez-compat bluez-hcidump checkinstall libusb-dev libbluetooth-dev
                        # libgles2-mesa-dev

    # remove PulseAudio since this is slowing down the whole system significantly
    apt-get remove -y pulseaudio
    apt-get -y autoremove
}

# remove all packages that are installed by the RetroPie Setup Script
function rc_removeAPTPackages()
{
    printMsg "Making sure that all packages that are installed by the script are removed."
    apt-get remove -y libsdl1.2-dev screen scons libasound2-dev pkg-config libgtk2.0-dev \
                        libboost-filesystem-dev libboost-system-dev zip python-imaging \
                        libfreeimage-dev libfreetype6-dev libxml2 libxml2-dev libbz2-dev \
                        libaudiofile-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev \
                        joystick fbi gcc-4.7 automake1.4 libcurl4-openssl-dev  libzip-dev \
                        build-essential nasm libgl1-mesa-dev libglu1-mesa-dev libsdl1.2-dev \
                        libvorbis-dev libpng12-dev libvpx-dev freepats subversion \
                        libboost-serialization-dev libboost-thread-dev libsdl-ttf2.0-dev \
                        cmake g++-4.7 unrar-free p7zip p7zip-full libeigen3-dev bluez-utils \
                        bluez-compat bluez-hcidump checkinstall libusb-dev libbluetooth-dev
                        # libgles2-mesa-dev

    apt-get -y autoremove   

    dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "Successfully removed APT packages. For a complete uninstall you need to delete the 'RetroPie' folder on your own." 22 76
}

# fix for RaspBMC
function rc_fixForXBian()
{
    echo "/opt/vc/lib" > /etc/ld.so.conf.d/vc.conf    
    ldconfig
}

# Disables safe mode (http://www.raspberrypi.org/phpBB3/viewtopic.php?p=129413) in order to make GPIO adapters work
function rc_setAvoidSafeMode()
{  
    printMsg "Setting avoid_safe_mode=1"
    ensureKeyValueBootconfig "avoid_safe_mode" 1 "/boot/config.txt"
}

# Disable timeouts so that Emulation Station does not freeze (https://github.com/Aloshi/EmulationStation/issues/99#issuecomment-24127242)
function rc_disableTimeouts()
{
    printMsg "Disabling blank and powerdown timeouts in /etc/kbd/config"
    sed -i 's/BLANK_TIME=30/BLANK_TIME=0/g' /etc/kbd/config
    sed -i 's/POWERDOWN_TIME=30/POWERDOWN_TIME=0/g' /etc/kbd/config
}
