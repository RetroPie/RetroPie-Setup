diff --git a/configuration.c b/configuration.c
index f0750fb..0f734a5 100644
--- a/configuration.c
+++ b/configuration.c
@@ -1325,6 +1325,8 @@ static struct config_path_setting *populate_settings_path(
          settings->paths.path_core_options, false, NULL, true);
    SETTING_PATH("libretro_info_path",
          settings->paths.path_libretro_info, false, NULL, true);
+   SETTING_PATH("video_shader",
+          settings->paths.path_shader, false, NULL, true);
    SETTING_PATH("content_database_path",
          settings->paths.path_content_database, false, NULL, true);
    SETTING_PATH("cheat_database_path",
@@ -2520,6 +2522,7 @@ void config_set_defaults(void *data)
    *settings->paths.path_content_music_history   = '\0';
    *settings->paths.path_content_video_history   = '\0';
    *settings->paths.path_cheat_settings    = '\0';
+   *settings->paths.path_shader   = '\0';
 #if !defined(__APPLE__)
    *settings->arrays.bundle_assets_src = '\0';
    *settings->arrays.bundle_assets_dst = '\0';
@@ -4470,6 +4473,10 @@ bool config_save_overrides(enum override_type type, void *data)
 
       for (i = 0; i < (unsigned)path_settings_size; i++)
       {
+         /* blacklist video_shader, better handled by shader presets*/
+         if (string_is_equal(path_settings[i].ident, "video_shader"))
+            continue;
+
          if (!string_is_equal(path_settings[i].ptr, path_overrides[i].ptr))
             config_set_path(conf, path_overrides[i].ident,
                   path_overrides[i].ptr);
diff --git a/configuration.h b/configuration.h
index 0bad72c..3c0e342 100644
--- a/configuration.h
+++ b/configuration.h
@@ -439,6 +439,7 @@ typedef struct settings
       char path_libretro_info[PATH_MAX_LENGTH];
       char path_cheat_settings[PATH_MAX_LENGTH];
       char path_font[PATH_MAX_LENGTH];
+      char path_shader[PATH_MAX_LENGTH];
       char path_rgui_theme_preset[PATH_MAX_LENGTH];
 
       char directory_audio_filter[PATH_MAX_LENGTH];
diff --git a/retroarch.c b/retroarch.c
index 9850c21..04cb3ff 100644
--- a/retroarch.c
+++ b/retroarch.c
@@ -36655,7 +36655,9 @@ static bool retroarch_load_shader_preset_internal(
  * core-specific:   $CONFIG_DIR/$CORE_NAME/$CORE_NAME.$PRESET_EXT
  * folder-specific: $CONFIG_DIR/$CORE_NAME/$FOLDER_NAME.$PRESET_EXT
  * game-specific:   $CONFIG_DIR/$CORE_NAME/$GAME_NAME.$PRESET_EXT
+ * config:          preset from the configuration file, configured via 'video_shader'
  *
+ *retroarch_load_shader_preset_internal
  * $CONFIG_DIR is expected to be Menu Config directory, or failing that, the
  * directory where retroarch.cfg is stored.
  *
@@ -36742,6 +36744,14 @@ static bool retroarch_load_shader_preset(struct rarch_state *p_rarch,
                dirs[i], NULL,
                "global"))
          goto success;
+      /* Configuration file shader path found? */
+      if (retroarch_load_shader_preset_internal(
+              shader_path,
+              sizeof(shader_path),
+              dirs[i],
+              NULL,
+              "config"))
+         goto success;
    }
    return false;
 
