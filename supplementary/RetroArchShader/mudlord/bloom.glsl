// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _color1;
struct output_dummy {
    vec4 _color1;
};
vec4 _oPosition1;
vec4 _r0007;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec4 _oColor;
    vec2 _otexCoord;
    _r0007 = VertexCoord.x*MVPMatrix[0];
    _r0007 = _r0007 + VertexCoord.y*MVPMatrix[1];
    _r0007 = _r0007 + VertexCoord.z*MVPMatrix[2];
    _r0007 = _r0007 + VertexCoord.w*MVPMatrix[3];
    _oPosition1 = _r0007;
    _oColor = COLOR;
    _otexCoord = TexCoord.xy;
    gl_Position = _r0007;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _color;
struct output_dummy {
    vec4 _color;
};
vec4 _TMP2;
vec4 _TMP1;
uniform sampler2D Texture;
vec2 _c0008;
vec3 _TMP9;
COMPAT_VARYING vec4 TEX0;
uniform vec2 _PixelOffsets[13];
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec3 _pixel;
    vec3 _Color;
    output_dummy _OUT;
    _c0008 = TEX0.xy + _PixelOffsets[0]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _pixel*2.21600011E-03;
    _c0008 = TEX0.xy + _PixelOffsets[1]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*8.76399968E-03;
    _c0008 = TEX0.xy + _PixelOffsets[2]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*2.69949995E-02;
    _c0008 = TEX0.xy + _PixelOffsets[3]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*6.47590011E-02;
    _c0008 = TEX0.xy + _PixelOffsets[4]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*1.20985001E-01;
    _c0008 = TEX0.xy + _PixelOffsets[5]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*1.76033005E-01;
    _c0008 = TEX0.xy + _PixelOffsets[6]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*1.99470997E-01;
    _c0008 = TEX0.xy + _PixelOffsets[7]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*1.76033005E-01;
    _c0008 = TEX0.xy + _PixelOffsets[8]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*1.20985001E-01;
    _c0008 = TEX0.xy + _PixelOffsets[9]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*6.47590011E-02;
    _c0008 = TEX0.xy + _PixelOffsets[10]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*2.69949995E-02;
    _c0008 = TEX0.xy + _PixelOffsets[11]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*8.76399968E-03;
    _c0008 = TEX0.xy + _PixelOffsets[12]*5.00000000E+00;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0008);
    _pixel = (_TMP1 + 3.00000012E-01).xyz;
    _pixel = _pixel*2.22222233E+00;
    _pixel = _pixel*(1.00000000E+00 + _pixel/6.40000045E-01);
    _pixel = _pixel - 5.00000000E+00;
    _TMP9 = max(_pixel, vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00));
    _pixel = _TMP9/(1.00000000E+01 + _TMP9);
    _Color = _Color + _pixel*2.21600011E-03;
    _TMP2 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _OUT._color = vec4(_Color.x, _Color.y, _Color.z, 1.00000000E+00) + _TMP2;
    FragColor = _OUT._color;
    return;
} 
#endif
