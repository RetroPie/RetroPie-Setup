// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _t1;
COMPAT_VARYING     vec2 _texCoord1;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord1;
    vec4 _t1;
};
out_vertex _ret_0;
input_dummy _IN1;
vec4 _r0008;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    vec2 _ps;
    _r0008 = VertexCoord.x*MVPMatrix[0];
    _r0008 = _r0008 + VertexCoord.y*MVPMatrix[1];
    _r0008 = _r0008 + VertexCoord.z*MVPMatrix[2];
    _r0008 = _r0008 + VertexCoord.w*MVPMatrix[3];
    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);
    _OUT._t1.xy = vec2(0.00000000E+00, -_ps.y);
    _OUT._t1.zw = vec2(-_ps.x, 0.00000000E+00);
    _ret_0._position1 = _r0008;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord1 = TexCoord.xy;
    _ret_0._t1 = _OUT._t1;
    gl_Position = _r0008;
    COL0 = COLOR;
    TEX0.xy = TexCoord.xy;
    TEX1 = _OUT._t1;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord1;
    TEX1 = _ret_0._t1;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 _t1;
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _color1;
    vec2 _texCoord;
    vec4 _t1;
};
vec4 _ret_0;
vec3 _TMP66;
vec3 _TMP67;
vec3 _TMP68;
vec3 _TMP55;
float _TMP56;
vec3 _TMP70;
vec3 _TMP52;
float _TMP53;
vec3 _TMP49;
float _TMP50;
float _TMP47;
float _TMP46;
float _TMP45;
float _TMP44;
float _TMP43;
float _TMP42;
float _TMP41;
float _TMP40;
float _TMP39;
float _TMP37;
float _TMP36;
float _TMP35;
float _TMP34;
float _TMP33;
float _TMP32;
float _TMP31;
float _TMP30;
float _TMP29;
float _TMP27;
float _TMP26;
float _TMP25;
float _TMP24;
float _TMP23;
float _TMP22;
float _TMP21;
float _TMP20;
float _TMP19;
vec4 _TMP18;
vec4 _TMP17;
vec4 _TMP16;
vec4 _TMP15;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
vec4 _TMP10;
vec4 _TMP9;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _x0081;
vec2 _c0085;
vec2 _c0087;
vec2 _c0089;
vec2 _c0091;
vec2 _c0095;
vec2 _c0097;
vec2 _c0099;
vec2 _c0101;
vec2 _c0103;
vec2 _c0105;
vec2 _c0107;
vec2 _c0109;
vec2 _c0111;
vec2 _c0113;
vec2 _c0115;
vec2 _c0117;
vec2 _c0119;
vec2 _c0121;
float _TMP126;
float _TMP130;
float _TMP134;
float _TMP138;
float _TMP142;
float _TMP146;
float _TMP150;
float _TMP154;
vec3 _r0201;
vec3 _v0201;
vec3 _r0213;
vec3 _v0213;
vec3 _r0225;
vec3 _v0225;
vec3 _r0237;
vec3 _v0237;
vec3 _r0249;
vec3 _v0249;
vec3 _r0261;
vec3 _v0261;
vec3 _r0273;
vec3 _v0273;
vec3 _r0285;
vec3 _v0285;
vec3 _r0297;
vec3 _v0297;
vec3 _r0309;
vec3 _v0309;
vec3 _r0321;
vec3 _v0321;
vec3 _r0333;
vec3 _v0333;
vec3 _r0345;
vec3 _v0345;
vec3 _r0357;
vec3 _v0357;
vec3 _r0369;
vec3 _v0369;
vec3 _r0381;
vec3 _v0381;
vec3 _r0393;
vec3 _v0393;
vec3 _r0405;
vec3 _v0405;
vec3 _r0417;
vec3 _v0417;
vec3 _r0429;
vec3 _v0429;
vec3 _r0441;
vec3 _v0441;
vec3 _r0453;
vec3 _v0453;
vec3 _r0465;
vec3 _v0465;
vec3 _r0477;
vec3 _v0477;
vec3 _r0489;
vec3 _v0489;
vec3 _r0501;
vec3 _v0501;
vec3 _r0513;
vec3 _v0513;
vec3 _r0525;
vec3 _v0525;
vec3 _r0537;
vec3 _v0537;
vec3 _r0549;
vec3 _v0549;
vec3 _r0561;
vec3 _v0561;
vec3 _r0573;
vec3 _v0573;
vec3 _r0585;
vec3 _v0585;
vec3 _r0597;
vec3 _v0597;
vec3 _r0609;
vec3 _v0609;
vec3 _r0621;
vec3 _v0621;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _fp;
    vec2 _st;
    vec2 _g1;
    vec2 _g2;
    float _AO;
    float _BO;
    float _CO;
    float _AX;
    float _BX;
    float _CX;
    float _AY;
    float _BY;
    float _CY;
    bool _ex;
    bool _e_i;
    bool _kei;
    bool _mei;
    bool _ex_ck;
    bool _ex_em;
    bool _fx_1;
    bool _fx_2;
    bool _fx_3;
    bool _fx_4;
    bool _fx_5;
    bool _r1;
    bool _r2;
    bool _r3;
    _x0081 = TEX0.xy*TextureSize;
    _fp = fract(_x0081);
    _st = vec2(float((_fp.x >= 5.00000000E-01)), float((_fp.y >= 5.00000000E-01)));
    _g1 = TEX1.xy*((_st.x + _st.y) - 1.00000000E+00) + TEX1.zw*(_st.x - _st.y);
    _g2 = TEX1.xy*(_st.y - _st.x) + TEX1.zw*((_st.x + _st.y) - 1.00000000E+00);
    _AO = 2.00000000E+00*_st.y - 1.00000000E+00;
    _BO = 2.00000000E+00*_st.x - 1.00000000E+00;
    _CO = (_st.x + _st.y) - 5.00000000E-01;
    _AX = (5.00000000E-01*_st.x + 1.50000000E+00*_st.y) - 1.00000000E+00;
    _BX = (1.50000000E+00*_st.x - 5.00000000E-01*_st.y) - 5.00000000E-01;
    _CX = (_st.x + 5.00000000E-01*_st.y) - 5.00000000E-01;
    _AY = (-5.00000000E-01*_st.x + 1.50000000E+00*_st.y) - 5.00000000E-01;
    _BY = (1.50000000E+00*_st.x + 5.00000000E-01*_st.y) - 1.00000000E+00;
    _CY = (5.00000000E-01*_st.x + _st.y) - 5.00000000E-01;
    _c0085 = TEX0.xy + _g1 + _g2;
    _TMP0 = COMPAT_TEXTURE(Texture, _c0085);
    _c0087 = TEX0.xy + _g1;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0087);
    _c0089 = (TEX0.xy + _g1) - _g2;
    _TMP2 = COMPAT_TEXTURE(Texture, _c0089);
    _c0091 = TEX0.xy + _g2;
    _TMP3 = COMPAT_TEXTURE(Texture, _c0091);
    _TMP4 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _c0095 = TEX0.xy - _g2;
    _TMP5 = COMPAT_TEXTURE(Texture, _c0095);
    _c0097 = (TEX0.xy - _g1) + _g2;
    _TMP6 = COMPAT_TEXTURE(Texture, _c0097);
    _c0099 = TEX0.xy - _g1;
    _TMP7 = COMPAT_TEXTURE(Texture, _c0099);
    _c0101 = (TEX0.xy - _g1) - _g2;
    _TMP8 = COMPAT_TEXTURE(Texture, _c0101);
    _c0103 = (TEX0.xy + 2.00000000E+00*_g1) - _g2;
    _TMP9 = COMPAT_TEXTURE(Texture, _c0103);
    _c0105 = (TEX0.xy - _g1) + 2.00000000E+00*_g2;
    _TMP10 = COMPAT_TEXTURE(Texture, _c0105);
    _c0107 = (TEX0.xy + _g1) - 2.00000000E+00*_g2;
    _TMP11 = COMPAT_TEXTURE(Texture, _c0107);
    _c0109 = TEX0.xy - 2.00000000E+00*_g2;
    _TMP12 = COMPAT_TEXTURE(Texture, _c0109);
    _c0111 = (TEX0.xy - _g1) - 2.00000000E+00*_g2;
    _TMP13 = COMPAT_TEXTURE(Texture, _c0111);
    _c0113 = (TEX0.xy - 2.00000000E+00*_g1) + _g2;
    _TMP14 = COMPAT_TEXTURE(Texture, _c0113);
    _c0115 = TEX0.xy - 2.00000000E+00*_g1;
    _TMP15 = COMPAT_TEXTURE(Texture, _c0115);
    _c0117 = (TEX0.xy - 2.00000000E+00*_g1) - _g2;
    _TMP16 = COMPAT_TEXTURE(Texture, _c0117);
    _c0119 = TEX0.xy + 2.00000000E+00*_g1;
    _TMP17 = COMPAT_TEXTURE(Texture, _c0119);
    _c0121 = TEX0.xy + 2.00000000E+00*_g2;
    _TMP18 = COMPAT_TEXTURE(Texture, _c0121);
    _TMP126 = dot(_TMP1.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP130 = dot(_TMP2.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP134 = dot(_TMP3.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP138 = dot(_TMP4.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP142 = dot(_TMP5.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP146 = dot(_TMP6.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP150 = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _TMP154 = dot(_TMP8.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));
    _fx_1 = _AO*_fp.y + _BO*_fp.x > _CO;
    _fx_2 = _AX*_fp.y + _BX*_fp.x > _CX;
    _fx_3 = _AY*_fp.y + _BY*_fp.x > _CY;
    _fx_4 = _BY*_fp.y + _AY*(1.00000000E+00 - _fp.x) > _CY;
    _fx_5 = _BX*(1.00000000E+00 - _fp.y) + _AX*_fp.x > _CX;
    _v0201 = _TMP4.xyz - _TMP2.xyz;
    _r0201.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0201);
    _r0201.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0201);
    _r0201.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0201);
    _TMP70 = abs(_r0201);
    _TMP19 = _TMP70.x;
    _v0213 = _TMP4.xyz - _TMP6.xyz;
    _r0213.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0213);
    _r0213.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0213);
    _r0213.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0213);
    _TMP70 = abs(_r0213);
    _TMP20 = _TMP70.x;
    _v0225 = _TMP8.xyz - _TMP15.xyz;
    _r0225.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0225);
    _r0225.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0225);
    _r0225.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0225);
    _TMP70 = abs(_r0225);
    _TMP21 = _TMP70.x;
    _v0237 = _TMP8.xyz - _TMP12.xyz;
    _r0237.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0237);
    _r0237.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0237);
    _r0237.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0237);
    _TMP70 = abs(_r0237);
    _TMP22 = _TMP70.x;
    _v0249 = _TMP7.xyz - _TMP5.xyz;
    _r0249.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0249);
    _r0249.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0249);
    _r0249.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0249);
    _TMP70 = abs(_r0249);
    _TMP23 = _TMP70.x;
    _v0261 = _TMP7.xyz - _TMP3.xyz;
    _r0261.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0261);
    _r0261.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0261);
    _r0261.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0261);
    _TMP70 = abs(_r0261);
    _TMP24 = _TMP70.x;
    _v0273 = _TMP7.xyz - _TMP16.xyz;
    _r0273.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0273);
    _r0273.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0273);
    _r0273.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0273);
    _TMP70 = abs(_r0273);
    _TMP25 = _TMP70.x;
    _v0285 = _TMP5.xyz - _TMP13.xyz;
    _r0285.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0285);
    _r0285.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0285);
    _r0285.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0285);
    _TMP70 = abs(_r0285);
    _TMP26 = _TMP70.x;
    _v0297 = _TMP5.xyz - _TMP1.xyz;
    _r0297.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0297);
    _r0297.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0297);
    _r0297.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0297);
    _TMP70 = abs(_r0297);
    _TMP27 = _TMP70.x;
    _v0309 = _TMP4.xyz - _TMP8.xyz;
    _r0309.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0309);
    _r0309.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0309);
    _r0309.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0309);
    _TMP70 = abs(_r0309);
    _e_i = _TMP19 + _TMP20 + _TMP21 + _TMP22 + 4.00000000E+00*_TMP23 < _TMP24 + _TMP25 + _TMP26 + _TMP27 + 4.00000000E+00*_TMP70.x;
    _v0321 = _TMP4.xyz - _TMP0.xyz;
    _r0321.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0321);
    _r0321.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0321);
    _r0321.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0321);
    _TMP70 = abs(_r0321);
    _TMP29 = _TMP70.x;
    _v0333 = _TMP4.xyz - _TMP8.xyz;
    _r0333.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0333);
    _r0333.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0333);
    _r0333.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0333);
    _TMP70 = abs(_r0333);
    _TMP30 = _TMP70.x;
    _v0345 = _TMP2.xyz - _TMP12.xyz;
    _r0345.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0345);
    _r0345.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0345);
    _r0345.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0345);
    _TMP70 = abs(_r0345);
    _TMP31 = _TMP70.x;
    _v0357 = _TMP2.xyz - _TMP17.xyz;
    _r0357.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0357);
    _r0357.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0357);
    _r0357.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0357);
    _TMP70 = abs(_r0357);
    _TMP32 = _TMP70.x;
    _v0369 = _TMP5.xyz - _TMP1.xyz;
    _r0369.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0369);
    _r0369.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0369);
    _r0369.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0369);
    _TMP70 = abs(_r0369);
    _TMP33 = _TMP70.x;
    _v0381 = _TMP5.xyz - _TMP7.xyz;
    _r0381.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0381);
    _r0381.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0381);
    _r0381.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0381);
    _TMP70 = abs(_r0381);
    _TMP34 = _TMP70.x;
    _v0393 = _TMP5.xyz - _TMP11.xyz;
    _r0393.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0393);
    _r0393.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0393);
    _r0393.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0393);
    _TMP70 = abs(_r0393);
    _TMP35 = _TMP70.x;
    _v0405 = _TMP1.xyz - _TMP9.xyz;
    _r0405.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0405);
    _r0405.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0405);
    _r0405.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0405);
    _TMP70 = abs(_r0405);
    _TMP36 = _TMP70.x;
    _v0417 = _TMP1.xyz - _TMP3.xyz;
    _r0417.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0417);
    _r0417.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0417);
    _r0417.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0417);
    _TMP70 = abs(_r0417);
    _TMP37 = _TMP70.x;
    _v0429 = _TMP4.xyz - _TMP2.xyz;
    _r0429.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0429);
    _r0429.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0429);
    _r0429.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0429);
    _TMP70 = abs(_r0429);
    _kei = _TMP29 + _TMP30 + _TMP31 + _TMP32 + 4.00000000E+00*_TMP33 < _TMP34 + _TMP35 + _TMP36 + _TMP37 + 4.00000000E+00*_TMP70.x;
    _v0441 = _TMP4.xyz - _TMP8.xyz;
    _r0441.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0441);
    _r0441.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0441);
    _r0441.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0441);
    _TMP70 = abs(_r0441);
    _TMP39 = _TMP70.x;
    _v0453 = _TMP4.xyz - _TMP0.xyz;
    _r0453.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0453);
    _r0453.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0453);
    _r0453.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0453);
    _TMP70 = abs(_r0453);
    _TMP40 = _TMP70.x;
    _v0465 = _TMP6.xyz - _TMP18.xyz;
    _r0465.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0465);
    _r0465.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0465);
    _r0465.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0465);
    _TMP70 = abs(_r0465);
    _TMP41 = _TMP70.x;
    _v0477 = _TMP6.xyz - _TMP15.xyz;
    _r0477.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0477);
    _r0477.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0477);
    _r0477.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0477);
    _TMP70 = abs(_r0477);
    _TMP42 = _TMP70.x;
    _v0489 = _TMP3.xyz - _TMP7.xyz;
    _r0489.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0489);
    _r0489.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0489);
    _r0489.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0489);
    _TMP70 = abs(_r0489);
    _TMP43 = _TMP70.x;
    _v0501 = _TMP3.xyz - _TMP1.xyz;
    _r0501.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0501);
    _r0501.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0501);
    _r0501.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0501);
    _TMP70 = abs(_r0501);
    _TMP44 = _TMP70.x;
    _v0513 = _TMP3.xyz - _TMP10.xyz;
    _r0513.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0513);
    _r0513.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0513);
    _r0513.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0513);
    _TMP70 = abs(_r0513);
    _TMP45 = _TMP70.x;
    _v0525 = _TMP7.xyz - _TMP14.xyz;
    _r0525.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0525);
    _r0525.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0525);
    _r0525.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0525);
    _TMP70 = abs(_r0525);
    _TMP46 = _TMP70.x;
    _v0537 = _TMP7.xyz - _TMP5.xyz;
    _r0537.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0537);
    _r0537.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0537);
    _r0537.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0537);
    _TMP70 = abs(_r0537);
    _TMP47 = _TMP70.x;
    _v0549 = _TMP4.xyz - _TMP6.xyz;
    _r0549.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0549);
    _r0549.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0549);
    _r0549.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0549);
    _TMP70 = abs(_r0549);
    _mei = _TMP39 + _TMP40 + _TMP41 + _TMP42 + 4.00000000E+00*_TMP43 < _TMP44 + _TMP45 + _TMP46 + _TMP47 + 4.00000000E+00*_TMP70.x;
    _v0561 = _TMP4.xyz - _TMP5.xyz;
    _r0561.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0561);
    _r0561.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0561);
    _r0561.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0561);
    _TMP70 = abs(_r0561);
    _TMP50 = _TMP70.x;
    _v0573 = _TMP4.xyz - _TMP7.xyz;
    _r0573.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0573);
    _r0573.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0573);
    _r0573.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0573);
    _TMP70 = abs(_r0573);
    if (_TMP50 <= _TMP70.x) { 
        _TMP49 = _TMP5.xyz;
    } else {
        _TMP49 = _TMP7.xyz;
    } 
    _v0585 = _TMP4.xyz - _TMP1.xyz;
    _r0585.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0585);
    _r0585.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0585);
    _r0585.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0585);
    _TMP70 = abs(_r0585);
    _TMP53 = _TMP70.x;
    _v0597 = _TMP4.xyz - _TMP5.xyz;
    _r0597.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0597);
    _r0597.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0597);
    _r0597.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0597);
    _TMP70 = abs(_r0597);
    if (_TMP53 <= _TMP70.x) { 
        _TMP52 = _TMP1.xyz;
    } else {
        _TMP52 = _TMP5.xyz;
    } 
    _v0609 = _TMP4.xyz - _TMP7.xyz;
    _r0609.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0609);
    _r0609.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0609);
    _r0609.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0609);
    _TMP70 = abs(_r0609);
    _TMP56 = _TMP70.x;
    _v0621 = _TMP4.xyz - _TMP3.xyz;
    _r0621.x = dot(vec3( 1.43520002E+01, 2.81760006E+01, 5.47200012E+00), _v0621);
    _r0621.y = dot(vec3( -1.18299997E+00, -2.31699991E+00, 3.50000000E+00), _v0621);
    _r0621.z = dot(vec3( 3.00000000E+00, -2.51399994E+00, -4.86000001E-01), _v0621);
    _TMP70 = abs(_r0621);
    if (_TMP56 <= _TMP70.x) { 
        _TMP55 = _TMP7.xyz;
    } else {
        _TMP55 = _TMP3.xyz;
    } 
    _ex = _TMP138 != _TMP142 && _TMP138 != _TMP150;
    _ex_ck = _TMP138 != _TMP126 && _TMP138 != _TMP142;
    _ex_em = _TMP138 != _TMP150 && _TMP138 != _TMP134;
    _r1 = _e_i && _ex && (_fx_1 || _TMP142 == _TMP146 && _fx_2 || _TMP150 == _TMP130 && _fx_3);
    _r2 = _ex_ck && _kei && _TMP126 == _TMP154 && _fx_5;
    _r3 = _ex_em && _mei && _TMP134 == _TMP154 && _fx_4;
    if (_r1) { 
        _TMP66 = _TMP49;
    } else {
        if (_r2) { 
            _TMP67 = _TMP52;
        } else {
            if (_r3) { 
                _TMP68 = _TMP55;
            } else {
                _TMP68 = _TMP4.xyz;
            } 
            _TMP67 = _TMP68;
        } 
        _TMP66 = _TMP67;
    } 
    _ret_0 = vec4(_TMP66.x, _TMP66.y, _TMP66.z, 1.00000000E+00);
    FragColor = _ret_0;
    return;
} 
#endif
