// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _blur_dxdy;
COMPAT_VARYING     vec2 _tex_uv1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec2 _tex_uv1;
    vec2 _blur_dxdy;
};
out_vertex _ret_0;
input_dummy _IN1;
vec4 _r0006;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    vec2 _dxdy_scale;
    _r0006 = VertexCoord.x*MVPMatrix[0];
    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];
    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];
    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];
    _dxdy_scale = InputSize/OutputSize;
    _OUT._blur_dxdy = _dxdy_scale/TextureSize;
    _ret_0._position1 = _r0006;
    _ret_0._tex_uv1 = TexCoord.xy;
    _ret_0._blur_dxdy = _OUT._blur_dxdy;
    gl_Position = _r0006;
    TEX0.xy = TexCoord.xy;
    TEX1.xy = _OUT._blur_dxdy;
    return;
    TEX0.xy = _ret_0._tex_uv1;
    TEX1.xy = _ret_0._blur_dxdy;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 _blur_dxdy;
COMPAT_VARYING     vec2 _tex_uv1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec2 _tex_uv1;
    vec2 _blur_dxdy;
};
vec4 _ret_0;
vec3 _TMP1;
float _TMP16;
float _TMP15;
float _TMP14;
vec4 _TMP17;
float _TMP4;
float _TMP3;
float _TMP2;
uniform sampler2D Texture;
vec3 _TMP23;
float _texel1to2ratio0026;
vec2 _sample1R_texel_offset0026;
vec2 _sample2d_texel_offset0026;
float _w10026;
float _w20026;
float _weight_sum_inv0026;
vec2 _dxdy_mirror_x0026;
vec2 _dxdy_mirror_y0026;
vec2 _dxdy_mirror_xy0026;
vec3 _sample0C0026;
vec3 _sample1R0026;
vec3 _sample1D0026;
vec3 _sample1L0026;
vec3 _sample1U0026;
vec3 _sample2d0026;
vec3 _sample2c0026;
vec3 _sample2b0026;
vec3 _sum0026;
float _TMP27;
float _TMP31;
float _TMP37;
float _x0038;
float _TMP43;
float _x0044;
float _TMP49;
float _x0050;
vec2 _tex_coords0060;
vec2 _tex_coords0066;
vec2 _tex_coords0072;
vec2 _tex_coords0078;
vec2 _tex_coords0084;
vec2 _tex_coords0090;
vec2 _tex_coords0096;
vec2 _tex_coords0102;
vec4 _color0108;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    _TMP27 = pow(2.71828198E+00, -5.15794277E-01);
    _TMP31 = pow(2.71828198E+00, -2.06317711E+00);
    _texel1to2ratio0026 = _TMP31/(_TMP27 + _TMP31);
    _sample1R_texel_offset0026 = vec2( 1.00000000E+00, 0.00000000E+00) + vec2(_texel1to2ratio0026, 0.00000000E+00);
    _sample2d_texel_offset0026 = vec2( 1.00000000E+00, 1.00000000E+00) + vec2(_texel1to2ratio0026, _texel1to2ratio0026);
    _TMP2 = dot(vec2( 1.00000000E+00, 1.00000000E+00), vec2( 1.00000000E+00, 1.00000000E+00));
    _x0038 = -_TMP2*5.15794277E-01;
    _TMP37 = pow(2.71828198E+00, _x0038);
    _TMP3 = dot(vec2( 2.00000000E+00, 1.00000000E+00), vec2( 2.00000000E+00, 1.00000000E+00));
    _x0044 = -_TMP3*5.15794277E-01;
    _TMP43 = pow(2.71828198E+00, _x0044);
    _TMP4 = dot(vec2( 2.00000000E+00, 2.00000000E+00), vec2( 2.00000000E+00, 2.00000000E+00));
    _x0050 = -_TMP4*5.15794277E-01;
    _TMP49 = pow(2.71828198E+00, _x0050);
    _w10026 = _TMP27 + _TMP31;
    _w20026 = _TMP37 + 2.00000000E+00*_TMP43 + _TMP49;
    _weight_sum_inv0026 = 1.00000000E+00/(1.00000000E+00 + 4.00000000E+00*(_w10026 + _w20026));
    _dxdy_mirror_x0026 = TEX1.xy*vec2( -1.00000000E+00, 1.00000000E+00);
    _dxdy_mirror_y0026 = TEX1.xy*vec2( 1.00000000E+00, -1.00000000E+00);
    _dxdy_mirror_xy0026 = -TEX1.xy;
    _TMP17 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _sample0C0026 = _TMP17.xyz;
    _tex_coords0060 = TEX0.xy + TEX1.xy*_sample1R_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0060);
    _sample1R0026 = _TMP17.xyz;
    _tex_coords0066 = TEX0.xy + TEX1.xy*_sample1R_texel_offset0026.yx;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0066);
    _sample1D0026 = _TMP17.xyz;
    _tex_coords0072 = TEX0.xy - TEX1.xy*_sample1R_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0072);
    _sample1L0026 = _TMP17.xyz;
    _tex_coords0078 = TEX0.xy - TEX1.xy*_sample1R_texel_offset0026.yx;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0078);
    _sample1U0026 = _TMP17.xyz;
    _tex_coords0084 = TEX0.xy + TEX1.xy*_sample2d_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0084);
    _sample2d0026 = _TMP17.xyz;
    _tex_coords0090 = TEX0.xy + _dxdy_mirror_x0026*_sample2d_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0090);
    _sample2c0026 = _TMP17.xyz;
    _tex_coords0096 = TEX0.xy + _dxdy_mirror_y0026*_sample2d_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0096);
    _sample2b0026 = _TMP17.xyz;
    _tex_coords0102 = TEX0.xy + _dxdy_mirror_xy0026*_sample2d_texel_offset0026;
    _TMP17 = COMPAT_TEXTURE(Texture, _tex_coords0102);
    _sum0026 = _sample0C0026 + _w10026*(_sample1R0026 + _sample1D0026 + _sample1L0026 + _sample1U0026);
    _sum0026 = _sum0026 + _w20026*(_TMP17.xyz + _sample2b0026 + _sample2c0026 + _sample2d0026);
    _TMP23 = _sum0026*_weight_sum_inv0026;
    _color0108 = vec4(_TMP23.x, _TMP23.y, _TMP23.z, 1.00000000E+00);
    _TMP14 = pow(_color0108.x, 4.54545438E-01);
    _TMP15 = pow(_color0108.y, 4.54545438E-01);
    _TMP16 = pow(_color0108.z, 4.54545438E-01);
    _TMP1 = vec3(_TMP14, _TMP15, _TMP16);
    _ret_0 = vec4(_TMP1.x, _TMP1.y, _TMP1.z, _color0108.w);
    FragColor = _ret_0;
    return;
} 
#endif
