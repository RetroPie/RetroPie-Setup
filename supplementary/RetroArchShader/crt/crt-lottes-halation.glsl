// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
vec4 _oPosition1;
vec4 _r0007;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _oTex;
    _r0007 = VertexCoord.x*MVPMatrix[0];
    _r0007 = _r0007 + VertexCoord.y*MVPMatrix[1];
    _r0007 = _r0007 + VertexCoord.z*MVPMatrix[2];
    _r0007 = _r0007 + VertexCoord.w*MVPMatrix[3];
    _oPosition1 = _r0007;
    _oTex = TexCoord.xy;
    gl_Position = _r0007;
    TEX0.xy = TexCoord.xy;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
vec4 _ret_0;
vec3 _TMP4;
float _TMP8;
float _TMP7;
float _TMP15;
float _TMP16;
vec2 _TMP2;
vec3 _TMP1;
vec2 _TMP14;
vec2 _TMP19;
vec2 _TMP11;
vec4 _TMP18;
float _TMP21;
float _TMP20;
float _TMP23;
vec2 _TMP17;
vec2 _TMP13;
vec2 _TMP12;
vec2 _TMP10;
vec2 _TMP0;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _pos0030;
vec3 _a0032;
vec3 _b0032;
vec3 _c0032;
vec3 _TMP35;
vec2 _pos0036;
vec2 _x0038;
float _x0046;
float _x0050;
float _x0054;
vec3 _TMP55;
vec2 _pos0056;
vec2 _x0058;
float _x0066;
float _x0070;
float _x0074;
vec3 _TMP75;
vec2 _pos0076;
vec2 _x0078;
float _x0086;
float _x0090;
float _x0094;
vec2 _pos0096;
float _TMP99;
float _pos0100;
float _x0102;
float _TMP103;
float _x0106;
float _TMP107;
float _pos0108;
float _x0110;
vec3 _TMP113;
vec2 _pos0114;
vec2 _x0116;
float _x0124;
float _x0128;
float _x0132;
vec3 _TMP133;
vec2 _pos0134;
vec2 _x0136;
float _x0144;
float _x0148;
float _x0152;
vec3 _TMP153;
vec2 _pos0154;
vec2 _x0156;
float _x0164;
float _x0168;
float _x0172;
vec3 _TMP173;
vec2 _pos0174;
vec2 _x0176;
float _x0184;
float _x0188;
float _x0192;
vec3 _TMP193;
vec2 _pos0194;
vec2 _x0196;
float _x0204;
float _x0208;
float _x0212;
vec2 _pos0214;
float _TMP217;
float _pos0218;
float _x0220;
float _TMP221;
float _pos0222;
float _x0224;
float _TMP225;
float _x0228;
float _TMP229;
float _pos0230;
float _x0232;
float _TMP233;
float _pos0234;
float _x0236;
vec3 _TMP239;
vec2 _pos0240;
vec2 _x0242;
float _x0250;
float _x0254;
float _x0258;
vec3 _TMP259;
vec2 _pos0260;
vec2 _x0262;
float _x0270;
float _x0274;
float _x0278;
vec3 _TMP279;
vec2 _pos0280;
vec2 _x0282;
float _x0290;
float _x0294;
float _x0298;
vec2 _pos0300;
float _TMP303;
float _pos0304;
float _x0306;
float _TMP307;
float _x0310;
float _TMP311;
float _pos0312;
float _x0314;
vec2 _pos0318;
float _TMP321;
float _pos0322;
float _x0324;
vec2 _pos0328;
float _TMP331;
float _x0334;
vec2 _pos0338;
float _TMP341;
float _pos0342;
float _x0344;
vec3 _a0346;
vec3 _b0346;
vec3 _c0346;
vec3 _d0346;
vec3 _e0346;
vec3 _TMP349;
vec2 _pos0350;
vec2 _x0352;
float _x0360;
float _x0364;
float _x0368;
vec3 _TMP369;
vec2 _pos0370;
vec2 _x0372;
float _x0380;
float _x0384;
float _x0388;
vec3 _TMP389;
vec2 _pos0390;
vec2 _x0392;
float _x0400;
float _x0404;
float _x0408;
vec3 _TMP409;
vec2 _pos0410;
vec2 _x0412;
float _x0420;
float _x0424;
float _x0428;
vec3 _TMP429;
vec2 _pos0430;
vec2 _x0432;
float _x0440;
float _x0444;
float _x0448;
vec2 _pos0450;
float _TMP453;
float _pos0454;
float _x0456;
float _TMP457;
float _pos0458;
float _x0460;
float _TMP461;
float _x0464;
float _TMP465;
float _pos0466;
float _x0468;
float _TMP469;
float _pos0470;
float _x0472;
vec3 _TMP475;
vec2 _pos0476;
vec2 _x0478;
float _x0486;
float _x0490;
float _x0494;
vec3 _TMP495;
vec2 _pos0496;
vec2 _x0498;
float _x0506;
float _x0510;
float _x0514;
vec3 _TMP515;
vec2 _pos0516;
vec2 _x0518;
float _x0526;
float _x0530;
float _x0534;
vec3 _TMP535;
vec2 _pos0536;
vec2 _x0538;
float _x0546;
float _x0550;
float _x0554;
vec3 _TMP555;
vec2 _pos0556;
vec2 _x0558;
float _x0566;
float _x0570;
float _x0574;
vec3 _TMP575;
vec2 _pos0576;
vec2 _x0578;
float _x0586;
float _x0590;
float _x0594;
vec3 _TMP595;
vec2 _pos0596;
vec2 _x0598;
float _x0606;
float _x0610;
float _x0614;
vec2 _pos0616;
float _TMP619;
float _pos0620;
float _x0622;
float _TMP623;
float _pos0624;
float _x0626;
float _TMP627;
float _pos0628;
float _x0630;
float _TMP631;
float _x0634;
float _TMP635;
float _pos0636;
float _x0638;
float _TMP639;
float _pos0640;
float _x0642;
float _TMP643;
float _pos0644;
float _x0646;
vec3 _TMP649;
vec2 _pos0650;
vec2 _x0652;
float _x0660;
float _x0664;
float _x0668;
vec3 _TMP669;
vec2 _pos0670;
vec2 _x0672;
float _x0680;
float _x0684;
float _x0688;
vec3 _TMP689;
vec2 _pos0690;
vec2 _x0692;
float _x0700;
float _x0704;
float _x0708;
vec3 _TMP709;
vec2 _pos0710;
vec2 _x0712;
float _x0720;
float _x0724;
float _x0728;
vec3 _TMP729;
vec2 _pos0730;
vec2 _x0732;
float _x0740;
float _x0744;
float _x0748;
vec3 _TMP749;
vec2 _pos0750;
vec2 _x0752;
float _x0760;
float _x0764;
float _x0768;
vec3 _TMP769;
vec2 _pos0770;
vec2 _x0772;
float _x0780;
float _x0784;
float _x0788;
vec2 _pos0790;
float _TMP793;
float _pos0794;
float _x0796;
float _TMP797;
float _pos0798;
float _x0800;
float _TMP801;
float _pos0802;
float _x0804;
float _TMP805;
float _x0808;
float _TMP809;
float _pos0810;
float _x0812;
float _TMP813;
float _pos0814;
float _x0816;
float _TMP817;
float _pos0818;
float _x0820;
vec3 _TMP823;
vec2 _pos0824;
vec2 _x0826;
float _x0834;
float _x0838;
float _x0842;
vec3 _TMP843;
vec2 _pos0844;
vec2 _x0846;
float _x0854;
float _x0858;
float _x0862;
vec3 _TMP863;
vec2 _pos0864;
vec2 _x0866;
float _x0874;
float _x0878;
float _x0882;
vec3 _TMP883;
vec2 _pos0884;
vec2 _x0886;
float _x0894;
float _x0898;
float _x0902;
vec3 _TMP903;
vec2 _pos0904;
vec2 _x0906;
float _x0914;
float _x0918;
float _x0922;
vec3 _TMP923;
vec2 _pos0924;
vec2 _x0926;
float _x0934;
float _x0938;
float _x0942;
vec3 _TMP943;
vec2 _pos0944;
vec2 _x0946;
float _x0954;
float _x0958;
float _x0962;
vec2 _pos0964;
float _TMP967;
float _pos0968;
float _x0970;
float _TMP971;
float _pos0972;
float _x0974;
float _TMP975;
float _pos0976;
float _x0978;
float _TMP979;
float _x0982;
float _TMP983;
float _pos0984;
float _x0986;
float _TMP987;
float _pos0988;
float _x0990;
float _TMP991;
float _pos0992;
float _x0994;
vec3 _TMP997;
vec2 _pos0998;
vec2 _x1000;
float _x1008;
float _x1012;
float _x1016;
vec3 _TMP1017;
vec2 _pos1018;
vec2 _x1020;
float _x1028;
float _x1032;
float _x1036;
vec3 _TMP1037;
vec2 _pos1038;
vec2 _x1040;
float _x1048;
float _x1052;
float _x1056;
vec3 _TMP1057;
vec2 _pos1058;
vec2 _x1060;
float _x1068;
float _x1072;
float _x1076;
vec3 _TMP1077;
vec2 _pos1078;
vec2 _x1080;
float _x1088;
float _x1092;
float _x1096;
vec2 _pos1098;
float _TMP1101;
float _pos1102;
float _x1104;
float _TMP1105;
float _pos1106;
float _x1108;
float _TMP1109;
float _x1112;
float _TMP1113;
float _pos1114;
float _x1116;
float _TMP1117;
float _pos1118;
float _x1120;
vec2 _pos1124;
float _TMP1127;
float _pos1128;
float _x1130;
vec2 _pos1134;
float _TMP1137;
float _pos1138;
float _x1140;
vec2 _pos1144;
float _TMP1147;
float _x1150;
vec2 _pos1154;
float _TMP1157;
float _pos1158;
float _x1160;
vec2 _pos1164;
float _TMP1167;
float _pos1168;
float _x1170;
vec2 _x1172;
float _line1174;
float _odd1174;
vec2 _pos1174;
vec3 _mask11174;
float _TMP1175;
float _x1176;
float _TMP1179;
float _x1180;
float _TMP1183;
float _x1184;
COMPAT_VARYING vec4 TEX0;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _pos12;
    vec3 _outColor;
    _pos0030 = TEX0.xy*(TextureSize.xy/InputSize.xy);
    _pos0030 = _pos0030*2.00000000E+00 - 1.00000000E+00;
    _pos0030 = _pos0030*vec2(1.00000000E+00 + _pos0030.y*_pos0030.y*3.09999995E-02, 1.00000000E+00 + _pos0030.x*_pos0030.x*4.10000011E-02);
    _TMP0 = _pos0030*5.00000000E-01 + 5.00000000E-01;
    _pos12 = _TMP0*(InputSize.xy/TextureSize.xy);
    _x0038 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0038);
    _pos0036 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0036.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0046 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0046, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0050 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0050, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0054 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0054, 2.40000010E+00);
    } 
    _TMP35 = vec3(_TMP20, _TMP21, _TMP23);
    _x0058 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0058);
    _pos0056 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0056.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0066 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0066, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0070 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0070, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0074 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0074, 2.40000010E+00);
    } 
    _TMP55 = vec3(_TMP20, _TMP21, _TMP23);
    _x0078 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0078);
    _pos0076 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0076.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0086 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0086, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0090 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0090, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0094 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0094, 2.40000010E+00);
    } 
    _TMP75 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0096 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0096);
    _TMP10 = -((_pos0096 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0100 = _TMP10.x - 1.00000000E+00;
    _x0102 = -3.00000000E+00*_pos0100*_pos0100;
    _TMP99 = exp2(_x0102);
    _x0106 = -3.00000000E+00*_TMP10.x*_TMP10.x;
    _TMP103 = exp2(_x0106);
    _pos0108 = _TMP10.x + 1.00000000E+00;
    _x0110 = -3.00000000E+00*_pos0108*_pos0108;
    _TMP107 = exp2(_x0110);
    _a0032 = (_TMP35*_TMP99 + _TMP55*_TMP103 + _TMP75*_TMP107)/(_TMP99 + _TMP103 + _TMP107);
    _x0116 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0116);
    _pos0114 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0114.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0124 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0124, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0128 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0128, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0132 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0132, 2.40000010E+00);
    } 
    _TMP113 = vec3(_TMP20, _TMP21, _TMP23);
    _x0136 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0136);
    _pos0134 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0134.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0144 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0144, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0148 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0148, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0152 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0152, 2.40000010E+00);
    } 
    _TMP133 = vec3(_TMP20, _TMP21, _TMP23);
    _x0156 = _pos12*TextureSize.xy;
    _TMP17 = floor(_x0156);
    _pos0154 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0154.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0164 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0164, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0168 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0168, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0172 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0172, 2.40000010E+00);
    } 
    _TMP153 = vec3(_TMP20, _TMP21, _TMP23);
    _x0176 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0176);
    _pos0174 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0174.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0184 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0184, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0188 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0188, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0192 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0192, 2.40000010E+00);
    } 
    _TMP173 = vec3(_TMP20, _TMP21, _TMP23);
    _x0196 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0196);
    _pos0194 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0194.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0204 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0204, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0208 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0208, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0212 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0212, 2.40000010E+00);
    } 
    _TMP193 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0214 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0214);
    _TMP11 = -((_pos0214 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0218 = _TMP11.x - 2.00000000E+00;
    _x0220 = -3.00000000E+00*_pos0218*_pos0218;
    _TMP217 = exp2(_x0220);
    _pos0222 = _TMP11.x - 1.00000000E+00;
    _x0224 = -3.00000000E+00*_pos0222*_pos0222;
    _TMP221 = exp2(_x0224);
    _x0228 = -3.00000000E+00*_TMP11.x*_TMP11.x;
    _TMP225 = exp2(_x0228);
    _pos0230 = _TMP11.x + 1.00000000E+00;
    _x0232 = -3.00000000E+00*_pos0230*_pos0230;
    _TMP229 = exp2(_x0232);
    _pos0234 = _TMP11.x + 2.00000000E+00;
    _x0236 = -3.00000000E+00*_pos0234*_pos0234;
    _TMP233 = exp2(_x0236);
    _b0032 = (_TMP113*_TMP217 + _TMP133*_TMP221 + _TMP153*_TMP225 + _TMP173*_TMP229 + _TMP193*_TMP233)/(_TMP217 + _TMP221 + _TMP225 + _TMP229 + _TMP233);
    _x0242 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0242);
    _pos0240 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0240.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0250 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0250, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0254 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0254, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0258 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0258, 2.40000010E+00);
    } 
    _TMP239 = vec3(_TMP20, _TMP21, _TMP23);
    _x0262 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0262);
    _pos0260 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0260.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0270 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0270, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0274 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0274, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0278 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0278, 2.40000010E+00);
    } 
    _TMP259 = vec3(_TMP20, _TMP21, _TMP23);
    _x0282 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0282);
    _pos0280 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0280.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0290 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0290, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0294 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0294, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0298 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0298, 2.40000010E+00);
    } 
    _TMP279 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0300 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0300);
    _TMP10 = -((_pos0300 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0304 = _TMP10.x - 1.00000000E+00;
    _x0306 = -3.00000000E+00*_pos0304*_pos0304;
    _TMP303 = exp2(_x0306);
    _x0310 = -3.00000000E+00*_TMP10.x*_TMP10.x;
    _TMP307 = exp2(_x0310);
    _pos0312 = _TMP10.x + 1.00000000E+00;
    _x0314 = -3.00000000E+00*_pos0312*_pos0312;
    _TMP311 = exp2(_x0314);
    _c0032 = (_TMP239*_TMP303 + _TMP259*_TMP307 + _TMP279*_TMP311)/(_TMP303 + _TMP307 + _TMP311);
    _pos0318 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0318);
    _TMP12 = -((_pos0318 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0322 = _TMP12.y + -1.00000000E+00;
    _x0324 = -8.00000000E+00*_pos0322*_pos0322;
    _TMP321 = exp2(_x0324);
    _pos0328 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0328);
    _TMP12 = -((_pos0328 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _x0334 = -8.00000000E+00*_TMP12.y*_TMP12.y;
    _TMP331 = exp2(_x0334);
    _pos0338 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0338);
    _TMP12 = -((_pos0338 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0342 = _TMP12.y + 1.00000000E+00;
    _x0344 = -8.00000000E+00*_pos0342*_pos0342;
    _TMP341 = exp2(_x0344);
    _outColor = _a0032*_TMP321 + _b0032*_TMP331 + _c0032*_TMP341;
    _x0352 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, -2.00000000E+00);
    _TMP17 = floor(_x0352);
    _pos0350 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0350.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0360 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0360, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0364 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0364, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0368 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0368, 2.40000010E+00);
    } 
    _TMP349 = vec3(_TMP20, _TMP21, _TMP23);
    _x0372 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, -2.00000000E+00);
    _TMP17 = floor(_x0372);
    _pos0370 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0370.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0380 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0380, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0384 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0384, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0388 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0388, 2.40000010E+00);
    } 
    _TMP369 = vec3(_TMP20, _TMP21, _TMP23);
    _x0392 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, -2.00000000E+00);
    _TMP17 = floor(_x0392);
    _pos0390 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0390.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0400 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0400, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0404 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0404, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0408 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0408, 2.40000010E+00);
    } 
    _TMP389 = vec3(_TMP20, _TMP21, _TMP23);
    _x0412 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, -2.00000000E+00);
    _TMP17 = floor(_x0412);
    _pos0410 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0410.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0420 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0420, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0424 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0424, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0428 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0428, 2.40000010E+00);
    } 
    _TMP409 = vec3(_TMP20, _TMP21, _TMP23);
    _x0432 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, -2.00000000E+00);
    _TMP17 = floor(_x0432);
    _pos0430 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0430.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0440 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0440, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0444 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0444, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0448 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0448, 2.40000010E+00);
    } 
    _TMP429 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0450 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0450);
    _TMP11 = -((_pos0450 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0454 = _TMP11.x - 2.00000000E+00;
    _x0456 = -3.00000000E+00*_pos0454*_pos0454;
    _TMP453 = exp2(_x0456);
    _pos0458 = _TMP11.x - 1.00000000E+00;
    _x0460 = -3.00000000E+00*_pos0458*_pos0458;
    _TMP457 = exp2(_x0460);
    _x0464 = -3.00000000E+00*_TMP11.x*_TMP11.x;
    _TMP461 = exp2(_x0464);
    _pos0466 = _TMP11.x + 1.00000000E+00;
    _x0468 = -3.00000000E+00*_pos0466*_pos0466;
    _TMP465 = exp2(_x0468);
    _pos0470 = _TMP11.x + 2.00000000E+00;
    _x0472 = -3.00000000E+00*_pos0470*_pos0470;
    _TMP469 = exp2(_x0472);
    _a0346 = (_TMP349*_TMP453 + _TMP369*_TMP457 + _TMP389*_TMP461 + _TMP409*_TMP465 + _TMP429*_TMP469)/(_TMP453 + _TMP457 + _TMP461 + _TMP465 + _TMP469);
    _x0478 = _pos12*TextureSize.xy + vec2( -3.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0478);
    _pos0476 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0476.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0486 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0486, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0490 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0490, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0494 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0494, 2.40000010E+00);
    } 
    _TMP475 = vec3(_TMP20, _TMP21, _TMP23);
    _x0498 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0498);
    _pos0496 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0496.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0506 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0506, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0510 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0510, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0514 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0514, 2.40000010E+00);
    } 
    _TMP495 = vec3(_TMP20, _TMP21, _TMP23);
    _x0518 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0518);
    _pos0516 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0516.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0526 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0526, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0530 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0530, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0534 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0534, 2.40000010E+00);
    } 
    _TMP515 = vec3(_TMP20, _TMP21, _TMP23);
    _x0538 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0538);
    _pos0536 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0536.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0546 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0546, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0550 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0550, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0554 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0554, 2.40000010E+00);
    } 
    _TMP535 = vec3(_TMP20, _TMP21, _TMP23);
    _x0558 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0558);
    _pos0556 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0556.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0566 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0566, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0570 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0570, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0574 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0574, 2.40000010E+00);
    } 
    _TMP555 = vec3(_TMP20, _TMP21, _TMP23);
    _x0578 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0578);
    _pos0576 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0576.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0586 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0586, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0590 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0590, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0594 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0594, 2.40000010E+00);
    } 
    _TMP575 = vec3(_TMP20, _TMP21, _TMP23);
    _x0598 = _pos12*TextureSize.xy + vec2( 3.00000000E+00, -1.00000000E+00);
    _TMP17 = floor(_x0598);
    _pos0596 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0596.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0606 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0606, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0610 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0610, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0614 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0614, 2.40000010E+00);
    } 
    _TMP595 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0616 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0616);
    _TMP13 = -((_pos0616 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0620 = _TMP13.x - 3.00000000E+00;
    _x0622 = -1.50000000E+00*_pos0620*_pos0620;
    _TMP619 = exp2(_x0622);
    _pos0624 = _TMP13.x - 2.00000000E+00;
    _x0626 = -1.50000000E+00*_pos0624*_pos0624;
    _TMP623 = exp2(_x0626);
    _pos0628 = _TMP13.x - 1.00000000E+00;
    _x0630 = -1.50000000E+00*_pos0628*_pos0628;
    _TMP627 = exp2(_x0630);
    _x0634 = -1.50000000E+00*_TMP13.x*_TMP13.x;
    _TMP631 = exp2(_x0634);
    _pos0636 = _TMP13.x + 1.00000000E+00;
    _x0638 = -1.50000000E+00*_pos0636*_pos0636;
    _TMP635 = exp2(_x0638);
    _pos0640 = _TMP13.x + 2.00000000E+00;
    _x0642 = -1.50000000E+00*_pos0640*_pos0640;
    _TMP639 = exp2(_x0642);
    _pos0644 = _TMP13.x + 3.00000000E+00;
    _x0646 = -1.50000000E+00*_pos0644*_pos0644;
    _TMP643 = exp2(_x0646);
    _b0346 = (_TMP475*_TMP619 + _TMP495*_TMP623 + _TMP515*_TMP627 + _TMP535*_TMP631 + _TMP555*_TMP635 + _TMP575*_TMP639 + _TMP595*_TMP643)/(_TMP619 + _TMP623 + _TMP627 + _TMP631 + _TMP635 + _TMP639 + _TMP643);
    _x0652 = _pos12*TextureSize.xy + vec2( -3.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0652);
    _pos0650 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0650.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0660 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0660, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0664 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0664, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0668 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0668, 2.40000010E+00);
    } 
    _TMP649 = vec3(_TMP20, _TMP21, _TMP23);
    _x0672 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0672);
    _pos0670 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0670.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0680 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0680, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0684 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0684, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0688 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0688, 2.40000010E+00);
    } 
    _TMP669 = vec3(_TMP20, _TMP21, _TMP23);
    _x0692 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0692);
    _pos0690 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0690.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0700 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0700, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0704 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0704, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0708 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0708, 2.40000010E+00);
    } 
    _TMP689 = vec3(_TMP20, _TMP21, _TMP23);
    _x0712 = _pos12*TextureSize.xy;
    _TMP17 = floor(_x0712);
    _pos0710 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0710.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0720 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0720, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0724 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0724, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0728 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0728, 2.40000010E+00);
    } 
    _TMP709 = vec3(_TMP20, _TMP21, _TMP23);
    _x0732 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0732);
    _pos0730 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0730.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0740 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0740, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0744 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0744, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0748 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0748, 2.40000010E+00);
    } 
    _TMP729 = vec3(_TMP20, _TMP21, _TMP23);
    _x0752 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0752);
    _pos0750 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0750.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0760 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0760, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0764 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0764, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0768 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0768, 2.40000010E+00);
    } 
    _TMP749 = vec3(_TMP20, _TMP21, _TMP23);
    _x0772 = _pos12*TextureSize.xy + vec2( 3.00000000E+00, 0.00000000E+00);
    _TMP17 = floor(_x0772);
    _pos0770 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0770.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0780 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0780, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0784 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0784, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0788 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0788, 2.40000010E+00);
    } 
    _TMP769 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0790 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0790);
    _TMP13 = -((_pos0790 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0794 = _TMP13.x - 3.00000000E+00;
    _x0796 = -1.50000000E+00*_pos0794*_pos0794;
    _TMP793 = exp2(_x0796);
    _pos0798 = _TMP13.x - 2.00000000E+00;
    _x0800 = -1.50000000E+00*_pos0798*_pos0798;
    _TMP797 = exp2(_x0800);
    _pos0802 = _TMP13.x - 1.00000000E+00;
    _x0804 = -1.50000000E+00*_pos0802*_pos0802;
    _TMP801 = exp2(_x0804);
    _x0808 = -1.50000000E+00*_TMP13.x*_TMP13.x;
    _TMP805 = exp2(_x0808);
    _pos0810 = _TMP13.x + 1.00000000E+00;
    _x0812 = -1.50000000E+00*_pos0810*_pos0810;
    _TMP809 = exp2(_x0812);
    _pos0814 = _TMP13.x + 2.00000000E+00;
    _x0816 = -1.50000000E+00*_pos0814*_pos0814;
    _TMP813 = exp2(_x0816);
    _pos0818 = _TMP13.x + 3.00000000E+00;
    _x0820 = -1.50000000E+00*_pos0818*_pos0818;
    _TMP817 = exp2(_x0820);
    _c0346 = (_TMP649*_TMP793 + _TMP669*_TMP797 + _TMP689*_TMP801 + _TMP709*_TMP805 + _TMP729*_TMP809 + _TMP749*_TMP813 + _TMP769*_TMP817)/(_TMP793 + _TMP797 + _TMP801 + _TMP805 + _TMP809 + _TMP813 + _TMP817);
    _x0826 = _pos12*TextureSize.xy + vec2( -3.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0826);
    _pos0824 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0824.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0834 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0834, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0838 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0838, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0842 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0842, 2.40000010E+00);
    } 
    _TMP823 = vec3(_TMP20, _TMP21, _TMP23);
    _x0846 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0846);
    _pos0844 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0844.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0854 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0854, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0858 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0858, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0862 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0862, 2.40000010E+00);
    } 
    _TMP843 = vec3(_TMP20, _TMP21, _TMP23);
    _x0866 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0866);
    _pos0864 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0864.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0874 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0874, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0878 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0878, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0882 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0882, 2.40000010E+00);
    } 
    _TMP863 = vec3(_TMP20, _TMP21, _TMP23);
    _x0886 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0886);
    _pos0884 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0884.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0894 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0894, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0898 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0898, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0902 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0902, 2.40000010E+00);
    } 
    _TMP883 = vec3(_TMP20, _TMP21, _TMP23);
    _x0906 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0906);
    _pos0904 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0904.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0914 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0914, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0918 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0918, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0922 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0922, 2.40000010E+00);
    } 
    _TMP903 = vec3(_TMP20, _TMP21, _TMP23);
    _x0926 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0926);
    _pos0924 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0924.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0934 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0934, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0938 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0938, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0942 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0942, 2.40000010E+00);
    } 
    _TMP923 = vec3(_TMP20, _TMP21, _TMP23);
    _x0946 = _pos12*TextureSize.xy + vec2( 3.00000000E+00, 1.00000000E+00);
    _TMP17 = floor(_x0946);
    _pos0944 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0944.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x0954 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0954, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x0958 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0958, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x0962 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x0962, 2.40000010E+00);
    } 
    _TMP943 = vec3(_TMP20, _TMP21, _TMP23);
    _pos0964 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos0964);
    _TMP13 = -((_pos0964 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos0968 = _TMP13.x - 3.00000000E+00;
    _x0970 = -1.50000000E+00*_pos0968*_pos0968;
    _TMP967 = exp2(_x0970);
    _pos0972 = _TMP13.x - 2.00000000E+00;
    _x0974 = -1.50000000E+00*_pos0972*_pos0972;
    _TMP971 = exp2(_x0974);
    _pos0976 = _TMP13.x - 1.00000000E+00;
    _x0978 = -1.50000000E+00*_pos0976*_pos0976;
    _TMP975 = exp2(_x0978);
    _x0982 = -1.50000000E+00*_TMP13.x*_TMP13.x;
    _TMP979 = exp2(_x0982);
    _pos0984 = _TMP13.x + 1.00000000E+00;
    _x0986 = -1.50000000E+00*_pos0984*_pos0984;
    _TMP983 = exp2(_x0986);
    _pos0988 = _TMP13.x + 2.00000000E+00;
    _x0990 = -1.50000000E+00*_pos0988*_pos0988;
    _TMP987 = exp2(_x0990);
    _pos0992 = _TMP13.x + 3.00000000E+00;
    _x0994 = -1.50000000E+00*_pos0992*_pos0992;
    _TMP991 = exp2(_x0994);
    _d0346 = (_TMP823*_TMP967 + _TMP843*_TMP971 + _TMP863*_TMP975 + _TMP883*_TMP979 + _TMP903*_TMP983 + _TMP923*_TMP987 + _TMP943*_TMP991)/(_TMP967 + _TMP971 + _TMP975 + _TMP979 + _TMP983 + _TMP987 + _TMP991);
    _x1000 = _pos12*TextureSize.xy + vec2( -2.00000000E+00, 2.00000000E+00);
    _TMP17 = floor(_x1000);
    _pos0998 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos0998.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x1008 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1008, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x1012 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1012, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x1016 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1016, 2.40000010E+00);
    } 
    _TMP997 = vec3(_TMP20, _TMP21, _TMP23);
    _x1020 = _pos12*TextureSize.xy + vec2( -1.00000000E+00, 2.00000000E+00);
    _TMP17 = floor(_x1020);
    _pos1018 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos1018.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x1028 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1028, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x1032 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1032, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x1036 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1036, 2.40000010E+00);
    } 
    _TMP1017 = vec3(_TMP20, _TMP21, _TMP23);
    _x1040 = _pos12*TextureSize.xy + vec2( 0.00000000E+00, 2.00000000E+00);
    _TMP17 = floor(_x1040);
    _pos1038 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos1038.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x1048 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1048, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x1052 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1052, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x1056 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1056, 2.40000010E+00);
    } 
    _TMP1037 = vec3(_TMP20, _TMP21, _TMP23);
    _x1060 = _pos12*TextureSize.xy + vec2( 1.00000000E+00, 2.00000000E+00);
    _TMP17 = floor(_x1060);
    _pos1058 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos1058.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x1068 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1068, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x1072 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1072, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x1076 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1076, 2.40000010E+00);
    } 
    _TMP1057 = vec3(_TMP20, _TMP21, _TMP23);
    _x1080 = _pos12*TextureSize.xy + vec2( 2.00000000E+00, 2.00000000E+00);
    _TMP17 = floor(_x1080);
    _pos1078 = (_TMP17 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;
    _TMP18 = COMPAT_TEXTURE(Texture, _pos1078.xy);
    if (_TMP18.x <= 4.04499993E-02) { 
        _TMP23 = _TMP18.x/1.29200001E+01;
    } else {
        _x1088 = (_TMP18.x + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1088, 2.40000010E+00);
    } 
    _TMP20 = _TMP23;
    if (_TMP18.y <= 4.04499993E-02) { 
        _TMP23 = _TMP18.y/1.29200001E+01;
    } else {
        _x1092 = (_TMP18.y + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1092, 2.40000010E+00);
    } 
    _TMP21 = _TMP23;
    if (_TMP18.z <= 4.04499993E-02) { 
        _TMP23 = _TMP18.z/1.29200001E+01;
    } else {
        _x1096 = (_TMP18.z + 5.49999997E-02)/1.05499995E+00;
        _TMP23 = pow(_x1096, 2.40000010E+00);
    } 
    _TMP1077 = vec3(_TMP20, _TMP21, _TMP23);
    _pos1098 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1098);
    _TMP11 = -((_pos1098 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos1102 = _TMP11.x - 2.00000000E+00;
    _x1104 = -3.00000000E+00*_pos1102*_pos1102;
    _TMP1101 = exp2(_x1104);
    _pos1106 = _TMP11.x - 1.00000000E+00;
    _x1108 = -3.00000000E+00*_pos1106*_pos1106;
    _TMP1105 = exp2(_x1108);
    _x1112 = -3.00000000E+00*_TMP11.x*_TMP11.x;
    _TMP1109 = exp2(_x1112);
    _pos1114 = _TMP11.x + 1.00000000E+00;
    _x1116 = -3.00000000E+00*_pos1114*_pos1114;
    _TMP1113 = exp2(_x1116);
    _pos1118 = _TMP11.x + 2.00000000E+00;
    _x1120 = -3.00000000E+00*_pos1118*_pos1118;
    _TMP1117 = exp2(_x1120);
    _e0346 = (_TMP997*_TMP1101 + _TMP1017*_TMP1105 + _TMP1037*_TMP1109 + _TMP1057*_TMP1113 + _TMP1077*_TMP1117)/(_TMP1101 + _TMP1105 + _TMP1109 + _TMP1113 + _TMP1117);
    _pos1124 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1124);
    _TMP14 = -((_pos1124 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos1128 = _TMP14.y + -2.00000000E+00;
    _x1130 = -2.00000000E+00*_pos1128*_pos1128;
    _TMP1127 = exp2(_x1130);
    _pos1134 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1134);
    _TMP14 = -((_pos1134 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos1138 = _TMP14.y + -1.00000000E+00;
    _x1140 = -2.00000000E+00*_pos1138*_pos1138;
    _TMP1137 = exp2(_x1140);
    _pos1144 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1144);
    _TMP14 = -((_pos1144 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _x1150 = -2.00000000E+00*_TMP14.y*_TMP14.y;
    _TMP1147 = exp2(_x1150);
    _pos1154 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1154);
    _TMP14 = -((_pos1154 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos1158 = _TMP14.y + 1.00000000E+00;
    _x1160 = -2.00000000E+00*_pos1158*_pos1158;
    _TMP1157 = exp2(_x1160);
    _pos1164 = _pos12*TextureSize.xy;
    _TMP19 = floor(_pos1164);
    _TMP14 = -((_pos1164 - _TMP19) - vec2( 5.00000000E-01, 5.00000000E-01));
    _pos1168 = _TMP14.y + 2.00000000E+00;
    _x1170 = -2.00000000E+00*_pos1168*_pos1168;
    _TMP1167 = exp2(_x1170);
    _TMP1 = _a0346*_TMP1127 + _b0346*_TMP1137 + _c0346*_TMP1147 + _d0346*_TMP1157 + _e0346*_TMP1167;
    _outColor.xyz = _outColor.xyz + _TMP1/1.60000000E+01;
    _x1172 = TEX0.xy*(TextureSize.xy/InputSize.xy)*OutputSize.xy;
    _TMP2 = floor(_x1172);
    _pos1174 = _TMP2 + vec2( 5.00000000E-01, 5.00000000E-01);
    _line1174 = 1.50000000E+00;
    _odd1174 = 0.00000000E+00;
    _x1176 = _pos1174.x/6.00000000E+00;
    _TMP1175 = fract(_x1176);
    if (_TMP1175 < 5.00000000E-01) { 
        _odd1174 = 1.00000000E+00;
    } 
    _x1180 = (_pos1174.y + _odd1174)/2.00000000E+00;
    _TMP1179 = fract(_x1180);
    if (_TMP1179 < 5.00000000E-01) { 
        _line1174 = 5.00000000E-01;
    } 
    _x1184 = _pos1174.x/3.00000000E+00;
    _TMP1183 = fract(_x1184);
    _mask11174 = vec3( 5.00000000E-01, 5.00000000E-01, 5.00000000E-01);
    if (_TMP1183 < 3.33000004E-01) { 
        _mask11174.x = 1.50000000E+00;
    } else {
        if (_TMP1183 < 6.66000009E-01) { 
            _mask11174.y = 1.50000000E+00;
        } else {
            _mask11174.z = 1.50000000E+00;
        } 
    } 
    _mask11174 = _mask11174*_line1174;
    _outColor.xyz = _outColor.xyz*_mask11174;
    if (_outColor.x < 3.13080009E-03) { 
        _TMP15 = _outColor.x*1.29200001E+01;
    } else {
        _TMP16 = pow(_outColor.x, 4.16660011E-01);
        _TMP15 = 1.05499995E+00*_TMP16 - 5.49999997E-02;
    } 
    _TMP7 = _TMP15;
    if (_outColor.y < 3.13080009E-03) { 
        _TMP15 = _outColor.y*1.29200001E+01;
    } else {
        _TMP16 = pow(_outColor.y, 4.16660011E-01);
        _TMP15 = 1.05499995E+00*_TMP16 - 5.49999997E-02;
    } 
    _TMP8 = _TMP15;
    if (_outColor.z < 3.13080009E-03) { 
        _TMP15 = _outColor.z*1.29200001E+01;
    } else {
        _TMP16 = pow(_outColor.z, 4.16660011E-01);
        _TMP15 = 1.05499995E+00*_TMP16 - 5.49999997E-02;
    } 
    _TMP4 = vec3(_TMP7, _TMP8, _TMP15);
    _ret_0 = vec4(_TMP4.x, _TMP4.y, _TMP4.z, 1.00000000E+00);
    FragColor = _ret_0;
    return;
} 
#endif
