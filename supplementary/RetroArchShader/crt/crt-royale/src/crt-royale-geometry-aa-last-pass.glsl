// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec3 _global_to_local_row2;
COMPAT_VARYING     vec3 _global_to_local_row1;
COMPAT_VARYING     vec3 _global_to_local_row0;
COMPAT_VARYING     vec4 _geom_aspect_and_overscan;
COMPAT_VARYING     vec3 _eye_pos_local;
COMPAT_VARYING     vec2 _tex_uv1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 VARvideo_and_texture_size_inv;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec2 _tex_uv1;
    vec4 _video_andVARvideo_and_texture_size_inv_inv;
    vec2 _output_dummy_size_inv;
    vec3 _eye_pos_local;
    vec4 _geom_aspect_and_overscan;
    vec3 _global_to_local_row0;
    vec3 _global_to_local_row1;
    vec3 _global_to_local_row2;
};
out_vertex _ret_0;
vec3 _TMP39;
float _TMP48;
float _TMP47;
float _TMP46;
float _TMP45;
vec3 _TMP43;
vec3 _TMP44;
float _TMP55;
float _TMP54;
float _TMP53;
float _TMP49;
vec2 _TMP52;
float _TMP22;
float _TMP21;
float _TMP51;
float _TMP50;
float _TMP41;
float _TMP40;
vec3 _TMP28;
float _TMP29;
float _TMP27;
float _TMP26;
float _TMP25;
float _TMP42;
float _TMP24;
float _TMP23;
float _TMP20;
float _TMP17;
float _TMP16;
float _TMP15;
float _TMP14;
input_dummy _IN1;
float _TMP229;
float _TMP239;
float _TMP245;
vec4 _r0276;
float _geom_clamped_aspect_ratio0278;
vec2 _geom_aspect0278;
vec2 _v0282;
vec3 _high_view0306;
vec3 _low_view0306;
float _len_sq0306;
float _fov0306;
float _eye_z_spherical0306;
float _num_negative_z_coords0306;
float _negate0312;
float _x0312;
float _ret0312;
float _a0316;
float _a0322;
float _arc_len0328;
float _angle_from_image_center0328;
float _z_pos0328;
vec3 _intersection_pos_local0328;
vec2 _angle_from_image_center0340;
vec2 _xy_pos0340;
float _z_pos0340;
float _a0350;
float _angle_from_image_center0354;
float _x_pos0354;
float _z_pos0354;
vec3 _intersection_pos_local0354;
vec3 _r0360;
vec2 _square_uv0370;
vec2 _square_uv_unit0370;
float _arc_len0370;
float _angle_from_image_center0370;
float _xy_dist_from_sphere_center0370;
vec2 _xy_pos0370;
float _z_pos0370;
vec3 _intersection_pos_local0370;
vec2 _square_uv0382;
vec2 _angle_from_image_center0382;
vec2 _xy_pos0382;
float _z_pos0382;
float _a0392;
vec2 _square_uv0396;
float _angle_from_image_center0396;
float _x_pos0396;
float _z_pos0396;
vec3 _intersection_pos_local0396;
vec3 _r0402;
vec2 _square_uv0412;
vec2 _square_uv_unit0412;
float _arc_len0412;
float _angle_from_image_center0412;
float _xy_dist_from_sphere_center0412;
vec2 _xy_pos0412;
float _z_pos0412;
vec3 _intersection_pos_local0412;
vec2 _square_uv0424;
vec2 _angle_from_image_center0424;
vec2 _xy_pos0424;
float _z_pos0424;
float _a0434;
vec2 _square_uv0438;
float _angle_from_image_center0438;
float _x_pos0438;
float _z_pos0438;
vec3 _intersection_pos_local0438;
vec3 _r0444;
vec2 _square_uv0454;
vec2 _square_uv_unit0454;
float _arc_len0454;
float _angle_from_image_center0454;
float _xy_dist_from_sphere_center0454;
vec2 _xy_pos0454;
float _z_pos0454;
vec3 _intersection_pos_local0454;
vec2 _square_uv0466;
vec2 _angle_from_image_center0466;
vec2 _xy_pos0466;
float _z_pos0466;
float _a0476;
vec2 _square_uv0480;
float _angle_from_image_center0480;
float _x_pos0480;
float _z_pos0480;
vec3 _intersection_pos_local0480;
vec3 _r0486;
vec2 _square_uv0496;
vec2 _square_uv_unit0496;
float _arc_len0496;
float _angle_from_image_center0496;
float _xy_dist_from_sphere_center0496;
vec2 _xy_pos0496;
float _z_pos0496;
vec3 _intersection_pos_local0496;
vec2 _square_uv0508;
vec2 _angle_from_image_center0508;
vec2 _xy_pos0508;
float _z_pos0508;
float _a0518;
vec2 _square_uv0522;
float _angle_from_image_center0522;
float _x_pos0522;
float _z_pos0522;
vec3 _intersection_pos_local0522;
vec3 _r0528;
vec2 _square_uv0538;
vec2 _square_uv_unit0538;
float _arc_len0538;
float _angle_from_image_center0538;
float _xy_dist_from_sphere_center0538;
vec2 _xy_pos0538;
float _z_pos0538;
vec3 _intersection_pos_local0538;
vec2 _square_uv0550;
vec2 _angle_from_image_center0550;
vec2 _xy_pos0550;
float _z_pos0550;
float _a0560;
vec2 _square_uv0564;
float _angle_from_image_center0564;
float _x_pos0564;
float _z_pos0564;
vec3 _intersection_pos_local0564;
vec3 _r0570;
vec2 _square_uv0580;
vec2 _square_uv_unit0580;
float _arc_len0580;
float _angle_from_image_center0580;
float _xy_dist_from_sphere_center0580;
vec2 _xy_pos0580;
float _z_pos0580;
vec3 _intersection_pos_local0580;
vec2 _square_uv0592;
vec2 _angle_from_image_center0592;
vec2 _xy_pos0592;
float _z_pos0592;
float _a0602;
vec2 _square_uv0606;
float _angle_from_image_center0606;
float _x_pos0606;
float _z_pos0606;
vec3 _intersection_pos_local0606;
vec3 _r0612;
vec2 _square_uv0622;
vec2 _square_uv_unit0622;
float _arc_len0622;
float _angle_from_image_center0622;
float _xy_dist_from_sphere_center0622;
vec2 _xy_pos0622;
float _z_pos0622;
vec3 _intersection_pos_local0622;
vec2 _square_uv0634;
vec2 _angle_from_image_center0634;
vec2 _xy_pos0634;
float _z_pos0634;
float _a0644;
vec2 _square_uv0648;
float _angle_from_image_center0648;
float _x_pos0648;
float _z_pos0648;
vec3 _intersection_pos_local0648;
vec3 _r0654;
vec2 _square_uv0664;
vec2 _square_uv_unit0664;
float _arc_len0664;
float _angle_from_image_center0664;
float _xy_dist_from_sphere_center0664;
vec2 _xy_pos0664;
float _z_pos0664;
vec3 _intersection_pos_local0664;
vec2 _square_uv0676;
vec2 _angle_from_image_center0676;
vec2 _xy_pos0676;
float _z_pos0676;
float _a0686;
vec2 _square_uv0690;
float _angle_from_image_center0690;
float _x_pos0690;
float _z_pos0690;
vec3 _intersection_pos_local0690;
vec3 _r0696;
vec3 _eyespace_coords10704[9];
vec3 _eye_pos0704;
float _abs_radius10704;
vec2 _offset_dr_min10704;
vec2 _offset_ul_max10704;
vec2 _offset_dr10704;
vec2 _offset_ul10704;
vec2 _center_offset10704;
float _offset_z_max10704;
vec3 _eyespace_xyz_flipy10704;
vec4 _offset_zzzz10704;
vec3 _r0722;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX3;
COMPAT_VARYING vec4 TEX4;
COMPAT_VARYING vec4 TEX5;
COMPAT_VARYING vec4 TEX6;
COMPAT_VARYING vec4 TEX7;
vec3 _TMP729;
vec3 _TMP730;
vec3 _TMP731;
vec3 _TMP732;
vec3 _TMP733;
vec3 _TMP734;
float _geom_radius;
float _geom_view_dist;
float _geom_overscan_x;
float _geom_overscan_y;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    float _viewport_aspect_ratio;
    vec2 _geom_overscan;
    vec2 _geom_tilt_angle;
    vec2 _sin_tilt;
    vec2 _cos_tilt;
    vec3 _TMP68[3];
    _TMP20 = min(3.00000000E+00, 0.00000000E+00);
    _TMP229 = max(0.00000000E+00, _TMP20);
    _geom_radius = max(1.59154937E-01, 2.00000000E+00);
    _geom_view_dist = max(5.00000000E-01, 2.00000000E+00);
    _TMP20 = min(3.14159274E+00, 0.00000000E+00);
    _TMP239 = max(-3.14159274E+00, _TMP20);
    _TMP20 = min(3.14159274E+00, 0.00000000E+00);
    _TMP245 = max(-3.14159274E+00, _TMP20);
    _TMP14 = abs(0.00000000E+00);
    _TMP15 = max(_TMP14, 1.52587891E-05);
    _geom_overscan_x = max(_TMP15, 1.00000000E+00);
    _TMP16 = abs(0.00000000E+00);
    _TMP17 = max(_TMP16, 1.52587891E-05);
    _geom_overscan_y = max(_TMP17, 1.00000000E+00);
    _r0276 = VertexCoord.x*MVPMatrix[0];
    _r0276 = _r0276 + VertexCoord.y*MVPMatrix[1];
    _r0276 = _r0276 + VertexCoord.z*MVPMatrix[2];
    _r0276 = _r0276 + VertexCoord.w*MVPMatrix[3];
    _OUT._video_andVARvideo_and_texture_size_inv_inv = vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00)/vec4(InputSize.x, InputSize.y, TextureSize.x, TextureSize.y);
    _OUT._output_dummy_size_inv = vec2( 1.00000000E+00, 1.00000000E+00)/OutputSize;
    _viewport_aspect_ratio = OutputSize.x/OutputSize.y;
    _geom_clamped_aspect_ratio0278 = min(_viewport_aspect_ratio, 1.33333337E+00);
    _v0282 = vec2(_geom_clamped_aspect_ratio0278, 1.00000000E+00);
    _TMP40 = dot(_v0282, _v0282);
    _TMP41 = inversesqrt(_TMP40);
    _geom_aspect0278 = _TMP41*_v0282;
    _geom_overscan = vec2(_geom_overscan_x, _geom_overscan_y);
    _OUT._geom_aspect_and_overscan = vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_overscan.x, _geom_overscan.y);
    _geom_tilt_angle = vec2(_TMP239, _TMP245);
    _TMP21 = sin(_geom_tilt_angle.x);
    _TMP22 = sin(_geom_tilt_angle.y);
    _sin_tilt = vec2(_TMP21, _TMP22);
    _TMP23 = cos(_geom_tilt_angle.x);
    _TMP24 = cos(_geom_tilt_angle.y);
    _cos_tilt = vec2(_TMP23, _TMP24);
    _TMP68[0] = vec3(_cos_tilt.x, _sin_tilt.y*_sin_tilt.x, _cos_tilt.y*_sin_tilt.x);
    _TMP68[1] = vec3(0.00000000E+00, _cos_tilt.y, -_sin_tilt.y);
    _TMP68[2] = vec3(-_sin_tilt.x, _sin_tilt.y*_cos_tilt.x, _cos_tilt.y*_cos_tilt.x);
    _high_view0306 = vec3(0.00000000E+00, _geom_aspect0278.y, -_geom_view_dist);
    _low_view0306 = _high_view0306*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
    _len_sq0306 = dot(_high_view0306, _high_view0306);
    _TMP25 = dot(_high_view0306, _low_view0306);
    _x0312 = _TMP25/_len_sq0306;
    _negate0312 = float((_x0312 < 0.00000000E+00));
    _x0312 = abs(_x0312);
    _ret0312 = -1.87292993E-02*_x0312;
    _ret0312 = _ret0312 + 7.42610022E-02;
    _ret0312 = _ret0312*_x0312;
    _ret0312 = _ret0312 - 2.12114394E-01;
    _ret0312 = _ret0312*_x0312;
    _ret0312 = _ret0312 + 1.57072902E+00;
    _a0316 = 1.00000000E+00 - _x0312;
    _TMP49 = inversesqrt(_a0316);
    _TMP42 = 1.00000000E+00/_TMP49;
    _ret0312 = _ret0312*_TMP42;
    _ret0312 = _ret0312 - 2.00000000E+00*_negate0312*_ret0312;
    _TMP26 = _negate0312*3.14159298E+00 + _ret0312;
    _fov0306 = abs(_TMP26);
    _a0322 = _fov0306*5.00000000E-01;
    _TMP27 = sin(_a0322);
    _eye_z_spherical0306 = _geom_radius/_TMP27;
    if (_TMP229 < 2.50000000E+00) { 
        _TMP28 = vec3(0.00000000E+00, 0.00000000E+00, _eye_z_spherical0306);
    } else {
        _TMP29 = max(_geom_view_dist, _eye_z_spherical0306);
        _TMP28 = vec3(0.00000000E+00, 0.00000000E+00, _TMP29);
    } 
    if (_TMP229 < 1.50000000E+00) { 
        _arc_len0328 = 0.00000000E+00/0.00000000E+00;
        _angle_from_image_center0328 = _arc_len0328/_geom_radius;
        _TMP51 = cos(_angle_from_image_center0328);
        _z_pos0328 = _TMP51*_geom_radius;
        _intersection_pos_local0328 = vec3(0.00000000E+00, -0.00000000E+00, _z_pos0328);
        _TMP43 = _intersection_pos_local0328;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _angle_from_image_center0340 = vec2( 0.00000000E+00, 0.00000000E+00)/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0340.x);
            _TMP22 = sin(_angle_from_image_center0340.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0340 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0340, _xy_pos0340);
            _a0350 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0350);
            _z_pos0340 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0340.x, -_xy_pos0340.y, _z_pos0340);
        } else {
            _angle_from_image_center0354 = 0.00000000E+00/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0354);
            _x_pos0354 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0354);
            _z_pos0354 = _TMP55*_geom_radius;
            _intersection_pos_local0354 = vec3(_x_pos0354, -0.00000000E+00, _z_pos0354);
            _TMP44 = _intersection_pos_local0354;
        } 
        _TMP43 = _TMP44;
    } 
    _r0360.x = dot(_TMP68[0], _TMP43);
    _r0360.y = dot(_TMP68[1], _TMP43);
    _r0360.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0370 = vec2( 0.00000000E+00, -5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0370, _square_uv0370);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0370 = _TMP41*_square_uv0370;
        _arc_len0370 = _square_uv0370.y/_square_uv_unit0370.y;
        _angle_from_image_center0370 = _arc_len0370/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0370);
        _xy_dist_from_sphere_center0370 = _TMP50*_geom_radius;
        _xy_pos0370 = _xy_dist_from_sphere_center0370*_square_uv_unit0370;
        _TMP51 = cos(_angle_from_image_center0370);
        _z_pos0370 = _TMP51*_geom_radius;
        _intersection_pos_local0370 = vec3(_xy_pos0370.x, -_xy_pos0370.y, _z_pos0370);
        _TMP43 = _intersection_pos_local0370;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0382 = vec2( 0.00000000E+00, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0382 = _square_uv0382/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0382.x);
            _TMP22 = sin(_angle_from_image_center0382.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0382 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0382, _xy_pos0382);
            _a0392 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0392);
            _z_pos0382 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0382.x, -_xy_pos0382.y, _z_pos0382);
        } else {
            _square_uv0396 = vec2( 0.00000000E+00, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0396 = _square_uv0396.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0396);
            _x_pos0396 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0396);
            _z_pos0396 = _TMP55*_geom_radius;
            _intersection_pos_local0396 = vec3(_x_pos0396, -_square_uv0396.y, _z_pos0396);
            _TMP44 = _intersection_pos_local0396;
        } 
        _TMP43 = _TMP44;
    } 
    _r0402.x = dot(_TMP68[0], _TMP43);
    _r0402.y = dot(_TMP68[1], _TMP43);
    _r0402.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0412 = vec2( 0.00000000E+00, 5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0412, _square_uv0412);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0412 = _TMP41*_square_uv0412;
        _arc_len0412 = _square_uv0412.y/_square_uv_unit0412.y;
        _angle_from_image_center0412 = _arc_len0412/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0412);
        _xy_dist_from_sphere_center0412 = _TMP50*_geom_radius;
        _xy_pos0412 = _xy_dist_from_sphere_center0412*_square_uv_unit0412;
        _TMP51 = cos(_angle_from_image_center0412);
        _z_pos0412 = _TMP51*_geom_radius;
        _intersection_pos_local0412 = vec3(_xy_pos0412.x, -_xy_pos0412.y, _z_pos0412);
        _TMP43 = _intersection_pos_local0412;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0424 = vec2( 0.00000000E+00, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0424 = _square_uv0424/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0424.x);
            _TMP22 = sin(_angle_from_image_center0424.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0424 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0424, _xy_pos0424);
            _a0434 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0434);
            _z_pos0424 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0424.x, -_xy_pos0424.y, _z_pos0424);
        } else {
            _square_uv0438 = vec2( 0.00000000E+00, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0438 = _square_uv0438.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0438);
            _x_pos0438 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0438);
            _z_pos0438 = _TMP55*_geom_radius;
            _intersection_pos_local0438 = vec3(_x_pos0438, -_square_uv0438.y, _z_pos0438);
            _TMP44 = _intersection_pos_local0438;
        } 
        _TMP43 = _TMP44;
    } 
    _r0444.x = dot(_TMP68[0], _TMP43);
    _r0444.y = dot(_TMP68[1], _TMP43);
    _r0444.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0454 = vec2( -5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0454, _square_uv0454);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0454 = _TMP41*_square_uv0454;
        _arc_len0454 = _square_uv0454.y/_square_uv_unit0454.y;
        _angle_from_image_center0454 = _arc_len0454/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0454);
        _xy_dist_from_sphere_center0454 = _TMP50*_geom_radius;
        _xy_pos0454 = _xy_dist_from_sphere_center0454*_square_uv_unit0454;
        _TMP51 = cos(_angle_from_image_center0454);
        _z_pos0454 = _TMP51*_geom_radius;
        _intersection_pos_local0454 = vec3(_xy_pos0454.x, -_xy_pos0454.y, _z_pos0454);
        _TMP43 = _intersection_pos_local0454;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0466 = vec2( -5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
            _angle_from_image_center0466 = _square_uv0466/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0466.x);
            _TMP22 = sin(_angle_from_image_center0466.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0466 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0466, _xy_pos0466);
            _a0476 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0476);
            _z_pos0466 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0466.x, -_xy_pos0466.y, _z_pos0466);
        } else {
            _square_uv0480 = vec2( -5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
            _angle_from_image_center0480 = _square_uv0480.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0480);
            _x_pos0480 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0480);
            _z_pos0480 = _TMP55*_geom_radius;
            _intersection_pos_local0480 = vec3(_x_pos0480, -_square_uv0480.y, _z_pos0480);
            _TMP44 = _intersection_pos_local0480;
        } 
        _TMP43 = _TMP44;
    } 
    _r0486.x = dot(_TMP68[0], _TMP43);
    _r0486.y = dot(_TMP68[1], _TMP43);
    _r0486.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0496 = vec2( 5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0496, _square_uv0496);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0496 = _TMP41*_square_uv0496;
        _arc_len0496 = _square_uv0496.y/_square_uv_unit0496.y;
        _angle_from_image_center0496 = _arc_len0496/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0496);
        _xy_dist_from_sphere_center0496 = _TMP50*_geom_radius;
        _xy_pos0496 = _xy_dist_from_sphere_center0496*_square_uv_unit0496;
        _TMP51 = cos(_angle_from_image_center0496);
        _z_pos0496 = _TMP51*_geom_radius;
        _intersection_pos_local0496 = vec3(_xy_pos0496.x, -_xy_pos0496.y, _z_pos0496);
        _TMP43 = _intersection_pos_local0496;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0508 = vec2( 5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
            _angle_from_image_center0508 = _square_uv0508/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0508.x);
            _TMP22 = sin(_angle_from_image_center0508.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0508 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0508, _xy_pos0508);
            _a0518 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0518);
            _z_pos0508 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0508.x, -_xy_pos0508.y, _z_pos0508);
        } else {
            _square_uv0522 = vec2( 5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
            _angle_from_image_center0522 = _square_uv0522.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0522);
            _x_pos0522 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0522);
            _z_pos0522 = _TMP55*_geom_radius;
            _intersection_pos_local0522 = vec3(_x_pos0522, -_square_uv0522.y, _z_pos0522);
            _TMP44 = _intersection_pos_local0522;
        } 
        _TMP43 = _TMP44;
    } 
    _r0528.x = dot(_TMP68[0], _TMP43);
    _r0528.y = dot(_TMP68[1], _TMP43);
    _r0528.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0538 = vec2( -5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0538, _square_uv0538);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0538 = _TMP41*_square_uv0538;
        _arc_len0538 = _square_uv0538.y/_square_uv_unit0538.y;
        _angle_from_image_center0538 = _arc_len0538/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0538);
        _xy_dist_from_sphere_center0538 = _TMP50*_geom_radius;
        _xy_pos0538 = _xy_dist_from_sphere_center0538*_square_uv_unit0538;
        _TMP51 = cos(_angle_from_image_center0538);
        _z_pos0538 = _TMP51*_geom_radius;
        _intersection_pos_local0538 = vec3(_xy_pos0538.x, -_xy_pos0538.y, _z_pos0538);
        _TMP43 = _intersection_pos_local0538;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0550 = vec2( -5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0550 = _square_uv0550/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0550.x);
            _TMP22 = sin(_angle_from_image_center0550.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0550 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0550, _xy_pos0550);
            _a0560 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0560);
            _z_pos0550 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0550.x, -_xy_pos0550.y, _z_pos0550);
        } else {
            _square_uv0564 = vec2( -5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0564 = _square_uv0564.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0564);
            _x_pos0564 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0564);
            _z_pos0564 = _TMP55*_geom_radius;
            _intersection_pos_local0564 = vec3(_x_pos0564, -_square_uv0564.y, _z_pos0564);
            _TMP44 = _intersection_pos_local0564;
        } 
        _TMP43 = _TMP44;
    } 
    _r0570.x = dot(_TMP68[0], _TMP43);
    _r0570.y = dot(_TMP68[1], _TMP43);
    _r0570.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0580 = vec2( 5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0580, _square_uv0580);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0580 = _TMP41*_square_uv0580;
        _arc_len0580 = _square_uv0580.y/_square_uv_unit0580.y;
        _angle_from_image_center0580 = _arc_len0580/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0580);
        _xy_dist_from_sphere_center0580 = _TMP50*_geom_radius;
        _xy_pos0580 = _xy_dist_from_sphere_center0580*_square_uv_unit0580;
        _TMP51 = cos(_angle_from_image_center0580);
        _z_pos0580 = _TMP51*_geom_radius;
        _intersection_pos_local0580 = vec3(_xy_pos0580.x, -_xy_pos0580.y, _z_pos0580);
        _TMP43 = _intersection_pos_local0580;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0592 = vec2( 5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0592 = _square_uv0592/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0592.x);
            _TMP22 = sin(_angle_from_image_center0592.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0592 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0592, _xy_pos0592);
            _a0602 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0602);
            _z_pos0592 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0592.x, -_xy_pos0592.y, _z_pos0592);
        } else {
            _square_uv0606 = vec2( 5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0606 = _square_uv0606.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0606);
            _x_pos0606 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0606);
            _z_pos0606 = _TMP55*_geom_radius;
            _intersection_pos_local0606 = vec3(_x_pos0606, -_square_uv0606.y, _z_pos0606);
            _TMP44 = _intersection_pos_local0606;
        } 
        _TMP43 = _TMP44;
    } 
    _r0612.x = dot(_TMP68[0], _TMP43);
    _r0612.y = dot(_TMP68[1], _TMP43);
    _r0612.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0622 = vec2( -5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0622, _square_uv0622);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0622 = _TMP41*_square_uv0622;
        _arc_len0622 = _square_uv0622.y/_square_uv_unit0622.y;
        _angle_from_image_center0622 = _arc_len0622/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0622);
        _xy_dist_from_sphere_center0622 = _TMP50*_geom_radius;
        _xy_pos0622 = _xy_dist_from_sphere_center0622*_square_uv_unit0622;
        _TMP51 = cos(_angle_from_image_center0622);
        _z_pos0622 = _TMP51*_geom_radius;
        _intersection_pos_local0622 = vec3(_xy_pos0622.x, -_xy_pos0622.y, _z_pos0622);
        _TMP43 = _intersection_pos_local0622;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0634 = vec2( -5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0634 = _square_uv0634/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0634.x);
            _TMP22 = sin(_angle_from_image_center0634.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0634 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0634, _xy_pos0634);
            _a0644 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0644);
            _z_pos0634 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0634.x, -_xy_pos0634.y, _z_pos0634);
        } else {
            _square_uv0648 = vec2( -5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0648 = _square_uv0648.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0648);
            _x_pos0648 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0648);
            _z_pos0648 = _TMP55*_geom_radius;
            _intersection_pos_local0648 = vec3(_x_pos0648, -_square_uv0648.y, _z_pos0648);
            _TMP44 = _intersection_pos_local0648;
        } 
        _TMP43 = _TMP44;
    } 
    _r0654.x = dot(_TMP68[0], _TMP43);
    _r0654.y = dot(_TMP68[1], _TMP43);
    _r0654.z = dot(_TMP68[2], _TMP43);
    if (_TMP229 < 1.50000000E+00) { 
        _square_uv0664 = vec2( 5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
        _TMP40 = dot(_square_uv0664, _square_uv0664);
        _TMP41 = inversesqrt(_TMP40);
        _square_uv_unit0664 = _TMP41*_square_uv0664;
        _arc_len0664 = _square_uv0664.y/_square_uv_unit0664.y;
        _angle_from_image_center0664 = _arc_len0664/_geom_radius;
        _TMP50 = sin(_angle_from_image_center0664);
        _xy_dist_from_sphere_center0664 = _TMP50*_geom_radius;
        _xy_pos0664 = _xy_dist_from_sphere_center0664*_square_uv_unit0664;
        _TMP51 = cos(_angle_from_image_center0664);
        _z_pos0664 = _TMP51*_geom_radius;
        _intersection_pos_local0664 = vec3(_xy_pos0664.x, -_xy_pos0664.y, _z_pos0664);
        _TMP43 = _intersection_pos_local0664;
    } else {
        if (_TMP229 < 2.50000000E+00) { 
            _square_uv0676 = vec2( 5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0676 = _square_uv0676/_geom_radius;
            _TMP21 = sin(_angle_from_image_center0676.x);
            _TMP22 = sin(_angle_from_image_center0676.y);
            _TMP52 = vec2(_TMP21, _TMP22);
            _xy_pos0676 = _TMP52*_geom_radius;
            _TMP53 = dot(_xy_pos0676, _xy_pos0676);
            _a0686 = _geom_radius*_geom_radius - _TMP53;
            _TMP49 = inversesqrt(_a0686);
            _z_pos0676 = 1.00000000E+00/_TMP49;
            _TMP44 = vec3(_xy_pos0676.x, -_xy_pos0676.y, _z_pos0676);
        } else {
            _square_uv0690 = vec2( 5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
            _angle_from_image_center0690 = _square_uv0690.x/_geom_radius;
            _TMP54 = sin(_angle_from_image_center0690);
            _x_pos0690 = _TMP54*_geom_radius;
            _TMP55 = cos(_angle_from_image_center0690);
            _z_pos0690 = _TMP55*_geom_radius;
            _intersection_pos_local0690 = vec3(_x_pos0690, -_square_uv0690.y, _z_pos0690);
            _TMP44 = _intersection_pos_local0690;
        } 
        _TMP43 = _TMP44;
    } 
    _r0696.x = dot(_TMP68[0], _TMP43);
    _r0696.y = dot(_TMP68[1], _TMP43);
    _r0696.z = dot(_TMP68[2], _TMP43);
    _num_negative_z_coords0306 = float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    if (_num_negative_z_coords0306 > 5.00000000E-01) { 
        _TMP39 = _TMP28;
    } else {
        _eye_pos0704 = _TMP28;
        _eyespace_coords10704[0] = _r0360 - _TMP28;
        _eyespace_coords10704[1] = _r0402 - _TMP28;
        _eyespace_coords10704[2] = _r0444 - _TMP28;
        _eyespace_coords10704[3] = _r0486 - _TMP28;
        _eyespace_coords10704[4] = _r0528 - _TMP28;
        _eyespace_coords10704[5] = _r0570 - _TMP28;
        _eyespace_coords10704[6] = _r0612 - _TMP28;
        _eyespace_coords10704[7] = _r0654 - _TMP28;
        _eyespace_coords10704[8] = _r0696 - _TMP28;
        _abs_radius10704 = abs(_geom_radius);
        _offset_dr_min10704 = vec2(1.00000000E+01*_abs_radius10704, 1.00000000E+01*_abs_radius10704);
        _offset_ul_max10704 = vec2(-1.00000000E+01*_abs_radius10704, -1.00000000E+01*_abs_radius10704);
        _offset_dr10704 = _eyespace_coords10704[0].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[0].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[0].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[0].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[1].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[1].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[1].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[1].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[2].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[2].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[2].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[2].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[3].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[3].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[3].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[3].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[4].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[4].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[4].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[4].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[5].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[5].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[5].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[5].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[6].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[6].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[6].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[6].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[7].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[7].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[7].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[7].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[8].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[8].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[8].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[8].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _center_offset10704 = 5.00000000E-01*(_offset_ul_max10704 + _offset_dr_min10704);
        _eye_pos0704.xy = _TMP28.xy + _center_offset10704;
        _eyespace_coords10704[0] = _r0360 - _eye_pos0704;
        _eyespace_coords10704[1] = _r0402 - _eye_pos0704;
        _eyespace_coords10704[2] = _r0444 - _eye_pos0704;
        _eyespace_coords10704[3] = _r0486 - _eye_pos0704;
        _eyespace_coords10704[4] = _r0528 - _eye_pos0704;
        _eyespace_coords10704[5] = _r0570 - _eye_pos0704;
        _eyespace_coords10704[6] = _r0612 - _eye_pos0704;
        _eyespace_coords10704[7] = _r0654 - _eye_pos0704;
        _eyespace_coords10704[8] = _r0696 - _eye_pos0704;
        _offset_z_max10704 = -1.00000000E+01*_geom_radius*_geom_view_dist;
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[0]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[1]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[2]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[3]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[4]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[5]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[6]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[7]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[8]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eye_pos0704.z = _TMP28.z + _offset_z_max10704;
        _TMP39 = _eye_pos0704;
    } 
    _TMP729.x = _TMP68[0].x;
    _TMP729.y = _TMP68[1].x;
    _TMP729.z = _TMP68[2].x;
    _r0722.x = dot(_TMP729, _TMP39);
    _TMP730.x = _TMP68[0].y;
    _TMP730.y = _TMP68[1].y;
    _TMP730.z = _TMP68[2].y;
    _r0722.y = dot(_TMP730, _TMP39);
    _TMP731.x = _TMP68[0].z;
    _TMP731.y = _TMP68[1].z;
    _TMP731.z = _TMP68[2].z;
    _r0722.z = dot(_TMP731, _TMP39);
    _ret_0._position1 = _r0276;
    _ret_0._tex_uv1 = TexCoord.xy;
    _ret_0._video_andVARvideo_and_texture_size_inv_inv = _OUT._video_andVARvideo_and_texture_size_inv_inv;
    _ret_0._output_dummy_size_inv = _OUT._output_dummy_size_inv;
    _ret_0._eye_pos_local = _r0722;
    _ret_0._geom_aspect_and_overscan = _OUT._geom_aspect_and_overscan;
    _TMP732.x = _TMP68[0].x;
    _TMP732.y = _TMP68[1].x;
    _TMP732.z = _TMP68[2].x;
    _ret_0._global_to_local_row0 = _TMP732;
    _TMP733.x = _TMP68[0].y;
    _TMP733.y = _TMP68[1].y;
    _TMP733.z = _TMP68[2].y;
    _ret_0._global_to_local_row1 = _TMP733;
    _TMP734.x = _TMP68[0].z;
    _TMP734.y = _TMP68[1].z;
    _TMP734.z = _TMP68[2].z;
    _ret_0._global_to_local_row2 = _TMP734;
    gl_Position = _r0276;
    TEX0.xy = TexCoord.xy;
    TEX1 = _OUT._video_andVARvideo_and_texture_size_inv_inv;
    TEX2.xy = _OUT._output_dummy_size_inv;
    TEX3.xyz = _r0722;
    TEX4 = _OUT._geom_aspect_and_overscan;
    TEX5.xyz = _TMP732;
    TEX6.xyz = _TMP733;
    TEX7.xyz = _TMP734;
    return;
    TEX0.xy = _ret_0._tex_uv1;
    TEX1 = _ret_0._video_andVARvideo_and_texture_size_inv_inv;
    TEX2.xy = _ret_0._output_dummy_size_inv;
    TEX3.xyz = _ret_0._eye_pos_local;
    TEX4 = _ret_0._geom_aspect_and_overscan;
    TEX5.xyz = _ret_0._global_to_local_row0;
    TEX6.xyz = _ret_0._global_to_local_row1;
    TEX7.xyz = _ret_0._global_to_local_row2;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec3 _global_to_local_row2;
COMPAT_VARYING     vec3 _global_to_local_row1;
COMPAT_VARYING     vec3 _global_to_local_row0;
COMPAT_VARYING     vec4 _geom_aspect_and_overscan;
COMPAT_VARYING     vec3 _eye_pos_local4;
COMPAT_VARYING     vec2 _tex_uv4;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 VARvideo_and_texture_size_inv;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec2 _tex_uv4;
    vec4 _video_andVARvideo_and_texture_size_inv_inv;
    vec2 _output_dummy_size_inv3;
    vec3 _eye_pos_local4;
    vec4 _geom_aspect_and_overscan;
    vec3 _global_to_local_row0;
    vec3 _global_to_local_row1;
    vec3 _global_to_local_row2;
};
vec4 _ret_0;
vec3 _TMP27;
float _TMP58;
float _TMP57;
float _TMP56;
float _TMP25;
float _TMP24;
float _TMP23;
vec2 _TMP22;
vec4 _TMP21;
float _TMP69;
float _TMP68;
float _TMP67;
float _TMP66;
float _TMP65;
float _TMP64;
float _TMP73;
float _TMP74;
vec2 _TMP63;
bool _TMP13;
float _TMP43;
vec3 _TMP42;
vec3 _TMP41;
vec3 _TMP40;
float _TMP30;
float _TMP29;
vec3 _TMP39;
vec3 _TMP38;
vec3 _TMP37;
vec3 _TMP36;
vec3 _TMP35;
vec3 _TMP34;
float _TMP33;
float _TMP32;
float _TMP31;
vec3 _TMP17;
vec2 _TMP28;
vec2 _TMP60;
vec2 _TMP61;
float _TMP80;
float _TMP79;
float _TMP76;
float _TMP78;
float _TMP77;
vec2 _TMP84;
vec2 _TMP83;
float _TMP82;
float _TMP81;
vec3 _TMP72;
vec2 _TMP59;
float _TMP75;
float _TMP85;
float _TMP71;
float _TMP70;
float _TMP16;
uniform sampler2D Texture;
input_dummy _IN1;
float _TMP265;
float _TMP299;
vec2 _view_uv0310;
vec3 _view_vec_global0310;
vec2 _video_uv0310;
vec3 _normal10310;
vec3 _r0312;
vec3 _intersection_pos_local0320;
vec2 _TMP323;
float _a0324;
float _b_over_20324;
float _c0324;
float _discriminant0332;
float _solution00332;
vec2 _TMP337;
vec3 _cylinder_top_vec0338;
vec3 _top_to_eye_vec0338;
vec3 _axis_x_view0338;
vec3 _axis_x_top_to_eye0338;
float _a0338;
float _b_over_20338;
float _c0338;
float _discriminant0350;
float _solution00350;
vec3 _image_center_pos_local0358;
float _cp_len0358;
float _dp0358;
float _arc_len0358;
vec2 _square_uv_unit0358;
vec2 _square_uv0358;
vec2 _video_uv0358;
float _t30366;
float _t10366;
float _t00366;
float _t40366;
vec2 _v0380;
vec2 _signed_arc_len0386;
vec2 _video_uv0386;
vec2 _t30388;
vec2 _t10388;
vec2 _y0388;
vec2 _t00388;
vec2 _t40388;
float _signed_arc_len0402;
vec2 _square_uv0402;
vec2 _video_uv0402;
float _t30404;
float _t10404;
float _t00404;
float _t40404;
vec3 _view_vec_right_global0424;
vec3 _view_vec_down_global0424;
vec3 _right_pos0424;
vec3 _down_pos0424;
vec3 _object_right_vec0424;
vec3 _object_down_vec0424;
vec3 _TMP1070424[3];
vec3 _r0426;
vec3 _r0434;
vec3 _a0442;
vec3 _cotangent_unscaled0448;
vec3 _cobitangent_unscaled0448;
vec3 _tangent10448;
vec3 _bitangent10448;
vec3 _computed_normal0448;
float _inv_determinant0448;
vec3 _cotangent0448;
vec3 _cobitangent0448;
vec3 _b0466;
vec3 _b0474;
vec3 _C0494[3];
vec2 _TMP1020496[2];
vec2 _scale0496;
bvec2 _a0502;
vec3 _TMP503;
vec4 _ssd_fai0506;
vec2 _xy_step0506;
vec2 _xy_start_offset0506;
vec2 _xy_offset00506;
vec2 _xy_offset10506;
vec2 _xy_offset20506;
vec2 _xy_offset30506;
vec2 _xy_offset40506;
vec2 _xy_offset50506;
vec3 _w00506;
vec3 _w10506;
vec3 _w20506;
vec3 _w30506;
vec3 _w40506;
vec3 _w50506;
vec3 _half_sum0506;
vec3 _w_sum0506;
vec3 _w_sum_inv0506;
vec3 _sample00506;
vec3 _sample10506;
vec3 _sample20506;
vec3 _sample30506;
vec3 _sample40506;
vec3 _sample50506;
vec3 _sample60506;
vec3 _sample70506;
vec3 _sample80506;
vec3 _sample90506;
vec3 _sample100506;
vec2 _subpixel_support_radius_raw0509;
vec2 _subpixel_support_radius10509;
vec2 _final_axis_importance20509;
vec2 _subpixel_support_diam20509;
vec2 _b0515;
vec2 _offset_g0517;
vec2 _offset_r0517;
vec2 _offset_b0517;
float _abs_dist0521;
float _abs_dist0525;
float _abs_dist0529;
float _abs_dist0533;
float _abs_dist0537;
float _abs_dist0541;
vec2 _offset_g0545;
vec2 _offset_r0545;
vec2 _offset_b0545;
float _abs_dist0549;
float _abs_dist0553;
float _abs_dist0557;
float _abs_dist0561;
float _abs_dist0565;
float _abs_dist0569;
vec2 _offset_g0573;
vec2 _offset_r0573;
vec2 _offset_b0573;
float _abs_dist0577;
float _abs_dist0581;
float _abs_dist0585;
float _abs_dist0589;
float _abs_dist0593;
float _abs_dist0597;
vec2 _offset_g0601;
vec2 _offset_r0601;
vec2 _offset_b0601;
float _abs_dist0605;
float _abs_dist0609;
float _abs_dist0613;
float _abs_dist0617;
float _abs_dist0621;
float _abs_dist0625;
vec2 _offset_g0629;
vec2 _offset_r0629;
vec2 _offset_b0629;
float _abs_dist0633;
float _abs_dist0637;
float _abs_dist0641;
float _abs_dist0645;
float _abs_dist0649;
float _abs_dist0653;
vec2 _offset_g0657;
vec2 _offset_r0657;
vec2 _offset_b0657;
float _abs_dist0661;
float _abs_dist0665;
float _abs_dist0669;
float _abs_dist0673;
float _abs_dist0677;
float _abs_dist0681;
vec2 _r0687;
vec2 _r0693;
vec2 _r0699;
vec2 _r0705;
vec2 _r0711;
vec2 _r0717;
vec2 _s0723;
vec2 _s0731;
vec2 _s0739;
vec2 _s0747;
vec2 _s0755;
vec2 _s0763;
vec2 _s0771;
vec2 _s0779;
vec2 _s0787;
vec2 _s0795;
vec2 _s0803;
vec2 _s0811;
float _color_g0819;
float _color_r0819;
vec2 _r0823;
vec2 _tex_coords0835;
vec2 _tex_coords0841;
float _TMP852;
vec2 _edge_dists0853;
vec2 _border_penetration0853;
float _penetration_ratio0853;
float _border_escape_ratio0853;
float _border_dim_factor0853;
vec2 _b0855;
vec2 _a0857;
float _a0861;
vec4 _color0869;
vec3 _b0877;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX3;
COMPAT_VARYING vec4 TEX4;
COMPAT_VARYING vec4 TEX5;
COMPAT_VARYING vec4 TEX6;
COMPAT_VARYING vec4 TEX7;
vec2 _TMP884;
vec2 _TMP885;
vec4 _TMP886;
vec4 _TMP887;
float _lcd_gamma;
float _geom_radius;
float _geom_view_dist;
float _border_darkness;
float _border_compress;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _flat_video_uv1;
    vec2 _pixel_to_video_uv[2];
    vec2 _video_uv_no_geom_overscan;
    vec2 _video_uv5;
    vec2 _tex_uv3;
    vec2 _abs_aa_r_offset;
    bool _need_subpixel_aa;
    vec3 _color2;
    vec3 _final_color;
    vec2 _TMP103[2];
    _lcd_gamma = max(0.00000000E+00, 2.20000005E+00);
    _TMP16 = min(3.00000000E+00, 0.00000000E+00);
    _TMP265 = max(0.00000000E+00, _TMP16);
    _geom_radius = max(1.59154937E-01, 2.00000000E+00);
    _geom_view_dist = max(5.00000000E-01, 2.00000000E+00);
    _TMP16 = min(5.00000000E-01, 1.49999997E-02);
    _TMP299 = max(0.00000000E+00, _TMP16);
    _border_darkness = max(0.00000000E+00, 2.00000000E+00);
    _border_compress = max(1.00000000E+00, 2.50000000E+00);
    _flat_video_uv1 = TEX0.xy*TextureSize*TEX1.xy;
    if (_TMP265 > 5.00000000E-01) { 
        _view_uv0310 = (_flat_video_uv1 - vec2( 5.00000000E-01, 5.00000000E-01))*TEX4.xy;
        _view_vec_global0310 = vec3(_view_uv0310.x, -_view_uv0310.y, -_geom_view_dist);
        _r0312.x = dot(TEX5.xyz, _view_vec_global0310);
        _r0312.y = dot(TEX6.xyz, _view_vec_global0310);
        _r0312.z = dot(TEX7.xyz, _view_vec_global0310);
        if (_TMP265 < 2.50000000E+00) { 
            _a0324 = dot(_r0312, _r0312);
            _b_over_20324 = dot(_r0312, TEX3.xyz);
            _TMP70 = dot(TEX3.xyz, TEX3.xyz);
            _c0324 = _TMP70 - _geom_radius*_geom_radius;
            _discriminant0332 = _b_over_20324*_b_over_20324 - _a0324*_c0324;
            _TMP85 = inversesqrt(_discriminant0332);
            _TMP75 = 1.00000000E+00/_TMP85;
            _solution00332 = _c0324/(-_b_over_20324 + _TMP75);
            _TMP323 = vec2(_solution00332, _discriminant0332);
            _TMP59 = _TMP323;
        } else {
            _cylinder_top_vec0338 = vec3(0.00000000E+00, _geom_radius, 0.00000000E+00);
            _top_to_eye_vec0338 = TEX3.xyz - _cylinder_top_vec0338;
            _axis_x_view0338 = vec3( 1.00000000E+00, 0.00000000E+00, 0.00000000E+00)*_r0312.zxy - vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_r0312.yzx;
            _axis_x_top_to_eye0338 = vec3( 1.00000000E+00, 0.00000000E+00, 0.00000000E+00)*_top_to_eye_vec0338.zxy - vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_top_to_eye_vec0338.yzx;
            _a0338 = dot(_axis_x_view0338, _axis_x_view0338);
            _b_over_20338 = dot(_axis_x_top_to_eye0338, _axis_x_view0338);
            _TMP71 = dot(_axis_x_top_to_eye0338, _axis_x_top_to_eye0338);
            _c0338 = _TMP71 - _geom_radius*_geom_radius;
            _discriminant0350 = _b_over_20338*_b_over_20338 - _a0338*_c0338;
            _TMP85 = inversesqrt(_discriminant0350);
            _TMP75 = 1.00000000E+00/_TMP85;
            _solution00350 = _c0338/(-_b_over_20338 + _TMP75);
            _TMP337 = vec2(_solution00350, _discriminant0350);
            _TMP59 = _TMP337;
        } 
        _intersection_pos_local0320 = TEX3.xyz + _r0312*_TMP59.x;
        if (_TMP59.y > 4.99999989E-03) { 
            if (_TMP265 < 1.50000000E+00) { 
                _image_center_pos_local0358 = vec3(0.00000000E+00, 0.00000000E+00, _geom_radius);
                _TMP72 = _intersection_pos_local0320.yzx*_image_center_pos_local0358.zxy - _intersection_pos_local0320.zxy*_image_center_pos_local0358.yzx;
                _cp_len0358 = length(_TMP72);
                _dp0358 = dot(_intersection_pos_local0320, _image_center_pos_local0358);
                _t30366 = abs(_dp0358);
                _t10366 = abs(_cp_len0358);
                _t00366 = max(_t30366, _t10366);
                _t10366 = min(_t30366, _t10366);
                _t30366 = 1.00000000E+00/_t00366;
                _t30366 = _t10366*_t30366;
                _t40366 = _t30366*_t30366;
                _t00366 = -1.34804696E-02*_t40366 + 5.74773103E-02;
                _t00366 = _t00366*_t40366 - 1.21239103E-01;
                _t00366 = _t00366*_t40366 + 1.95635900E-01;
                _t00366 = _t00366*_t40366 - 3.32994610E-01;
                _t00366 = _t00366*_t40366 + 9.99995589E-01;
                _t30366 = _t00366*_t30366;
                _TMP77 = abs(_cp_len0358);
                _TMP78 = abs(_dp0358);
                if (_TMP77 > _TMP78) { 
                    _TMP76 = 1.57079601E+00 - _t30366;
                } else {
                    _TMP76 = _t30366;
                } 
                if (_dp0358 < 0.00000000E+00) { 
                    _TMP79 = 3.14159298E+00 - _TMP76;
                } else {
                    _TMP79 = _TMP76;
                } 
                if (_cp_len0358 < 0.00000000E+00) { 
                    _TMP80 = -_TMP79;
                } else {
                    _TMP80 = _TMP79;
                } 
                _arc_len0358 = _TMP80*_geom_radius;
                _v0380 = vec2(_intersection_pos_local0320.x, -_intersection_pos_local0320.y);
                _TMP81 = dot(_v0380, _v0380);
                _TMP82 = inversesqrt(_TMP81);
                _square_uv_unit0358 = _TMP82*_v0380;
                _square_uv0358 = _arc_len0358*_square_uv_unit0358;
                _video_uv0358 = _square_uv0358/TEX4.xy;
                _TMP60 = _video_uv0358;
            } else {
                if (_TMP265 < 2.50000000E+00) { 
                    _y0388 = vec2(_intersection_pos_local0320.x, -_intersection_pos_local0320.y);
                    _t30388 = abs(_intersection_pos_local0320.zz);
                    _t10388 = abs(_y0388);
                    _t00388 = max(_t30388, _t10388);
                    _t10388 = min(_t30388, _t10388);
                    _t30388 = vec2( 1.00000000E+00, 1.00000000E+00)/_t00388;
                    _t30388 = _t10388*_t30388;
                    _t40388 = _t30388*_t30388;
                    _t00388 = vec2( -1.34804696E-02, -1.34804696E-02)*_t40388 + vec2( 5.74773103E-02, 5.74773103E-02);
                    _t00388 = _t00388*_t40388 - vec2( 1.21239103E-01, 1.21239103E-01);
                    _t00388 = _t00388*_t40388 + vec2( 1.95635900E-01, 1.95635900E-01);
                    _t00388 = _t00388*_t40388 - vec2( 3.32994610E-01, 3.32994610E-01);
                    _t00388 = _t00388*_t40388 + vec2( 9.99995589E-01, 9.99995589E-01);
                    _t30388 = _t00388*_t30388;
                    _TMP83 = abs(_y0388);
                    _TMP84 = abs(_intersection_pos_local0320.zz);
                    _t30388 = vec2(_TMP83.x > _TMP84.x ? (vec2( 1.57079601E+00, 1.57079601E+00) - _t30388).x : _t30388.x, _TMP83.y > _TMP84.y ? (vec2( 1.57079601E+00, 1.57079601E+00) - _t30388).y : _t30388.y);
                    _t30388 = vec2(_intersection_pos_local0320.z < 0.00000000E+00 ? (vec2( 3.14159298E+00, 3.14159298E+00) - _t30388).x : _t30388.x, _intersection_pos_local0320.z < 0.00000000E+00 ? (vec2( 3.14159298E+00, 3.14159298E+00) - _t30388).y : _t30388.y);
                    _t30388 = vec2(_y0388.x < 0.00000000E+00 ? (-_t30388).x : _t30388.x, _y0388.y < 0.00000000E+00 ? (-_t30388).y : _t30388.y);
                    _signed_arc_len0386 = _t30388*_geom_radius;
                    _video_uv0386 = _signed_arc_len0386/TEX4.xy;
                    _TMP61 = _video_uv0386;
                } else {
                    _t30404 = abs(_intersection_pos_local0320.z);
                    _t10404 = abs(_intersection_pos_local0320.x);
                    _t00404 = max(_t30404, _t10404);
                    _t10404 = min(_t30404, _t10404);
                    _t30404 = 1.00000000E+00/_t00404;
                    _t30404 = _t10404*_t30404;
                    _t40404 = _t30404*_t30404;
                    _t00404 = -1.34804696E-02*_t40404 + 5.74773103E-02;
                    _t00404 = _t00404*_t40404 - 1.21239103E-01;
                    _t00404 = _t00404*_t40404 + 1.95635900E-01;
                    _t00404 = _t00404*_t40404 - 3.32994610E-01;
                    _t00404 = _t00404*_t40404 + 9.99995589E-01;
                    _t30404 = _t00404*_t30404;
                    _TMP77 = abs(_intersection_pos_local0320.x);
                    _TMP78 = abs(_intersection_pos_local0320.z);
                    if (_TMP77 > _TMP78) { 
                        _TMP76 = 1.57079601E+00 - _t30404;
                    } else {
                        _TMP76 = _t30404;
                    } 
                    if (_intersection_pos_local0320.z < 0.00000000E+00) { 
                        _TMP79 = 3.14159298E+00 - _TMP76;
                    } else {
                        _TMP79 = _TMP76;
                    } 
                    if (_intersection_pos_local0320.x < 0.00000000E+00) { 
                        _TMP80 = -_TMP79;
                    } else {
                        _TMP80 = _TMP79;
                    } 
                    _signed_arc_len0402 = _TMP80*_geom_radius;
                    _square_uv0402 = vec2(_signed_arc_len0402, -_intersection_pos_local0320.y);
                    _video_uv0402 = _square_uv0402/TEX4.xy;
                    _TMP61 = _video_uv0402;
                } 
                _TMP60 = _TMP61;
            } 
            _TMP28 = _TMP60;
        } else {
            _TMP28 = vec2( 1.00000000E+00, 1.00000000E+00);
        } 
        _video_uv0310 = _TMP28 + vec2( 5.00000000E-01, 5.00000000E-01);
        if (_TMP265 < 2.50000000E+00) { 
            _TMP17 = _intersection_pos_local0320;
        } else {
            _TMP17 = vec3(_intersection_pos_local0320.x, 0.00000000E+00, _intersection_pos_local0320.z);
        } 
        _TMP29 = dot(_TMP17, _TMP17);
        _TMP30 = inversesqrt(_TMP29);
        _normal10310 = _TMP30*_TMP17;
        _view_vec_right_global0424 = _view_vec_global0310 + vec3(TEX2.x, 0.00000000E+00, 0.00000000E+00);
        _view_vec_down_global0424 = _view_vec_global0310 + vec3(0.00000000E+00, -TEX2.y, 0.00000000E+00);
        _r0426.x = dot(TEX5.xyz, _view_vec_right_global0424);
        _r0426.y = dot(TEX6.xyz, _view_vec_right_global0424);
        _r0426.z = dot(TEX7.xyz, _view_vec_right_global0424);
        _r0434.x = dot(TEX5.xyz, _view_vec_down_global0424);
        _r0434.y = dot(TEX6.xyz, _view_vec_down_global0424);
        _r0434.z = dot(TEX7.xyz, _view_vec_down_global0424);
        _a0442 = _intersection_pos_local0320 - TEX3.xyz;
        _TMP31 = dot(_a0442, _normal10310);
        _TMP32 = dot(_r0426, _normal10310);
        _right_pos0424 = TEX3.xyz + (vec3(_TMP31, _TMP31, _TMP31)/_TMP32)*_r0426;
        _TMP33 = dot(_r0434, _normal10310);
        _down_pos0424 = TEX3.xyz + (vec3(_TMP31, _TMP31, _TMP31)/_TMP33)*_r0434;
        _object_right_vec0424 = _right_pos0424 - _intersection_pos_local0320;
        _object_down_vec0424 = _down_pos0424 - _intersection_pos_local0320;
        _TMP1070424[0] = vec3(_object_right_vec0424.x, _object_down_vec0424.x, 0.00000000E+00);
        _TMP1070424[1] = vec3(_object_right_vec0424.y, _object_down_vec0424.y, 0.00000000E+00);
        _TMP1070424[2] = vec3(_object_right_vec0424.z, _object_down_vec0424.z, 0.00000000E+00);
        if (_TMP265 < 1.50000000E+00) { 
            _TMP34 = vec3( 1.00000000E+00, 0.00000000E+00, 0.00000000E+00)*_intersection_pos_local0320.zxy - vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_intersection_pos_local0320.yzx;
            _TMP29 = dot(_TMP34, _TMP34);
            _TMP30 = inversesqrt(_TMP29);
            _TMP35 = _TMP30*_TMP34;
            _cotangent_unscaled0448 = _TMP35*TEX4.y;
            _TMP36 = vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_intersection_pos_local0320.zxy - vec3( 0.00000000E+00, 1.00000000E+00, 0.00000000E+00)*_intersection_pos_local0320.yzx;
            _TMP29 = dot(_TMP36, _TMP36);
            _TMP30 = inversesqrt(_TMP29);
            _TMP37 = _TMP30*_TMP36;
            _cobitangent_unscaled0448 = _TMP37*TEX4.x;
        } else {
            if (_TMP265 < 2.50000000E+00) { 
                _b0466 = vec3(_intersection_pos_local0320.x, 0.00000000E+00, _intersection_pos_local0320.z);
                _TMP38 = vec3( 1.00000000E+00, 0.00000000E+00, 0.00000000E+00)*_b0466.zxy - vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_b0466.yzx;
                _TMP29 = dot(_TMP38, _TMP38);
                _TMP30 = inversesqrt(_TMP29);
                _TMP39 = _TMP30*_TMP38;
                _tangent10448 = _TMP39*TEX4.x;
                _b0474 = vec3(0.00000000E+00, _intersection_pos_local0320.y, _intersection_pos_local0320.z);
                _TMP40 = vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_b0474.zxy - vec3( 0.00000000E+00, 1.00000000E+00, 0.00000000E+00)*_b0474.yzx;
                _TMP29 = dot(_TMP40, _TMP40);
                _TMP30 = inversesqrt(_TMP29);
                _TMP41 = _TMP30*_TMP40;
                _bitangent10448 = _TMP41*TEX4.y;
                _cotangent_unscaled0448 = _normal10310.yzx*_bitangent10448.zxy - _normal10310.zxy*_bitangent10448.yzx;
                _cobitangent_unscaled0448 = _tangent10448.yzx*_normal10310.zxy - _tangent10448.zxy*_normal10310.yzx;
            } else {
                _TMP42 = vec3( 1.00000000E+00, 0.00000000E+00, 0.00000000E+00)*_normal10310.zxy - vec3( 0.00000000E+00, 0.00000000E+00, 1.00000000E+00)*_normal10310.yzx;
                _cotangent_unscaled0448 = _TMP42*TEX4.y;
                _cobitangent_unscaled0448 = vec3(0.00000000E+00, -TEX4.x, 0.00000000E+00);
            } 
        } 
        _computed_normal0448 = _cobitangent_unscaled0448.yzx*_cotangent_unscaled0448.zxy - _cobitangent_unscaled0448.zxy*_cotangent_unscaled0448.yzx;
        _TMP43 = dot(_computed_normal0448, _computed_normal0448);
        _inv_determinant0448 = inversesqrt(_TMP43);
        _cotangent0448 = _cotangent_unscaled0448*_inv_determinant0448;
        _cobitangent0448 = _cobitangent_unscaled0448*_inv_determinant0448;
        _C0494[0] = _cotangent0448.x*_TMP1070424[0] + _cotangent0448.y*_TMP1070424[1] + _cotangent0448.z*_TMP1070424[2];
        _C0494[1] = _cobitangent0448.x*_TMP1070424[0] + _cobitangent0448.y*_TMP1070424[1] + _cobitangent0448.z*_TMP1070424[2];
        _TMP884.x = _C0494[0].x;
        _TMP884.y = _C0494[0].y;
        _TMP885.x = _C0494[1].x;
        _TMP885.y = _C0494[1].y;
        _pixel_to_video_uv[0] = _TMP884;
        _pixel_to_video_uv[1] = _TMP885;
        _video_uv_no_geom_overscan = _video_uv0310;
    } else {
        _video_uv_no_geom_overscan = _flat_video_uv1;
        _TMP103[0] = vec2(TEX2.x, 0.00000000E+00);
        _TMP103[1] = vec2(0.00000000E+00, TEX2.y);
        _pixel_to_video_uv[0] = _TMP103[0];
        _pixel_to_video_uv[1] = _TMP103[1];
    } 
    _video_uv5 = (_video_uv_no_geom_overscan - vec2( 5.00000000E-01, 5.00000000E-01))/TEX4.zw + vec2( 5.00000000E-01, 5.00000000E-01);
    _tex_uv3 = _video_uv5*InputSize*TEX1.zw;
    _scale0496 = (InputSize*TEX1.zw)/TEX4.zw;
    _TMP886.x = _pixel_to_video_uv[0].x;
    _TMP886.y = _pixel_to_video_uv[0].y;
    _TMP886.z = _pixel_to_video_uv[1].x;
    _TMP886.w = _pixel_to_video_uv[1].y;
    _TMP1020496[0] = (_TMP886*_scale0496.xxyy).xy;
    _TMP887.x = _pixel_to_video_uv[0].x;
    _TMP887.y = _pixel_to_video_uv[0].y;
    _TMP887.z = _pixel_to_video_uv[1].x;
    _TMP887.w = _pixel_to_video_uv[1].y;
    _TMP1020496[1] = (_TMP887*_scale0496.xxyy).zw;
    _abs_aa_r_offset = abs(vec2( -3.33333343E-01, 0.00000000E+00));
    _need_subpixel_aa = _abs_aa_r_offset.x + _abs_aa_r_offset.y > 0.00000000E+00;
    _a0502 = bvec2(TEX4.z != 1.00000000E+00, TEX4.w != 1.00000000E+00);
    _TMP13 = _a0502.x || _a0502.y;
    if (_TMP265 > 5.00000000E-01 || _TMP13) { 
        _TMP63 = abs(vec2( -3.33333343E-01, 0.00000000E+00));
        _subpixel_support_radius_raw0509 = vec2( 2.00000000E+00, 2.00000000E+00) + _TMP63;
        _b0515 = _subpixel_support_radius_raw0509*vec2( 1.00000000E+00, 0.00000000E+00);
        _subpixel_support_radius10509 = max(vec2( 5.00000000E-01, 5.00000000E-01), _b0515);
        _final_axis_importance20509 = (vec2( 1.00000000E+00, 0.00000000E+00)*_subpixel_support_radius_raw0509)/_subpixel_support_radius10509;
        _subpixel_support_diam20509 = 2.00000000E+00*_subpixel_support_radius10509;
        _ssd_fai0506 = vec4(_subpixel_support_diam20509.x, _subpixel_support_diam20509.y, _final_axis_importance20509.x, _final_axis_importance20509.y);
        _xy_step0506 = vec2( 8.33333358E-02, 8.33333358E-02)*_ssd_fai0506.xy;
        _xy_start_offset0506 = vec2( -5.50000000E+00, -5.50000000E+00)*_xy_step0506;
        _xy_offset00506 = _xy_start_offset0506 + vec2( 3.00000000E+00, 0.00000000E+00)*_xy_step0506;
        _xy_offset10506 = _xy_start_offset0506 + vec2( 9.00000000E+00, 1.00000000E+00)*_xy_step0506;
        _xy_offset20506 = _xy_start_offset0506 + vec2( 6.00000000E+00, 2.00000000E+00)*_xy_step0506;
        _xy_offset30506 = _xy_start_offset0506 + vec2( 1.00000000E+00, 3.00000000E+00)*_xy_step0506;
        _xy_offset40506 = _xy_start_offset0506 + vec2( 1.10000000E+01, 4.00000000E+00)*_xy_step0506;
        _xy_offset50506 = _xy_start_offset0506 + vec2( 4.00000000E+00, 5.00000000E+00)*_xy_step0506;
        _offset_g0517 = _xy_offset00506*_ssd_fai0506.zw;
        _offset_r0517 = _offset_g0517 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0517 = _offset_g0517 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0521 = abs(_offset_r0517.x);
        if (_abs_dist0521 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0521 + -1.50000000E+01)*_abs_dist0521*_abs_dist0521 + 6.00000000E+00;
        } else {
            if (_abs_dist0521 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0521 + 1.50000000E+01)*_abs_dist0521 + -2.40000000E+01)*_abs_dist0521 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0525 = abs(_offset_r0517.y);
        if (_abs_dist0525 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0525 + -1.50000000E+01)*_abs_dist0525*_abs_dist0525 + 6.00000000E+00;
        } else {
            if (_abs_dist0525 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0525 + 1.50000000E+01)*_abs_dist0525 + -2.40000000E+01)*_abs_dist0525 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0529 = abs(_offset_g0517.x);
        if (_abs_dist0529 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0529 + -1.50000000E+01)*_abs_dist0529*_abs_dist0529 + 6.00000000E+00;
        } else {
            if (_abs_dist0529 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0529 + 1.50000000E+01)*_abs_dist0529 + -2.40000000E+01)*_abs_dist0529 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0533 = abs(_offset_g0517.y);
        if (_abs_dist0533 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0533 + -1.50000000E+01)*_abs_dist0533*_abs_dist0533 + 6.00000000E+00;
        } else {
            if (_abs_dist0533 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0533 + 1.50000000E+01)*_abs_dist0533 + -2.40000000E+01)*_abs_dist0533 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0537 = abs(_offset_b0517.x);
        if (_abs_dist0537 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0537 + -1.50000000E+01)*_abs_dist0537*_abs_dist0537 + 6.00000000E+00;
        } else {
            if (_abs_dist0537 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0537 + 1.50000000E+01)*_abs_dist0537 + -2.40000000E+01)*_abs_dist0537 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0541 = abs(_offset_b0517.y);
        if (_abs_dist0541 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0541 + -1.50000000E+01)*_abs_dist0541*_abs_dist0541 + 6.00000000E+00;
        } else {
            if (_abs_dist0541 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0541 + 1.50000000E+01)*_abs_dist0541 + -2.40000000E+01)*_abs_dist0541 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w00506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _offset_g0545 = _xy_offset10506*_ssd_fai0506.zw;
        _offset_r0545 = _offset_g0545 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0545 = _offset_g0545 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0549 = abs(_offset_r0545.x);
        if (_abs_dist0549 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0549 + -1.50000000E+01)*_abs_dist0549*_abs_dist0549 + 6.00000000E+00;
        } else {
            if (_abs_dist0549 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0549 + 1.50000000E+01)*_abs_dist0549 + -2.40000000E+01)*_abs_dist0549 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0553 = abs(_offset_r0545.y);
        if (_abs_dist0553 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0553 + -1.50000000E+01)*_abs_dist0553*_abs_dist0553 + 6.00000000E+00;
        } else {
            if (_abs_dist0553 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0553 + 1.50000000E+01)*_abs_dist0553 + -2.40000000E+01)*_abs_dist0553 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0557 = abs(_offset_g0545.x);
        if (_abs_dist0557 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0557 + -1.50000000E+01)*_abs_dist0557*_abs_dist0557 + 6.00000000E+00;
        } else {
            if (_abs_dist0557 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0557 + 1.50000000E+01)*_abs_dist0557 + -2.40000000E+01)*_abs_dist0557 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0561 = abs(_offset_g0545.y);
        if (_abs_dist0561 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0561 + -1.50000000E+01)*_abs_dist0561*_abs_dist0561 + 6.00000000E+00;
        } else {
            if (_abs_dist0561 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0561 + 1.50000000E+01)*_abs_dist0561 + -2.40000000E+01)*_abs_dist0561 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0565 = abs(_offset_b0545.x);
        if (_abs_dist0565 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0565 + -1.50000000E+01)*_abs_dist0565*_abs_dist0565 + 6.00000000E+00;
        } else {
            if (_abs_dist0565 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0565 + 1.50000000E+01)*_abs_dist0565 + -2.40000000E+01)*_abs_dist0565 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0569 = abs(_offset_b0545.y);
        if (_abs_dist0569 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0569 + -1.50000000E+01)*_abs_dist0569*_abs_dist0569 + 6.00000000E+00;
        } else {
            if (_abs_dist0569 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0569 + 1.50000000E+01)*_abs_dist0569 + -2.40000000E+01)*_abs_dist0569 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w10506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _offset_g0573 = _xy_offset20506*_ssd_fai0506.zw;
        _offset_r0573 = _offset_g0573 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0573 = _offset_g0573 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0577 = abs(_offset_r0573.x);
        if (_abs_dist0577 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0577 + -1.50000000E+01)*_abs_dist0577*_abs_dist0577 + 6.00000000E+00;
        } else {
            if (_abs_dist0577 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0577 + 1.50000000E+01)*_abs_dist0577 + -2.40000000E+01)*_abs_dist0577 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0581 = abs(_offset_r0573.y);
        if (_abs_dist0581 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0581 + -1.50000000E+01)*_abs_dist0581*_abs_dist0581 + 6.00000000E+00;
        } else {
            if (_abs_dist0581 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0581 + 1.50000000E+01)*_abs_dist0581 + -2.40000000E+01)*_abs_dist0581 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0585 = abs(_offset_g0573.x);
        if (_abs_dist0585 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0585 + -1.50000000E+01)*_abs_dist0585*_abs_dist0585 + 6.00000000E+00;
        } else {
            if (_abs_dist0585 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0585 + 1.50000000E+01)*_abs_dist0585 + -2.40000000E+01)*_abs_dist0585 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0589 = abs(_offset_g0573.y);
        if (_abs_dist0589 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0589 + -1.50000000E+01)*_abs_dist0589*_abs_dist0589 + 6.00000000E+00;
        } else {
            if (_abs_dist0589 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0589 + 1.50000000E+01)*_abs_dist0589 + -2.40000000E+01)*_abs_dist0589 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0593 = abs(_offset_b0573.x);
        if (_abs_dist0593 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0593 + -1.50000000E+01)*_abs_dist0593*_abs_dist0593 + 6.00000000E+00;
        } else {
            if (_abs_dist0593 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0593 + 1.50000000E+01)*_abs_dist0593 + -2.40000000E+01)*_abs_dist0593 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0597 = abs(_offset_b0573.y);
        if (_abs_dist0597 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0597 + -1.50000000E+01)*_abs_dist0597*_abs_dist0597 + 6.00000000E+00;
        } else {
            if (_abs_dist0597 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0597 + 1.50000000E+01)*_abs_dist0597 + -2.40000000E+01)*_abs_dist0597 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w20506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _offset_g0601 = _xy_offset30506*_ssd_fai0506.zw;
        _offset_r0601 = _offset_g0601 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0601 = _offset_g0601 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0605 = abs(_offset_r0601.x);
        if (_abs_dist0605 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0605 + -1.50000000E+01)*_abs_dist0605*_abs_dist0605 + 6.00000000E+00;
        } else {
            if (_abs_dist0605 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0605 + 1.50000000E+01)*_abs_dist0605 + -2.40000000E+01)*_abs_dist0605 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0609 = abs(_offset_r0601.y);
        if (_abs_dist0609 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0609 + -1.50000000E+01)*_abs_dist0609*_abs_dist0609 + 6.00000000E+00;
        } else {
            if (_abs_dist0609 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0609 + 1.50000000E+01)*_abs_dist0609 + -2.40000000E+01)*_abs_dist0609 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0613 = abs(_offset_g0601.x);
        if (_abs_dist0613 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0613 + -1.50000000E+01)*_abs_dist0613*_abs_dist0613 + 6.00000000E+00;
        } else {
            if (_abs_dist0613 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0613 + 1.50000000E+01)*_abs_dist0613 + -2.40000000E+01)*_abs_dist0613 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0617 = abs(_offset_g0601.y);
        if (_abs_dist0617 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0617 + -1.50000000E+01)*_abs_dist0617*_abs_dist0617 + 6.00000000E+00;
        } else {
            if (_abs_dist0617 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0617 + 1.50000000E+01)*_abs_dist0617 + -2.40000000E+01)*_abs_dist0617 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0621 = abs(_offset_b0601.x);
        if (_abs_dist0621 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0621 + -1.50000000E+01)*_abs_dist0621*_abs_dist0621 + 6.00000000E+00;
        } else {
            if (_abs_dist0621 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0621 + 1.50000000E+01)*_abs_dist0621 + -2.40000000E+01)*_abs_dist0621 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0625 = abs(_offset_b0601.y);
        if (_abs_dist0625 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0625 + -1.50000000E+01)*_abs_dist0625*_abs_dist0625 + 6.00000000E+00;
        } else {
            if (_abs_dist0625 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0625 + 1.50000000E+01)*_abs_dist0625 + -2.40000000E+01)*_abs_dist0625 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w30506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _offset_g0629 = _xy_offset40506*_ssd_fai0506.zw;
        _offset_r0629 = _offset_g0629 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0629 = _offset_g0629 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0633 = abs(_offset_r0629.x);
        if (_abs_dist0633 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0633 + -1.50000000E+01)*_abs_dist0633*_abs_dist0633 + 6.00000000E+00;
        } else {
            if (_abs_dist0633 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0633 + 1.50000000E+01)*_abs_dist0633 + -2.40000000E+01)*_abs_dist0633 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0637 = abs(_offset_r0629.y);
        if (_abs_dist0637 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0637 + -1.50000000E+01)*_abs_dist0637*_abs_dist0637 + 6.00000000E+00;
        } else {
            if (_abs_dist0637 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0637 + 1.50000000E+01)*_abs_dist0637 + -2.40000000E+01)*_abs_dist0637 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0641 = abs(_offset_g0629.x);
        if (_abs_dist0641 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0641 + -1.50000000E+01)*_abs_dist0641*_abs_dist0641 + 6.00000000E+00;
        } else {
            if (_abs_dist0641 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0641 + 1.50000000E+01)*_abs_dist0641 + -2.40000000E+01)*_abs_dist0641 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0645 = abs(_offset_g0629.y);
        if (_abs_dist0645 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0645 + -1.50000000E+01)*_abs_dist0645*_abs_dist0645 + 6.00000000E+00;
        } else {
            if (_abs_dist0645 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0645 + 1.50000000E+01)*_abs_dist0645 + -2.40000000E+01)*_abs_dist0645 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0649 = abs(_offset_b0629.x);
        if (_abs_dist0649 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0649 + -1.50000000E+01)*_abs_dist0649*_abs_dist0649 + 6.00000000E+00;
        } else {
            if (_abs_dist0649 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0649 + 1.50000000E+01)*_abs_dist0649 + -2.40000000E+01)*_abs_dist0649 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0653 = abs(_offset_b0629.y);
        if (_abs_dist0653 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0653 + -1.50000000E+01)*_abs_dist0653*_abs_dist0653 + 6.00000000E+00;
        } else {
            if (_abs_dist0653 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0653 + 1.50000000E+01)*_abs_dist0653 + -2.40000000E+01)*_abs_dist0653 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w40506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _offset_g0657 = _xy_offset50506*_ssd_fai0506.zw;
        _offset_r0657 = _offset_g0657 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _offset_b0657 = _offset_g0657 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0506.zw;
        _abs_dist0661 = abs(_offset_r0657.x);
        if (_abs_dist0661 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0661 + -1.50000000E+01)*_abs_dist0661*_abs_dist0661 + 6.00000000E+00;
        } else {
            if (_abs_dist0661 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0661 + 1.50000000E+01)*_abs_dist0661 + -2.40000000E+01)*_abs_dist0661 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP64 = _TMP73/6.00000000E+00;
        _abs_dist0665 = abs(_offset_r0657.y);
        if (_abs_dist0665 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0665 + -1.50000000E+01)*_abs_dist0665*_abs_dist0665 + 6.00000000E+00;
        } else {
            if (_abs_dist0665 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0665 + 1.50000000E+01)*_abs_dist0665 + -2.40000000E+01)*_abs_dist0665 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP65 = _TMP73/6.00000000E+00;
        _abs_dist0669 = abs(_offset_g0657.x);
        if (_abs_dist0669 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0669 + -1.50000000E+01)*_abs_dist0669*_abs_dist0669 + 6.00000000E+00;
        } else {
            if (_abs_dist0669 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0669 + 1.50000000E+01)*_abs_dist0669 + -2.40000000E+01)*_abs_dist0669 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP66 = _TMP73/6.00000000E+00;
        _abs_dist0673 = abs(_offset_g0657.y);
        if (_abs_dist0673 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0673 + -1.50000000E+01)*_abs_dist0673*_abs_dist0673 + 6.00000000E+00;
        } else {
            if (_abs_dist0673 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0673 + 1.50000000E+01)*_abs_dist0673 + -2.40000000E+01)*_abs_dist0673 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP67 = _TMP73/6.00000000E+00;
        _abs_dist0677 = abs(_offset_b0657.x);
        if (_abs_dist0677 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0677 + -1.50000000E+01)*_abs_dist0677*_abs_dist0677 + 6.00000000E+00;
        } else {
            if (_abs_dist0677 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0677 + 1.50000000E+01)*_abs_dist0677 + -2.40000000E+01)*_abs_dist0677 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP68 = _TMP73/6.00000000E+00;
        _abs_dist0681 = abs(_offset_b0657.y);
        if (_abs_dist0681 < 1.00000000E+00) { 
            _TMP73 = (9.00000000E+00*_abs_dist0681 + -1.50000000E+01)*_abs_dist0681*_abs_dist0681 + 6.00000000E+00;
        } else {
            if (_abs_dist0681 < 2.00000000E+00) { 
                _TMP74 = ((-3.00000000E+00*_abs_dist0681 + 1.50000000E+01)*_abs_dist0681 + -2.40000000E+01)*_abs_dist0681 + 1.20000000E+01;
            } else {
                _TMP74 = 0.00000000E+00;
            } 
            _TMP73 = _TMP74;
        } 
        _TMP69 = _TMP73/6.00000000E+00;
        _w50506 = vec3(_TMP64*_TMP65, _TMP66*_TMP67, _TMP68*_TMP69);
        _half_sum0506 = _w00506 + _w10506 + _w20506 + _w30506 + _w40506 + _w50506;
        _w_sum0506 = _half_sum0506 + _half_sum0506.zyx;
        _w_sum_inv0506 = vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00)/_w_sum0506;
        _r0687.x = dot(_TMP1020496[0], _xy_offset00506);
        _r0687.y = dot(_TMP1020496[1], _xy_offset00506);
        _r0693.x = dot(_TMP1020496[0], _xy_offset10506);
        _r0693.y = dot(_TMP1020496[1], _xy_offset10506);
        _r0699.x = dot(_TMP1020496[0], _xy_offset20506);
        _r0699.y = dot(_TMP1020496[1], _xy_offset20506);
        _r0705.x = dot(_TMP1020496[0], _xy_offset30506);
        _r0705.y = dot(_TMP1020496[1], _xy_offset30506);
        _r0711.x = dot(_TMP1020496[0], _xy_offset40506);
        _r0711.y = dot(_TMP1020496[1], _xy_offset40506);
        _r0717.x = dot(_TMP1020496[0], _xy_offset50506);
        _r0717.y = dot(_TMP1020496[1], _xy_offset50506);
        _s0723 = _tex_uv3 + _r0687;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0723);
        _sample00506 = _TMP21.xyz;
        _s0731 = _tex_uv3 + _r0693;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0731);
        _sample10506 = _TMP21.xyz;
        _s0739 = _tex_uv3 + _r0699;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0739);
        _sample20506 = _TMP21.xyz;
        _s0747 = _tex_uv3 + _r0705;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0747);
        _sample30506 = _TMP21.xyz;
        _s0755 = _tex_uv3 + _r0711;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0755);
        _sample40506 = _TMP21.xyz;
        _s0763 = _tex_uv3 + _r0717;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0763);
        _sample50506 = _TMP21.xyz;
        _s0771 = _tex_uv3 - _r0717;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0771);
        _sample60506 = _TMP21.xyz;
        _s0779 = _tex_uv3 - _r0711;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0779);
        _sample70506 = _TMP21.xyz;
        _s0787 = _tex_uv3 - _r0705;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0787);
        _sample80506 = _TMP21.xyz;
        _s0795 = _tex_uv3 - _r0699;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0795);
        _sample90506 = _TMP21.xyz;
        _s0803 = _tex_uv3 - _r0693;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0803);
        _sample100506 = _TMP21.xyz;
        _s0811 = _tex_uv3 - _r0687;
        _TMP21 = COMPAT_TEXTURE(Texture, _s0811);
        _TMP503 = _w_sum_inv0506*(_w00506*_sample00506 + _w10506*_sample10506 + _w20506*_sample20506 + _w30506*_sample30506 + _w40506*_sample40506 + _w50506*_sample50506 + _w50506.zyx*_sample60506 + _w40506.zyx*_sample70506 + _w30506.zyx*_sample80506 + _w20506.zyx*_sample90506 + _w10506.zyx*_sample100506 + _w00506.zyx*_TMP21.xyz);
        _color2 = _TMP503;
    } else {
        if (_need_subpixel_aa) { 
            _r0823.x = dot(_TMP1020496[0], vec2( -3.33333343E-01, 0.00000000E+00));
            _r0823.y = dot(_TMP1020496[1], vec2( -3.33333343E-01, 0.00000000E+00));
            _TMP21 = COMPAT_TEXTURE(Texture, _tex_uv3);
            _color_g0819 = _TMP21.y;
            _tex_coords0835 = _tex_uv3 + _r0823;
            _TMP21 = COMPAT_TEXTURE(Texture, _tex_coords0835);
            _color_r0819 = _TMP21.x;
            _tex_coords0841 = _tex_uv3 - _r0823;
            _TMP21 = COMPAT_TEXTURE(Texture, _tex_coords0841);
            _color2 = vec3(_color_r0819, _color_g0819, _TMP21.z);
        } else {
            _TMP21 = COMPAT_TEXTURE(Texture, _tex_uv3);
            _color2 = _TMP21.xyz;
        } 
    } 
    _b0855 = vec2( 1.00000000E+00, 1.00000000E+00) - _video_uv5;
    _TMP22 = min(_video_uv5, _b0855);
    _edge_dists0853 = _TMP22*TEX4.xy;
    _a0857 = vec2(_TMP299, _TMP299) - _edge_dists0853;
    _border_penetration0853 = max(_a0857, vec2( 0.00000000E+00, 0.00000000E+00));
    _TMP23 = length(_border_penetration0853);
    _penetration_ratio0853 = _TMP23/_TMP299;
    _a0861 = 1.00000000E+00 - _penetration_ratio0853;
    _border_escape_ratio0853 = max(_a0861, 0.00000000E+00);
    _TMP24 = pow(_border_escape_ratio0853, _border_darkness);
    _TMP25 = max(1.00000000E+00, _border_compress);
    _border_dim_factor0853 = _TMP24*_TMP25;
    _TMP852 = min(_border_dim_factor0853, 1.00000000E+00);
    _final_color = _color2*_TMP852;
    _color0869 = vec4(_final_color.x, _final_color.y, _final_color.z, 1.00000000E+00);
    _b0877 = vec3(1.00000000E+00/_lcd_gamma, 1.00000000E+00/_lcd_gamma, 1.00000000E+00/_lcd_gamma);
    _TMP56 = pow(_color0869.x, _b0877.x);
    _TMP57 = pow(_color0869.y, _b0877.y);
    _TMP58 = pow(_color0869.z, _b0877.z);
    _TMP27 = vec3(_TMP56, _TMP57, _TMP58);
    _ret_0 = vec4(_TMP27.x, _TMP27.y, _TMP27.z, _color0869.w);
    FragColor = _ret_0;
    return;
} 
#endif
