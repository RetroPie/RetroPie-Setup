// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec3 _global_to_local_row2;
COMPAT_VARYING     vec3 _global_to_local_row1;
COMPAT_VARYING     vec3 _global_to_local_row0;
COMPAT_VARYING     vec4 _geom_aspect_and_overscan;
COMPAT_VARYING     vec3 _eye_pos_local;
COMPAT_VARYING     vec2 _tex_uv1;
COMPAT_VARYING     vec4 _position1;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 VARvideo_and_texture_size_inv;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec4 _position1;
    vec2 _tex_uv1;
    vec4 _video_andVARvideo_and_texture_size_inv_inv;
    vec2 _output_dummy_size_inv;
    vec3 _eye_pos_local;
    vec4 _geom_aspect_and_overscan;
    vec3 _global_to_local_row0;
    vec3 _global_to_local_row1;
    vec3 _global_to_local_row2;
};
out_vertex _ret_0;
vec3 _TMP39;
float _TMP48;
float _TMP47;
float _TMP46;
float _TMP45;
float _TMP49;
float _TMP22;
float _TMP21;
float _TMP51;
float _TMP50;
float _TMP41;
float _TMP40;
vec3 _TMP28;
float _TMP27;
float _TMP26;
float _TMP25;
float _TMP42;
float _TMP24;
float _TMP23;
float _TMP20;
float _TMP17;
float _TMP16;
float _TMP15;
float _TMP14;
input_dummy _IN1;
float _TMP239;
float _TMP245;
vec4 _r0276;
float _geom_clamped_aspect_ratio0278;
vec2 _geom_aspect0278;
vec2 _v0282;
vec3 _high_view0306;
vec3 _low_view0306;
float _len_sq0306;
float _fov0306;
float _eye_z_spherical0306;
float _num_negative_z_coords0306;
float _negate0312;
float _x0312;
float _ret0312;
float _a0316;
float _a0322;
float _arc_len0328;
float _angle_from_image_center0328;
float _z_pos0328;
vec3 _intersection_pos_local0328;
vec3 _r0360;
vec2 _square_uv0370;
vec2 _square_uv_unit0370;
float _arc_len0370;
float _angle_from_image_center0370;
float _xy_dist_from_sphere_center0370;
vec2 _xy_pos0370;
float _z_pos0370;
vec3 _intersection_pos_local0370;
vec3 _r0402;
vec2 _square_uv0412;
vec2 _square_uv_unit0412;
float _arc_len0412;
float _angle_from_image_center0412;
float _xy_dist_from_sphere_center0412;
vec2 _xy_pos0412;
float _z_pos0412;
vec3 _intersection_pos_local0412;
vec3 _r0444;
vec2 _square_uv0454;
vec2 _square_uv_unit0454;
float _arc_len0454;
float _angle_from_image_center0454;
float _xy_dist_from_sphere_center0454;
vec2 _xy_pos0454;
float _z_pos0454;
vec3 _intersection_pos_local0454;
vec3 _r0486;
vec2 _square_uv0496;
vec2 _square_uv_unit0496;
float _arc_len0496;
float _angle_from_image_center0496;
float _xy_dist_from_sphere_center0496;
vec2 _xy_pos0496;
float _z_pos0496;
vec3 _intersection_pos_local0496;
vec3 _r0528;
vec2 _square_uv0538;
vec2 _square_uv_unit0538;
float _arc_len0538;
float _angle_from_image_center0538;
float _xy_dist_from_sphere_center0538;
vec2 _xy_pos0538;
float _z_pos0538;
vec3 _intersection_pos_local0538;
vec3 _r0570;
vec2 _square_uv0580;
vec2 _square_uv_unit0580;
float _arc_len0580;
float _angle_from_image_center0580;
float _xy_dist_from_sphere_center0580;
vec2 _xy_pos0580;
float _z_pos0580;
vec3 _intersection_pos_local0580;
vec3 _r0612;
vec2 _square_uv0622;
vec2 _square_uv_unit0622;
float _arc_len0622;
float _angle_from_image_center0622;
float _xy_dist_from_sphere_center0622;
vec2 _xy_pos0622;
float _z_pos0622;
vec3 _intersection_pos_local0622;
vec3 _r0654;
vec2 _square_uv0664;
vec2 _square_uv_unit0664;
float _arc_len0664;
float _angle_from_image_center0664;
float _xy_dist_from_sphere_center0664;
vec2 _xy_pos0664;
float _z_pos0664;
vec3 _intersection_pos_local0664;
vec3 _r0696;
vec3 _eyespace_coords10704[9];
vec3 _eye_pos0704;
float _abs_radius10704;
vec2 _offset_dr_min10704;
vec2 _offset_ul_max10704;
vec2 _offset_dr10704;
vec2 _offset_ul10704;
vec2 _center_offset10704;
float _offset_z_max10704;
vec3 _eyespace_xyz_flipy10704;
vec4 _offset_zzzz10704;
vec3 _r0722;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX3;
COMPAT_VARYING vec4 TEX4;
COMPAT_VARYING vec4 TEX5;
COMPAT_VARYING vec4 TEX6;
COMPAT_VARYING vec4 TEX7;
vec3 _TMP729;
vec3 _TMP730;
vec3 _TMP731;
vec3 _TMP732;
vec3 _TMP733;
vec3 _TMP734;
float _geom_radius;
float _geom_view_dist;
float _geom_overscan_x;
float _geom_overscan_y;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    float _viewport_aspect_ratio;
    vec2 _geom_overscan;
    vec2 _geom_tilt_angle;
    vec2 _sin_tilt;
    vec2 _cos_tilt;
    vec3 _TMP68[3];
    _geom_radius = max(1.59154937E-01, 2.00000000E+00);
    _geom_view_dist = max(5.00000000E-01, 2.00000000E+00);
    _TMP20 = min(3.14159274E+00, 0.00000000E+00);
    _TMP239 = max(-3.14159274E+00, _TMP20);
    _TMP20 = min(3.14159274E+00, 0.00000000E+00);
    _TMP245 = max(-3.14159274E+00, _TMP20);
    _TMP14 = abs(0.00000000E+00);
    _TMP15 = max(_TMP14, 1.52587891E-05);
    _geom_overscan_x = max(_TMP15, 1.00000000E+00);
    _TMP16 = abs(0.00000000E+00);
    _TMP17 = max(_TMP16, 1.52587891E-05);
    _geom_overscan_y = max(_TMP17, 1.00000000E+00);
    _r0276 = VertexCoord.x*MVPMatrix[0];
    _r0276 = _r0276 + VertexCoord.y*MVPMatrix[1];
    _r0276 = _r0276 + VertexCoord.z*MVPMatrix[2];
    _r0276 = _r0276 + VertexCoord.w*MVPMatrix[3];
    _OUT._video_andVARvideo_and_texture_size_inv_inv = vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00)/vec4(InputSize.x, InputSize.y, TextureSize.x, TextureSize.y);
    _OUT._output_dummy_size_inv = vec2( 1.00000000E+00, 1.00000000E+00)/OutputSize;
    _viewport_aspect_ratio = OutputSize.x/OutputSize.y;
    _geom_clamped_aspect_ratio0278 = min(_viewport_aspect_ratio, 1.33333337E+00);
    _v0282 = vec2(_geom_clamped_aspect_ratio0278, 1.00000000E+00);
    _TMP40 = dot(_v0282, _v0282);
    _TMP41 = inversesqrt(_TMP40);
    _geom_aspect0278 = _TMP41*_v0282;
    _geom_overscan = vec2(_geom_overscan_x, _geom_overscan_y);
    _OUT._geom_aspect_and_overscan = vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_overscan.x, _geom_overscan.y);
    _geom_tilt_angle = vec2(_TMP239, _TMP245);
    _TMP21 = sin(_geom_tilt_angle.x);
    _TMP22 = sin(_geom_tilt_angle.y);
    _sin_tilt = vec2(_TMP21, _TMP22);
    _TMP23 = cos(_geom_tilt_angle.x);
    _TMP24 = cos(_geom_tilt_angle.y);
    _cos_tilt = vec2(_TMP23, _TMP24);
    _TMP68[0] = vec3(_cos_tilt.x, _sin_tilt.y*_sin_tilt.x, _cos_tilt.y*_sin_tilt.x);
    _TMP68[1] = vec3(0.00000000E+00, _cos_tilt.y, -_sin_tilt.y);
    _TMP68[2] = vec3(-_sin_tilt.x, _sin_tilt.y*_cos_tilt.x, _cos_tilt.y*_cos_tilt.x);
    _high_view0306 = vec3(0.00000000E+00, _geom_aspect0278.y, -_geom_view_dist);
    _low_view0306 = _high_view0306*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
    _len_sq0306 = dot(_high_view0306, _high_view0306);
    _TMP25 = dot(_high_view0306, _low_view0306);
    _x0312 = _TMP25/_len_sq0306;
    _negate0312 = float((_x0312 < 0.00000000E+00));
    _x0312 = abs(_x0312);
    _ret0312 = -1.87292993E-02*_x0312;
    _ret0312 = _ret0312 + 7.42610022E-02;
    _ret0312 = _ret0312*_x0312;
    _ret0312 = _ret0312 - 2.12114394E-01;
    _ret0312 = _ret0312*_x0312;
    _ret0312 = _ret0312 + 1.57072902E+00;
    _a0316 = 1.00000000E+00 - _x0312;
    _TMP49 = inversesqrt(_a0316);
    _TMP42 = 1.00000000E+00/_TMP49;
    _ret0312 = _ret0312*_TMP42;
    _ret0312 = _ret0312 - 2.00000000E+00*_negate0312*_ret0312;
    _TMP26 = _negate0312*3.14159298E+00 + _ret0312;
    _fov0306 = abs(_TMP26);
    _a0322 = _fov0306*5.00000000E-01;
    _TMP27 = sin(_a0322);
    _eye_z_spherical0306 = _geom_radius/_TMP27;
    _TMP28 = vec3(0.00000000E+00, 0.00000000E+00, _eye_z_spherical0306);
    _arc_len0328 = 0.00000000E+00/0.00000000E+00;
    _angle_from_image_center0328 = _arc_len0328/_geom_radius;
    _TMP51 = cos(_angle_from_image_center0328);
    _z_pos0328 = _TMP51*_geom_radius;
    _intersection_pos_local0328 = vec3(0.00000000E+00, -0.00000000E+00, _z_pos0328);
    _r0360.x = dot(_TMP68[0], _intersection_pos_local0328);
    _r0360.y = dot(_TMP68[1], _intersection_pos_local0328);
    _r0360.z = dot(_TMP68[2], _intersection_pos_local0328);
    _square_uv0370 = vec2( 0.00000000E+00, -5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0370, _square_uv0370);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0370 = _TMP41*_square_uv0370;
    _arc_len0370 = _square_uv0370.y/_square_uv_unit0370.y;
    _angle_from_image_center0370 = _arc_len0370/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0370);
    _xy_dist_from_sphere_center0370 = _TMP50*_geom_radius;
    _xy_pos0370 = _xy_dist_from_sphere_center0370*_square_uv_unit0370;
    _TMP51 = cos(_angle_from_image_center0370);
    _z_pos0370 = _TMP51*_geom_radius;
    _intersection_pos_local0370 = vec3(_xy_pos0370.x, -_xy_pos0370.y, _z_pos0370);
    _r0402.x = dot(_TMP68[0], _intersection_pos_local0370);
    _r0402.y = dot(_TMP68[1], _intersection_pos_local0370);
    _r0402.z = dot(_TMP68[2], _intersection_pos_local0370);
    _square_uv0412 = vec2( 0.00000000E+00, 5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0412, _square_uv0412);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0412 = _TMP41*_square_uv0412;
    _arc_len0412 = _square_uv0412.y/_square_uv_unit0412.y;
    _angle_from_image_center0412 = _arc_len0412/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0412);
    _xy_dist_from_sphere_center0412 = _TMP50*_geom_radius;
    _xy_pos0412 = _xy_dist_from_sphere_center0412*_square_uv_unit0412;
    _TMP51 = cos(_angle_from_image_center0412);
    _z_pos0412 = _TMP51*_geom_radius;
    _intersection_pos_local0412 = vec3(_xy_pos0412.x, -_xy_pos0412.y, _z_pos0412);
    _r0444.x = dot(_TMP68[0], _intersection_pos_local0412);
    _r0444.y = dot(_TMP68[1], _intersection_pos_local0412);
    _r0444.z = dot(_TMP68[2], _intersection_pos_local0412);
    _square_uv0454 = vec2( -5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0454, _square_uv0454);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0454 = _TMP41*_square_uv0454;
    _arc_len0454 = _square_uv0454.y/_square_uv_unit0454.y;
    _angle_from_image_center0454 = _arc_len0454/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0454);
    _xy_dist_from_sphere_center0454 = _TMP50*_geom_radius;
    _xy_pos0454 = _xy_dist_from_sphere_center0454*_square_uv_unit0454;
    _TMP51 = cos(_angle_from_image_center0454);
    _z_pos0454 = _TMP51*_geom_radius;
    _intersection_pos_local0454 = vec3(_xy_pos0454.x, -_xy_pos0454.y, _z_pos0454);
    _r0486.x = dot(_TMP68[0], _intersection_pos_local0454);
    _r0486.y = dot(_TMP68[1], _intersection_pos_local0454);
    _r0486.z = dot(_TMP68[2], _intersection_pos_local0454);
    _square_uv0496 = vec2( 5.00000000E-01, 0.00000000E+00)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0496, _square_uv0496);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0496 = _TMP41*_square_uv0496;
    _arc_len0496 = _square_uv0496.y/_square_uv_unit0496.y;
    _angle_from_image_center0496 = _arc_len0496/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0496);
    _xy_dist_from_sphere_center0496 = _TMP50*_geom_radius;
    _xy_pos0496 = _xy_dist_from_sphere_center0496*_square_uv_unit0496;
    _TMP51 = cos(_angle_from_image_center0496);
    _z_pos0496 = _TMP51*_geom_radius;
    _intersection_pos_local0496 = vec3(_xy_pos0496.x, -_xy_pos0496.y, _z_pos0496);
    _r0528.x = dot(_TMP68[0], _intersection_pos_local0496);
    _r0528.y = dot(_TMP68[1], _intersection_pos_local0496);
    _r0528.z = dot(_TMP68[2], _intersection_pos_local0496);
    _square_uv0538 = vec2( -5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0538, _square_uv0538);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0538 = _TMP41*_square_uv0538;
    _arc_len0538 = _square_uv0538.y/_square_uv_unit0538.y;
    _angle_from_image_center0538 = _arc_len0538/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0538);
    _xy_dist_from_sphere_center0538 = _TMP50*_geom_radius;
    _xy_pos0538 = _xy_dist_from_sphere_center0538*_square_uv_unit0538;
    _TMP51 = cos(_angle_from_image_center0538);
    _z_pos0538 = _TMP51*_geom_radius;
    _intersection_pos_local0538 = vec3(_xy_pos0538.x, -_xy_pos0538.y, _z_pos0538);
    _r0570.x = dot(_TMP68[0], _intersection_pos_local0538);
    _r0570.y = dot(_TMP68[1], _intersection_pos_local0538);
    _r0570.z = dot(_TMP68[2], _intersection_pos_local0538);
    _square_uv0580 = vec2( 5.00000000E-01, -5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0580, _square_uv0580);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0580 = _TMP41*_square_uv0580;
    _arc_len0580 = _square_uv0580.y/_square_uv_unit0580.y;
    _angle_from_image_center0580 = _arc_len0580/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0580);
    _xy_dist_from_sphere_center0580 = _TMP50*_geom_radius;
    _xy_pos0580 = _xy_dist_from_sphere_center0580*_square_uv_unit0580;
    _TMP51 = cos(_angle_from_image_center0580);
    _z_pos0580 = _TMP51*_geom_radius;
    _intersection_pos_local0580 = vec3(_xy_pos0580.x, -_xy_pos0580.y, _z_pos0580);
    _r0612.x = dot(_TMP68[0], _intersection_pos_local0580);
    _r0612.y = dot(_TMP68[1], _intersection_pos_local0580);
    _r0612.z = dot(_TMP68[2], _intersection_pos_local0580);
    _square_uv0622 = vec2( -5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0622, _square_uv0622);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0622 = _TMP41*_square_uv0622;
    _arc_len0622 = _square_uv0622.y/_square_uv_unit0622.y;
    _angle_from_image_center0622 = _arc_len0622/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0622);
    _xy_dist_from_sphere_center0622 = _TMP50*_geom_radius;
    _xy_pos0622 = _xy_dist_from_sphere_center0622*_square_uv_unit0622;
    _TMP51 = cos(_angle_from_image_center0622);
    _z_pos0622 = _TMP51*_geom_radius;
    _intersection_pos_local0622 = vec3(_xy_pos0622.x, -_xy_pos0622.y, _z_pos0622);
    _r0654.x = dot(_TMP68[0], _intersection_pos_local0622);
    _r0654.y = dot(_TMP68[1], _intersection_pos_local0622);
    _r0654.z = dot(_TMP68[2], _intersection_pos_local0622);
    _square_uv0664 = vec2( 5.00000000E-01, 5.00000000E-01)*_geom_aspect0278;
    _TMP40 = dot(_square_uv0664, _square_uv0664);
    _TMP41 = inversesqrt(_TMP40);
    _square_uv_unit0664 = _TMP41*_square_uv0664;
    _arc_len0664 = _square_uv0664.y/_square_uv_unit0664.y;
    _angle_from_image_center0664 = _arc_len0664/_geom_radius;
    _TMP50 = sin(_angle_from_image_center0664);
    _xy_dist_from_sphere_center0664 = _TMP50*_geom_radius;
    _xy_pos0664 = _xy_dist_from_sphere_center0664*_square_uv_unit0664;
    _TMP51 = cos(_angle_from_image_center0664);
    _z_pos0664 = _TMP51*_geom_radius;
    _intersection_pos_local0664 = vec3(_xy_pos0664.x, -_xy_pos0664.y, _z_pos0664);
    _r0696.x = dot(_TMP68[0], _intersection_pos_local0664);
    _r0696.y = dot(_TMP68[1], _intersection_pos_local0664);
    _r0696.z = dot(_TMP68[2], _intersection_pos_local0664);
    _num_negative_z_coords0306 = float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    _num_negative_z_coords0306 = _num_negative_z_coords0306 + float((_r0360.z < 0.00000000E+00));
    if (_num_negative_z_coords0306 > 5.00000000E-01) { 
        _TMP39 = _TMP28;
    } else {
        _eye_pos0704 = _TMP28;
        _eyespace_coords10704[0] = _r0360 - _TMP28;
        _eyespace_coords10704[1] = _r0402 - _TMP28;
        _eyespace_coords10704[2] = _r0444 - _TMP28;
        _eyespace_coords10704[3] = _r0486 - _TMP28;
        _eyespace_coords10704[4] = _r0528 - _TMP28;
        _eyespace_coords10704[5] = _r0570 - _TMP28;
        _eyespace_coords10704[6] = _r0612 - _TMP28;
        _eyespace_coords10704[7] = _r0654 - _TMP28;
        _eyespace_coords10704[8] = _r0696 - _TMP28;
        _abs_radius10704 = abs(_geom_radius);
        _offset_dr_min10704 = vec2(1.00000000E+01*_abs_radius10704, 1.00000000E+01*_abs_radius10704);
        _offset_ul_max10704 = vec2(-1.00000000E+01*_abs_radius10704, -1.00000000E+01*_abs_radius10704);
        _offset_dr10704 = _eyespace_coords10704[0].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[0].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[0].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[0].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[1].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[1].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[1].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[1].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[2].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[2].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[2].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[2].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[3].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[3].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[3].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[3].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[4].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[4].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[4].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[4].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[5].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[5].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[5].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[5].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[6].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[6].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[6].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[6].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[7].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[7].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[7].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[7].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _offset_dr10704 = _eyespace_coords10704[8].xy - (vec2( -5.00000000E-01, -5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[8].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_ul10704 = _eyespace_coords10704[8].xy - (vec2( 5.00000000E-01, 5.00000000E-01)*(_geom_aspect0278*-_eyespace_coords10704[8].z))/(_geom_view_dist*vec2( 1.00000000E+00, -1.00000000E+00));
        _offset_dr_min10704 = min(_offset_dr_min10704, _offset_dr10704);
        _offset_ul_max10704 = max(_offset_ul_max10704, _offset_ul10704);
        _center_offset10704 = 5.00000000E-01*(_offset_ul_max10704 + _offset_dr_min10704);
        _eye_pos0704.xy = _TMP28.xy + _center_offset10704;
        _eyespace_coords10704[0] = _r0360 - _eye_pos0704;
        _eyespace_coords10704[1] = _r0402 - _eye_pos0704;
        _eyespace_coords10704[2] = _r0444 - _eye_pos0704;
        _eyespace_coords10704[3] = _r0486 - _eye_pos0704;
        _eyespace_coords10704[4] = _r0528 - _eye_pos0704;
        _eyespace_coords10704[5] = _r0570 - _eye_pos0704;
        _eyespace_coords10704[6] = _r0612 - _eye_pos0704;
        _eyespace_coords10704[7] = _r0654 - _eye_pos0704;
        _eyespace_coords10704[8] = _r0696 - _eye_pos0704;
        _offset_z_max10704 = -1.00000000E+01*_geom_radius*_geom_view_dist;
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[0]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[1]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[2]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[3]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[4]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[5]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[6]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[7]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eyespace_xyz_flipy10704 = _eyespace_coords10704[8]*vec3( 1.00000000E+00, -1.00000000E+00, 1.00000000E+00);
        _offset_zzzz10704 = _eyespace_xyz_flipy10704.zzzz + (_eyespace_xyz_flipy10704.xyxy*_geom_view_dist)/(vec4( -5.00000000E-01, -5.00000000E-01, 5.00000000E-01, 5.00000000E-01)*vec4(_geom_aspect0278.x, _geom_aspect0278.y, _geom_aspect0278.x, _geom_aspect0278.y));
        if (_eyespace_xyz_flipy10704.x < 0.00000000E+00) { 
            _TMP45 = max(_offset_z_max10704, _offset_zzzz10704.x);
        } else {
            _TMP45 = _offset_z_max10704;
        } 
        if (_eyespace_xyz_flipy10704.y < 0.00000000E+00) { 
            _TMP46 = max(_TMP45, _offset_zzzz10704.y);
        } else {
            _TMP46 = _TMP45;
        } 
        if (_eyespace_xyz_flipy10704.x > 0.00000000E+00) { 
            _TMP47 = max(_TMP46, _offset_zzzz10704.z);
        } else {
            _TMP47 = _TMP46;
        } 
        if (_eyespace_xyz_flipy10704.y > 0.00000000E+00) { 
            _TMP48 = max(_TMP47, _offset_zzzz10704.w);
        } else {
            _TMP48 = _TMP47;
        } 
        _offset_z_max10704 = max(_TMP48, _eyespace_xyz_flipy10704.z);
        _eye_pos0704.z = _TMP28.z + _offset_z_max10704;
        _TMP39 = _eye_pos0704;
    } 
    _TMP729.x = _TMP68[0].x;
    _TMP729.y = _TMP68[1].x;
    _TMP729.z = _TMP68[2].x;
    _r0722.x = dot(_TMP729, _TMP39);
    _TMP730.x = _TMP68[0].y;
    _TMP730.y = _TMP68[1].y;
    _TMP730.z = _TMP68[2].y;
    _r0722.y = dot(_TMP730, _TMP39);
    _TMP731.x = _TMP68[0].z;
    _TMP731.y = _TMP68[1].z;
    _TMP731.z = _TMP68[2].z;
    _r0722.z = dot(_TMP731, _TMP39);
    _ret_0._position1 = _r0276;
    _ret_0._tex_uv1 = TexCoord.xy;
    _ret_0._video_andVARvideo_and_texture_size_inv_inv = _OUT._video_andVARvideo_and_texture_size_inv_inv;
    _ret_0._output_dummy_size_inv = _OUT._output_dummy_size_inv;
    _ret_0._eye_pos_local = _r0722;
    _ret_0._geom_aspect_and_overscan = _OUT._geom_aspect_and_overscan;
    _TMP732.x = _TMP68[0].x;
    _TMP732.y = _TMP68[1].x;
    _TMP732.z = _TMP68[2].x;
    _ret_0._global_to_local_row0 = _TMP732;
    _TMP733.x = _TMP68[0].y;
    _TMP733.y = _TMP68[1].y;
    _TMP733.z = _TMP68[2].y;
    _ret_0._global_to_local_row1 = _TMP733;
    _TMP734.x = _TMP68[0].z;
    _TMP734.y = _TMP68[1].z;
    _TMP734.z = _TMP68[2].z;
    _ret_0._global_to_local_row2 = _TMP734;
    gl_Position = _r0276;
    TEX0.xy = TexCoord.xy;
    TEX1 = _OUT._video_andVARvideo_and_texture_size_inv_inv;
    TEX2.xy = _OUT._output_dummy_size_inv;
    TEX3.xyz = _r0722;
    TEX4 = _OUT._geom_aspect_and_overscan;
    TEX5.xyz = _TMP732;
    TEX6.xyz = _TMP733;
    TEX7.xyz = _TMP734;
    return;
    TEX0.xy = _ret_0._tex_uv1;
    TEX1 = _ret_0._video_andVARvideo_and_texture_size_inv_inv;
    TEX2.xy = _ret_0._output_dummy_size_inv;
    TEX3.xyz = _ret_0._eye_pos_local;
    TEX4 = _ret_0._geom_aspect_and_overscan;
    TEX5.xyz = _ret_0._global_to_local_row0;
    TEX6.xyz = _ret_0._global_to_local_row1;
    TEX7.xyz = _ret_0._global_to_local_row2;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec3 _global_to_local_row2;
COMPAT_VARYING     vec3 _global_to_local_row1;
COMPAT_VARYING     vec3 _global_to_local_row0;
COMPAT_VARYING     vec4 _geom_aspect_and_overscan;
COMPAT_VARYING     vec3 _eye_pos_local;
COMPAT_VARYING     vec2 _tex_uv4;
COMPAT_VARYING     float _frame_rotation;
struct input_dummy {
    vec2 _video_size;
    vec2 VARvideo_and_texture_size_inv;
    vec2 _output_dummy_size;
    float _frame_count;
    float _frame_direction;
    float _frame_rotation;
};
struct out_vertex {
    vec2 _tex_uv4;
    vec4 _video_andVARvideo_and_texture_size_inv_inv;
    vec2 _output_dummy_size_inv1;
    vec3 _eye_pos_local;
    vec4 _geom_aspect_and_overscan;
    vec3 _global_to_local_row0;
    vec3 _global_to_local_row1;
    vec3 _global_to_local_row2;
};
vec4 _ret_0;
vec3 _TMP25;
float _TMP40;
float _TMP39;
float _TMP38;
float _TMP23;
float _TMP22;
float _TMP21;
vec2 _TMP20;
vec4 _TMP19;
float _TMP48;
float _TMP47;
float _TMP46;
float _TMP45;
float _TMP44;
float _TMP43;
float _TMP49;
float _TMP50;
vec2 _TMP42;
float _TMP15;
uniform sampler2D Texture;
input_dummy _IN1;
float _TMP260;
vec2 _TMP670271[2];
vec2 _scale0271;
vec3 _TMP276;
vec4 _ssd_fai0279;
vec2 _xy_step0279;
vec2 _xy_start_offset0279;
vec2 _xy_offset00279;
vec2 _xy_offset10279;
vec2 _xy_offset20279;
vec2 _xy_offset30279;
vec2 _xy_offset40279;
vec2 _xy_offset50279;
vec3 _w00279;
vec3 _w10279;
vec3 _w20279;
vec3 _w30279;
vec3 _w40279;
vec3 _w50279;
vec3 _half_sum0279;
vec3 _w_sum0279;
vec3 _w_sum_inv0279;
vec3 _sample00279;
vec3 _sample10279;
vec3 _sample20279;
vec3 _sample30279;
vec3 _sample40279;
vec3 _sample50279;
vec3 _sample60279;
vec3 _sample70279;
vec3 _sample80279;
vec3 _sample90279;
vec3 _sample100279;
vec2 _subpixel_support_radius_raw0282;
vec2 _subpixel_support_radius10282;
vec2 _final_axis_importance20282;
vec2 _subpixel_support_diam20282;
vec2 _b0288;
vec2 _offset_g0290;
vec2 _offset_r0290;
vec2 _offset_b0290;
float _abs_dist0294;
float _abs_dist0298;
float _abs_dist0302;
float _abs_dist0306;
float _abs_dist0310;
float _abs_dist0314;
vec2 _offset_g0318;
vec2 _offset_r0318;
vec2 _offset_b0318;
float _abs_dist0322;
float _abs_dist0326;
float _abs_dist0330;
float _abs_dist0334;
float _abs_dist0338;
float _abs_dist0342;
vec2 _offset_g0346;
vec2 _offset_r0346;
vec2 _offset_b0346;
float _abs_dist0350;
float _abs_dist0354;
float _abs_dist0358;
float _abs_dist0362;
float _abs_dist0366;
float _abs_dist0370;
vec2 _offset_g0374;
vec2 _offset_r0374;
vec2 _offset_b0374;
float _abs_dist0378;
float _abs_dist0382;
float _abs_dist0386;
float _abs_dist0390;
float _abs_dist0394;
float _abs_dist0398;
vec2 _offset_g0402;
vec2 _offset_r0402;
vec2 _offset_b0402;
float _abs_dist0406;
float _abs_dist0410;
float _abs_dist0414;
float _abs_dist0418;
float _abs_dist0422;
float _abs_dist0426;
vec2 _offset_g0430;
vec2 _offset_r0430;
vec2 _offset_b0430;
float _abs_dist0434;
float _abs_dist0438;
float _abs_dist0442;
float _abs_dist0446;
float _abs_dist0450;
float _abs_dist0454;
vec2 _r0460;
vec2 _r0466;
vec2 _r0472;
vec2 _r0478;
vec2 _r0484;
vec2 _r0490;
vec2 _s0496;
vec2 _s0504;
vec2 _s0512;
vec2 _s0520;
vec2 _s0528;
vec2 _s0536;
vec2 _s0544;
vec2 _s0552;
vec2 _s0560;
vec2 _s0568;
vec2 _s0576;
vec2 _s0584;
float _color_g0592;
float _color_r0592;
vec2 _r0596;
vec2 _tex_coords0608;
vec2 _tex_coords0614;
bvec2 _a0626;
float _TMP627;
vec2 _edge_dists0628;
vec2 _border_penetration0628;
float _penetration_ratio0628;
float _border_escape_ratio0628;
float _border_dim_factor0628;
vec2 _b0630;
vec2 _a0632;
float _a0636;
vec4 _color0644;
vec3 _b0652;
COMPAT_VARYING vec4 TEX0;
COMPAT_VARYING vec4 TEX1;
COMPAT_VARYING vec4 TEX2;
COMPAT_VARYING vec4 TEX4;
vec4 _TMP659;
vec4 _TMP660;
float _lcd_gamma;
float _border_darkness;
float _border_compress;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _flat_video_uv;
    vec2 _video_uv1;
    vec2 _tex_uv3;
    vec2 _abs_aa_r_offset;
    bool _need_subpixel_aa;
    vec3 _color2;
    vec3 _final_color;
    vec2 _TMP68[2];
    _lcd_gamma = max(0.00000000E+00, 2.20000005E+00);
    _TMP15 = min(5.00000000E-01, 1.49999997E-02);
    _TMP260 = max(0.00000000E+00, _TMP15);
    _border_darkness = max(0.00000000E+00, 2.00000000E+00);
    _border_compress = max(1.00000000E+00, 2.50000000E+00);
    _flat_video_uv = TEX0.xy*TextureSize*TEX1.xy;
    _TMP68[0] = vec2(TEX2.x, 0.00000000E+00);
    _TMP68[1] = vec2(0.00000000E+00, TEX2.y);
    _video_uv1 = (_flat_video_uv - vec2( 5.00000000E-01, 5.00000000E-01))/TEX4.zw + vec2( 5.00000000E-01, 5.00000000E-01);
    _tex_uv3 = _video_uv1*InputSize*TEX1.zw;
    _scale0271 = (InputSize*TEX1.zw)/TEX4.zw;
    _TMP659.x = _TMP68[0].x;
    _TMP659.y = _TMP68[0].y;
    _TMP659.z = _TMP68[1].x;
    _TMP659.w = _TMP68[1].y;
    _TMP670271[0] = (_TMP659*_scale0271.xxyy).xy;
    _TMP660.x = _TMP68[0].x;
    _TMP660.y = _TMP68[0].y;
    _TMP660.z = _TMP68[1].x;
    _TMP660.w = _TMP68[1].y;
    _TMP670271[1] = (_TMP660*_scale0271.xxyy).zw;
    _abs_aa_r_offset = abs(vec2( -3.33333343E-01, 0.00000000E+00));
    _need_subpixel_aa = _abs_aa_r_offset.x + _abs_aa_r_offset.y > 0.00000000E+00;
    _a0626 = bvec2(TEX4.z != 1.00000000E+00, TEX4.w != 1.00000000E+00);
    if (_a0626.x || _a0626.y) { 
        _TMP42 = abs(vec2( -3.33333343E-01, 0.00000000E+00));
        _subpixel_support_radius_raw0282 = vec2( 2.00000000E+00, 2.00000000E+00) + _TMP42;
        _b0288 = _subpixel_support_radius_raw0282*vec2( 1.00000000E+00, 0.00000000E+00);
        _subpixel_support_radius10282 = max(vec2( 5.00000000E-01, 5.00000000E-01), _b0288);
        _final_axis_importance20282 = (vec2( 1.00000000E+00, 0.00000000E+00)*_subpixel_support_radius_raw0282)/_subpixel_support_radius10282;
        _subpixel_support_diam20282 = 2.00000000E+00*_subpixel_support_radius10282;
        _ssd_fai0279 = vec4(_subpixel_support_diam20282.x, _subpixel_support_diam20282.y, _final_axis_importance20282.x, _final_axis_importance20282.y);
        _xy_step0279 = vec2( 8.33333358E-02, 8.33333358E-02)*_ssd_fai0279.xy;
        _xy_start_offset0279 = vec2( -5.50000000E+00, -5.50000000E+00)*_xy_step0279;
        _xy_offset00279 = _xy_start_offset0279 + vec2( 3.00000000E+00, 0.00000000E+00)*_xy_step0279;
        _xy_offset10279 = _xy_start_offset0279 + vec2( 9.00000000E+00, 1.00000000E+00)*_xy_step0279;
        _xy_offset20279 = _xy_start_offset0279 + vec2( 6.00000000E+00, 2.00000000E+00)*_xy_step0279;
        _xy_offset30279 = _xy_start_offset0279 + vec2( 1.00000000E+00, 3.00000000E+00)*_xy_step0279;
        _xy_offset40279 = _xy_start_offset0279 + vec2( 1.10000000E+01, 4.00000000E+00)*_xy_step0279;
        _xy_offset50279 = _xy_start_offset0279 + vec2( 4.00000000E+00, 5.00000000E+00)*_xy_step0279;
        _offset_g0290 = _xy_offset00279*_ssd_fai0279.zw;
        _offset_r0290 = _offset_g0290 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0290 = _offset_g0290 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0294 = abs(_offset_r0290.x);
        if (_abs_dist0294 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0294 + -1.50000000E+01)*_abs_dist0294*_abs_dist0294 + 6.00000000E+00;
        } else {
            if (_abs_dist0294 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0294 + 1.50000000E+01)*_abs_dist0294 + -2.40000000E+01)*_abs_dist0294 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0298 = abs(_offset_r0290.y);
        if (_abs_dist0298 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0298 + -1.50000000E+01)*_abs_dist0298*_abs_dist0298 + 6.00000000E+00;
        } else {
            if (_abs_dist0298 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0298 + 1.50000000E+01)*_abs_dist0298 + -2.40000000E+01)*_abs_dist0298 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0302 = abs(_offset_g0290.x);
        if (_abs_dist0302 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0302 + -1.50000000E+01)*_abs_dist0302*_abs_dist0302 + 6.00000000E+00;
        } else {
            if (_abs_dist0302 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0302 + 1.50000000E+01)*_abs_dist0302 + -2.40000000E+01)*_abs_dist0302 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0306 = abs(_offset_g0290.y);
        if (_abs_dist0306 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0306 + -1.50000000E+01)*_abs_dist0306*_abs_dist0306 + 6.00000000E+00;
        } else {
            if (_abs_dist0306 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0306 + 1.50000000E+01)*_abs_dist0306 + -2.40000000E+01)*_abs_dist0306 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0310 = abs(_offset_b0290.x);
        if (_abs_dist0310 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0310 + -1.50000000E+01)*_abs_dist0310*_abs_dist0310 + 6.00000000E+00;
        } else {
            if (_abs_dist0310 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0310 + 1.50000000E+01)*_abs_dist0310 + -2.40000000E+01)*_abs_dist0310 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0314 = abs(_offset_b0290.y);
        if (_abs_dist0314 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0314 + -1.50000000E+01)*_abs_dist0314*_abs_dist0314 + 6.00000000E+00;
        } else {
            if (_abs_dist0314 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0314 + 1.50000000E+01)*_abs_dist0314 + -2.40000000E+01)*_abs_dist0314 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w00279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _offset_g0318 = _xy_offset10279*_ssd_fai0279.zw;
        _offset_r0318 = _offset_g0318 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0318 = _offset_g0318 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0322 = abs(_offset_r0318.x);
        if (_abs_dist0322 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0322 + -1.50000000E+01)*_abs_dist0322*_abs_dist0322 + 6.00000000E+00;
        } else {
            if (_abs_dist0322 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0322 + 1.50000000E+01)*_abs_dist0322 + -2.40000000E+01)*_abs_dist0322 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0326 = abs(_offset_r0318.y);
        if (_abs_dist0326 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0326 + -1.50000000E+01)*_abs_dist0326*_abs_dist0326 + 6.00000000E+00;
        } else {
            if (_abs_dist0326 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0326 + 1.50000000E+01)*_abs_dist0326 + -2.40000000E+01)*_abs_dist0326 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0330 = abs(_offset_g0318.x);
        if (_abs_dist0330 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0330 + -1.50000000E+01)*_abs_dist0330*_abs_dist0330 + 6.00000000E+00;
        } else {
            if (_abs_dist0330 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0330 + 1.50000000E+01)*_abs_dist0330 + -2.40000000E+01)*_abs_dist0330 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0334 = abs(_offset_g0318.y);
        if (_abs_dist0334 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0334 + -1.50000000E+01)*_abs_dist0334*_abs_dist0334 + 6.00000000E+00;
        } else {
            if (_abs_dist0334 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0334 + 1.50000000E+01)*_abs_dist0334 + -2.40000000E+01)*_abs_dist0334 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0338 = abs(_offset_b0318.x);
        if (_abs_dist0338 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0338 + -1.50000000E+01)*_abs_dist0338*_abs_dist0338 + 6.00000000E+00;
        } else {
            if (_abs_dist0338 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0338 + 1.50000000E+01)*_abs_dist0338 + -2.40000000E+01)*_abs_dist0338 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0342 = abs(_offset_b0318.y);
        if (_abs_dist0342 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0342 + -1.50000000E+01)*_abs_dist0342*_abs_dist0342 + 6.00000000E+00;
        } else {
            if (_abs_dist0342 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0342 + 1.50000000E+01)*_abs_dist0342 + -2.40000000E+01)*_abs_dist0342 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w10279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _offset_g0346 = _xy_offset20279*_ssd_fai0279.zw;
        _offset_r0346 = _offset_g0346 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0346 = _offset_g0346 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0350 = abs(_offset_r0346.x);
        if (_abs_dist0350 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0350 + -1.50000000E+01)*_abs_dist0350*_abs_dist0350 + 6.00000000E+00;
        } else {
            if (_abs_dist0350 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0350 + 1.50000000E+01)*_abs_dist0350 + -2.40000000E+01)*_abs_dist0350 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0354 = abs(_offset_r0346.y);
        if (_abs_dist0354 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0354 + -1.50000000E+01)*_abs_dist0354*_abs_dist0354 + 6.00000000E+00;
        } else {
            if (_abs_dist0354 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0354 + 1.50000000E+01)*_abs_dist0354 + -2.40000000E+01)*_abs_dist0354 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0358 = abs(_offset_g0346.x);
        if (_abs_dist0358 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0358 + -1.50000000E+01)*_abs_dist0358*_abs_dist0358 + 6.00000000E+00;
        } else {
            if (_abs_dist0358 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0358 + 1.50000000E+01)*_abs_dist0358 + -2.40000000E+01)*_abs_dist0358 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0362 = abs(_offset_g0346.y);
        if (_abs_dist0362 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0362 + -1.50000000E+01)*_abs_dist0362*_abs_dist0362 + 6.00000000E+00;
        } else {
            if (_abs_dist0362 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0362 + 1.50000000E+01)*_abs_dist0362 + -2.40000000E+01)*_abs_dist0362 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0366 = abs(_offset_b0346.x);
        if (_abs_dist0366 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0366 + -1.50000000E+01)*_abs_dist0366*_abs_dist0366 + 6.00000000E+00;
        } else {
            if (_abs_dist0366 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0366 + 1.50000000E+01)*_abs_dist0366 + -2.40000000E+01)*_abs_dist0366 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0370 = abs(_offset_b0346.y);
        if (_abs_dist0370 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0370 + -1.50000000E+01)*_abs_dist0370*_abs_dist0370 + 6.00000000E+00;
        } else {
            if (_abs_dist0370 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0370 + 1.50000000E+01)*_abs_dist0370 + -2.40000000E+01)*_abs_dist0370 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w20279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _offset_g0374 = _xy_offset30279*_ssd_fai0279.zw;
        _offset_r0374 = _offset_g0374 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0374 = _offset_g0374 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0378 = abs(_offset_r0374.x);
        if (_abs_dist0378 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0378 + -1.50000000E+01)*_abs_dist0378*_abs_dist0378 + 6.00000000E+00;
        } else {
            if (_abs_dist0378 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0378 + 1.50000000E+01)*_abs_dist0378 + -2.40000000E+01)*_abs_dist0378 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0382 = abs(_offset_r0374.y);
        if (_abs_dist0382 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0382 + -1.50000000E+01)*_abs_dist0382*_abs_dist0382 + 6.00000000E+00;
        } else {
            if (_abs_dist0382 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0382 + 1.50000000E+01)*_abs_dist0382 + -2.40000000E+01)*_abs_dist0382 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0386 = abs(_offset_g0374.x);
        if (_abs_dist0386 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0386 + -1.50000000E+01)*_abs_dist0386*_abs_dist0386 + 6.00000000E+00;
        } else {
            if (_abs_dist0386 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0386 + 1.50000000E+01)*_abs_dist0386 + -2.40000000E+01)*_abs_dist0386 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0390 = abs(_offset_g0374.y);
        if (_abs_dist0390 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0390 + -1.50000000E+01)*_abs_dist0390*_abs_dist0390 + 6.00000000E+00;
        } else {
            if (_abs_dist0390 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0390 + 1.50000000E+01)*_abs_dist0390 + -2.40000000E+01)*_abs_dist0390 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0394 = abs(_offset_b0374.x);
        if (_abs_dist0394 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0394 + -1.50000000E+01)*_abs_dist0394*_abs_dist0394 + 6.00000000E+00;
        } else {
            if (_abs_dist0394 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0394 + 1.50000000E+01)*_abs_dist0394 + -2.40000000E+01)*_abs_dist0394 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0398 = abs(_offset_b0374.y);
        if (_abs_dist0398 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0398 + -1.50000000E+01)*_abs_dist0398*_abs_dist0398 + 6.00000000E+00;
        } else {
            if (_abs_dist0398 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0398 + 1.50000000E+01)*_abs_dist0398 + -2.40000000E+01)*_abs_dist0398 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w30279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _offset_g0402 = _xy_offset40279*_ssd_fai0279.zw;
        _offset_r0402 = _offset_g0402 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0402 = _offset_g0402 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0406 = abs(_offset_r0402.x);
        if (_abs_dist0406 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0406 + -1.50000000E+01)*_abs_dist0406*_abs_dist0406 + 6.00000000E+00;
        } else {
            if (_abs_dist0406 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0406 + 1.50000000E+01)*_abs_dist0406 + -2.40000000E+01)*_abs_dist0406 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0410 = abs(_offset_r0402.y);
        if (_abs_dist0410 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0410 + -1.50000000E+01)*_abs_dist0410*_abs_dist0410 + 6.00000000E+00;
        } else {
            if (_abs_dist0410 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0410 + 1.50000000E+01)*_abs_dist0410 + -2.40000000E+01)*_abs_dist0410 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0414 = abs(_offset_g0402.x);
        if (_abs_dist0414 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0414 + -1.50000000E+01)*_abs_dist0414*_abs_dist0414 + 6.00000000E+00;
        } else {
            if (_abs_dist0414 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0414 + 1.50000000E+01)*_abs_dist0414 + -2.40000000E+01)*_abs_dist0414 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0418 = abs(_offset_g0402.y);
        if (_abs_dist0418 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0418 + -1.50000000E+01)*_abs_dist0418*_abs_dist0418 + 6.00000000E+00;
        } else {
            if (_abs_dist0418 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0418 + 1.50000000E+01)*_abs_dist0418 + -2.40000000E+01)*_abs_dist0418 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0422 = abs(_offset_b0402.x);
        if (_abs_dist0422 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0422 + -1.50000000E+01)*_abs_dist0422*_abs_dist0422 + 6.00000000E+00;
        } else {
            if (_abs_dist0422 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0422 + 1.50000000E+01)*_abs_dist0422 + -2.40000000E+01)*_abs_dist0422 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0426 = abs(_offset_b0402.y);
        if (_abs_dist0426 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0426 + -1.50000000E+01)*_abs_dist0426*_abs_dist0426 + 6.00000000E+00;
        } else {
            if (_abs_dist0426 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0426 + 1.50000000E+01)*_abs_dist0426 + -2.40000000E+01)*_abs_dist0426 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w40279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _offset_g0430 = _xy_offset50279*_ssd_fai0279.zw;
        _offset_r0430 = _offset_g0430 - vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _offset_b0430 = _offset_g0430 + vec2( -3.33333343E-01, 0.00000000E+00)*_ssd_fai0279.zw;
        _abs_dist0434 = abs(_offset_r0430.x);
        if (_abs_dist0434 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0434 + -1.50000000E+01)*_abs_dist0434*_abs_dist0434 + 6.00000000E+00;
        } else {
            if (_abs_dist0434 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0434 + 1.50000000E+01)*_abs_dist0434 + -2.40000000E+01)*_abs_dist0434 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP43 = _TMP49/6.00000000E+00;
        _abs_dist0438 = abs(_offset_r0430.y);
        if (_abs_dist0438 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0438 + -1.50000000E+01)*_abs_dist0438*_abs_dist0438 + 6.00000000E+00;
        } else {
            if (_abs_dist0438 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0438 + 1.50000000E+01)*_abs_dist0438 + -2.40000000E+01)*_abs_dist0438 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP44 = _TMP49/6.00000000E+00;
        _abs_dist0442 = abs(_offset_g0430.x);
        if (_abs_dist0442 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0442 + -1.50000000E+01)*_abs_dist0442*_abs_dist0442 + 6.00000000E+00;
        } else {
            if (_abs_dist0442 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0442 + 1.50000000E+01)*_abs_dist0442 + -2.40000000E+01)*_abs_dist0442 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP45 = _TMP49/6.00000000E+00;
        _abs_dist0446 = abs(_offset_g0430.y);
        if (_abs_dist0446 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0446 + -1.50000000E+01)*_abs_dist0446*_abs_dist0446 + 6.00000000E+00;
        } else {
            if (_abs_dist0446 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0446 + 1.50000000E+01)*_abs_dist0446 + -2.40000000E+01)*_abs_dist0446 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP46 = _TMP49/6.00000000E+00;
        _abs_dist0450 = abs(_offset_b0430.x);
        if (_abs_dist0450 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0450 + -1.50000000E+01)*_abs_dist0450*_abs_dist0450 + 6.00000000E+00;
        } else {
            if (_abs_dist0450 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0450 + 1.50000000E+01)*_abs_dist0450 + -2.40000000E+01)*_abs_dist0450 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP47 = _TMP49/6.00000000E+00;
        _abs_dist0454 = abs(_offset_b0430.y);
        if (_abs_dist0454 < 1.00000000E+00) { 
            _TMP49 = (9.00000000E+00*_abs_dist0454 + -1.50000000E+01)*_abs_dist0454*_abs_dist0454 + 6.00000000E+00;
        } else {
            if (_abs_dist0454 < 2.00000000E+00) { 
                _TMP50 = ((-3.00000000E+00*_abs_dist0454 + 1.50000000E+01)*_abs_dist0454 + -2.40000000E+01)*_abs_dist0454 + 1.20000000E+01;
            } else {
                _TMP50 = 0.00000000E+00;
            } 
            _TMP49 = _TMP50;
        } 
        _TMP48 = _TMP49/6.00000000E+00;
        _w50279 = vec3(_TMP43*_TMP44, _TMP45*_TMP46, _TMP47*_TMP48);
        _half_sum0279 = _w00279 + _w10279 + _w20279 + _w30279 + _w40279 + _w50279;
        _w_sum0279 = _half_sum0279 + _half_sum0279.zyx;
        _w_sum_inv0279 = vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00)/_w_sum0279;
        _r0460.x = dot(_TMP670271[0], _xy_offset00279);
        _r0460.y = dot(_TMP670271[1], _xy_offset00279);
        _r0466.x = dot(_TMP670271[0], _xy_offset10279);
        _r0466.y = dot(_TMP670271[1], _xy_offset10279);
        _r0472.x = dot(_TMP670271[0], _xy_offset20279);
        _r0472.y = dot(_TMP670271[1], _xy_offset20279);
        _r0478.x = dot(_TMP670271[0], _xy_offset30279);
        _r0478.y = dot(_TMP670271[1], _xy_offset30279);
        _r0484.x = dot(_TMP670271[0], _xy_offset40279);
        _r0484.y = dot(_TMP670271[1], _xy_offset40279);
        _r0490.x = dot(_TMP670271[0], _xy_offset50279);
        _r0490.y = dot(_TMP670271[1], _xy_offset50279);
        _s0496 = _tex_uv3 + _r0460;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0496);
        _sample00279 = _TMP19.xyz;
        _s0504 = _tex_uv3 + _r0466;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0504);
        _sample10279 = _TMP19.xyz;
        _s0512 = _tex_uv3 + _r0472;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0512);
        _sample20279 = _TMP19.xyz;
        _s0520 = _tex_uv3 + _r0478;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0520);
        _sample30279 = _TMP19.xyz;
        _s0528 = _tex_uv3 + _r0484;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0528);
        _sample40279 = _TMP19.xyz;
        _s0536 = _tex_uv3 + _r0490;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0536);
        _sample50279 = _TMP19.xyz;
        _s0544 = _tex_uv3 - _r0490;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0544);
        _sample60279 = _TMP19.xyz;
        _s0552 = _tex_uv3 - _r0484;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0552);
        _sample70279 = _TMP19.xyz;
        _s0560 = _tex_uv3 - _r0478;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0560);
        _sample80279 = _TMP19.xyz;
        _s0568 = _tex_uv3 - _r0472;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0568);
        _sample90279 = _TMP19.xyz;
        _s0576 = _tex_uv3 - _r0466;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0576);
        _sample100279 = _TMP19.xyz;
        _s0584 = _tex_uv3 - _r0460;
        _TMP19 = COMPAT_TEXTURE(Texture, _s0584);
        _TMP276 = _w_sum_inv0279*(_w00279*_sample00279 + _w10279*_sample10279 + _w20279*_sample20279 + _w30279*_sample30279 + _w40279*_sample40279 + _w50279*_sample50279 + _w50279.zyx*_sample60279 + _w40279.zyx*_sample70279 + _w30279.zyx*_sample80279 + _w20279.zyx*_sample90279 + _w10279.zyx*_sample100279 + _w00279.zyx*_TMP19.xyz);
        _color2 = _TMP276;
    } else {
        if (_need_subpixel_aa) { 
            _r0596.x = dot(_TMP670271[0], vec2( -3.33333343E-01, 0.00000000E+00));
            _r0596.y = dot(_TMP670271[1], vec2( -3.33333343E-01, 0.00000000E+00));
            _TMP19 = COMPAT_TEXTURE(Texture, _tex_uv3);
            _color_g0592 = _TMP19.y;
            _tex_coords0608 = _tex_uv3 + _r0596;
            _TMP19 = COMPAT_TEXTURE(Texture, _tex_coords0608);
            _color_r0592 = _TMP19.x;
            _tex_coords0614 = _tex_uv3 - _r0596;
            _TMP19 = COMPAT_TEXTURE(Texture, _tex_coords0614);
            _color2 = vec3(_color_r0592, _color_g0592, _TMP19.z);
        } else {
            _TMP19 = COMPAT_TEXTURE(Texture, _tex_uv3);
            _color2 = _TMP19.xyz;
        } 
    } 
    _b0630 = vec2( 1.00000000E+00, 1.00000000E+00) - _video_uv1;
    _TMP20 = min(_video_uv1, _b0630);
    _edge_dists0628 = _TMP20*TEX4.xy;
    _a0632 = vec2(_TMP260, _TMP260) - _edge_dists0628;
    _border_penetration0628 = max(_a0632, vec2( 0.00000000E+00, 0.00000000E+00));
    _TMP21 = length(_border_penetration0628);
    _penetration_ratio0628 = _TMP21/_TMP260;
    _a0636 = 1.00000000E+00 - _penetration_ratio0628;
    _border_escape_ratio0628 = max(_a0636, 0.00000000E+00);
    _TMP22 = pow(_border_escape_ratio0628, _border_darkness);
    _TMP23 = max(1.00000000E+00, _border_compress);
    _border_dim_factor0628 = _TMP22*_TMP23;
    _TMP627 = min(_border_dim_factor0628, 1.00000000E+00);
    _final_color = _color2*_TMP627;
    _color0644 = vec4(_final_color.x, _final_color.y, _final_color.z, 1.00000000E+00);
    _b0652 = vec3(1.00000000E+00/_lcd_gamma, 1.00000000E+00/_lcd_gamma, 1.00000000E+00/_lcd_gamma);
    _TMP38 = pow(_color0644.x, _b0652.x);
    _TMP39 = pow(_color0644.y, _b0652.y);
    _TMP40 = pow(_color0644.z, _b0652.z);
    _TMP25 = vec3(_TMP38, _TMP39, _TMP40);
    _ret_0 = vec4(_TMP25.x, _TMP25.y, _TMP25.z, _color0644.w);
    FragColor = _ret_0;
    return;
} 
#endif
